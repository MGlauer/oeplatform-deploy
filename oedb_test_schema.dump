--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.14
-- Dumped by pg_dump version 9.5.14

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: _boundaries; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _boundaries;


--
-- Name: _demand; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _demand;


--
-- Name: _grid; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _grid;


--
-- Name: _model_draft; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _model_draft;


--
-- Name: _reference; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _reference;


--
-- Name: _sandbox; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _sandbox;


--
-- Name: _schema1; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _schema1;


--
-- Name: _schema2; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _schema2;


--
-- Name: _schema3; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _schema3;


--
-- Name: _supply; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _supply;


--
-- Name: _test; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA _test;


--
-- Name: boundaries; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA boundaries;


--
-- Name: calc_renpass_gis; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA calc_renpass_gis;


--
-- Name: demand; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA demand;


--
-- Name: grid; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA grid;


--
-- Name: model_draft; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA model_draft;


--
-- Name: reference; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA reference;


--
-- Name: sandbox; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA sandbox;


--
-- Name: schema1; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA schema1;


--
-- Name: schema2; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA schema2;


--
-- Name: schema3; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA schema3;


--
-- Name: supply; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA supply;


--
-- Name: test; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA test;


--
-- Name: topology; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA topology;


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: plpython3u; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS plpython3u WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpython3u; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION plpython3u IS 'PL/Python3U untrusted procedural language';


--
-- Name: plpythonu; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS plpythonu WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpythonu; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION plpythonu IS 'PL/PythonU untrusted procedural language';


--
-- Name: hstore; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS hstore WITH SCHEMA public;


--
-- Name: EXTENSION hstore; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION hstore IS 'data type for storing sets of (key, value) pairs';


--
-- Name: postgis; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA public;


--
-- Name: EXTENSION postgis; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION postgis IS 'PostGIS geometry, geography, and raster spatial types and functions';


--
-- Name: postgis_topology; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS postgis_topology WITH SCHEMA topology;


--
-- Name: EXTENSION postgis_topology; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION postgis_topology IS 'PostGIS topology spatial types and functions';


--
-- Name: db_to_csv(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.db_to_csv(path text) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
  tables RECORD;
  statement TEXT;
begin
  FOR tables IN 
    SELECT (table_schema || '.' || table_name) AS schema_table
    FROM information_schema.tables t INNER JOIN information_schema.schemata s 
    ON s.schema_name = t.table_schema 
    WHERE t.table_schema NOT IN ('pg_catalog', 'information_schema', 'configuration')
    ORDER BY schema_table
  LOOP
    statement := 'COPY ' || tables.schema_table || ' TO ''' || path || '/' || tables.schema_table || '.csv' ||''' DELIMITER '';'' CSV HEADER';
    EXECUTE statement;
  END LOOP;
  return;  
end;
$$;


SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: bkg_gn250_b; Type: TABLE; Schema: boundaries; Owner: -
--

CREATE TABLE boundaries.bkg_gn250_b (
    reference_date date NOT NULL,
    id integer NOT NULL,
    nnid character varying(16),
    datum character varying(10),
    oba character varying(40),
    oba_wert character varying(40),
    name character varying(90),
    sprache character varying(25),
    genus character varying(10),
    name2 character varying(90),
    sprache2 character varying(25),
    genus2 character varying(10),
    zusatz character varying(40),
    ags character varying(8),
    rs character varying(12),
    hoehe character varying(8),
    hoehe_ger character varying(5),
    ewz character varying(8),
    ewz_ger character varying(8),
    gewk character varying(18),
    gemteil character varying(4),
    virtuell character varying(4),
    gemeinde character varying(40),
    verwgem character varying(40),
    kreis character varying(40),
    regbezirk character varying(40),
    bundesland character varying(40),
    staat character varying(40),
    geola character varying(6),
    geobr character varying(6),
    gkre numeric,
    gkho numeric,
    utmre numeric,
    utmho numeric,
    box_geo character varying(250),
    box_gk character varying(250),
    box_utm character varying(250),
    geom public.geometry(MultiPolygon,31467)
);


--
-- Name: TABLE bkg_gn250_b; Type: COMMENT; Schema: boundaries; Owner: -
--

COMMENT ON TABLE boundaries.bkg_gn250_b IS '{	"title": "BKG - Geographische Namen 1:250 000 - GN250 - Darstellung als Bounding-Boxes (Polygon)",
	"description": "Die Geographischen Namen beinhalten Namen der Objektbereiche Siedlung, Verkehr, Vegetation, Gewässer, Relief und Gebiete. Der Datensatz GN250 orientiert sich am Maßstab 1:250 000 und umfasst ca. 134.000 Einträge. Die Lage der Objekte wird jeweils als Punktgeometrie über eine einzelne Koordinate (Punktgeometrie) und über kleinste umschreibende Rechtecke (Bounding Boxes) beschrieben.",
	"language": [ "ger" ],
	"spatial": 
		{"location": "none",
		"extent": "Germany",
		"resolution": "vector"},
	"temporal": 
		{"reference_date": "2015-12-31",
		"start": "none",
		"end": "none",
		"resolution": "none"},
	"sources": [
		{"name": "Dienstleistungszentrum des Bundes für Geoinformation und Geodäsie - Open Data - Geographische Namen 1:250 000 - GN250", 
		"description": "Die Geographischen Namen beinhalten Namen der Objektbereiche Siedlung, Verkehr, Vegetation, Gewässer, Relief und Gebiete.", 
		"url": "http://www.geodatenzentrum.de/geodaten/gdz_rahmen.gdz_div?gdz_spr=deu&gdz_akt_zeile=5&gdz_anz_zeile=1&gdz_unt_zeile=20&gdz_user_id=0", 
		"license": "Geodatenzugangsgesetz (GeoZG)", 
		"copyright": "© Bundesamt für Kartographie und Geodäsie - Außenstelle Leipzig - Dienstleistungszentrum. Alle Rechte vorbehalten. "},
		{"name": "Bundesamt für Kartographie und Geodäsie - Geographische Namen 1:250 000 (GN250) - Dokumentation", 
		"description": "Datensatzbeschreibung als PDF", 
		"url": "http://sg.geodatenzentrum.de/web_download/gn/gn250/gn250.pdf", 
		"license": "Geodatenzugangsgesetz (GeoZG)", 
		"copyright": "© GeoBasis-DE / BKG 2016 (Daten verändert)"},
		{"name": "BKG - Geographische Namen 1:250 000 - GN250", 
		"description": "Der Datenbestand umfasst sämtliche Verwaltungseinheiten aller hierarchischen Verwaltungsebenen vom Staat bis zu den Gemeinden mit ihren Verwaltungsgrenzen, statistischen Schlüsselzahlen und dem Namen der Verwaltungseinheit sowie der spezifischen Bezeichnung der Verwaltungsebene des jeweiligen Bundeslandes. ", 
		"url": "http://www.bkg.bund.de", 
		"license": "Geodatenzugangsgesetz (GeoZG)", 
		"copyright": "© GeoBasis-DE / BKG 2017 (Daten verändert)"} ],
	"license": 
		{"id": "",
		"name": "Gesetz über den Zugang zu digitalen Geodaten (Geodatenzugangsgesetz - GeoZG)",
		"version": "Geändert durch Art. 1 G v. 7.11.2012",
		"url": "http://www.gesetze-im-internet.de/bundesrecht/geozg/gesamt.pdf",
		"instruction": "",
		"copyright": "© GeoBasis-DE / BKG 2017 (Daten verändert)"},
	"contributors": [
		{"name": "Ludee", "email": "", "date": "2017-07-03", "comment": "Create table"},
		{"name": "Ludee", "email": "", "date": "2017-07-03", "comment": "Add metadata v1.3"} ],
	"resources": [
		{"name": "boundaries.bkg_gn250_b",		
		"format": "PostgreSQL",
		"fields": [
			{"name": "reference_date", "description": "Reference date", "unit": "none"},
			{"name": "id", "description": "Unique identifier", "unit": "none"},
			{"name": "nnid", "description": "Nationaler Namensidentifikator", "unit": ""},
			{"name": "datum", "description": "Datum der letzten Modifikation des Namensobjekts (TT.MM.JJJJ)", "unit": ""},
			{"name": "oba", "description": "Name der ATKIS-Objektart, der das Namensobjekt angehört", "unit": ""},
			{"name": "oba_wert", "description": "genauere Spezifizierung des Namensobjektes innerhalb der Objektart", "unit": ""},
			{"name": "name", "description": "Name des geographischen Namenobjekts (amtlicher Name der SPRACHE DEUTSCH)", "unit": ""},
			{"name": "sprache", "description": "Sprache, der NAME zuzuordnen ist", "unit": ""},
			{"name": "genus", "description": "Geschlecht, das NAME zugeordnet ist (m, f, n, p)", "unit": ""},
			{"name": "name2", "description": "Synonym des Objektnamens (u.a. sorbischer o. friesischer o. dänischer Name)", "unit": ""},
			{"name": "sprache2", "description": "Sprache, der NAME2 zuzuordnen ist", "unit": ""},
			{"name": "genus2", "description": "Geschlecht, das NAME2 zugeordnet ist (m, f, n, p)", "unit": ""},
			{"name": "zusatz", "description": "Namenszusatz (bei mehreren wird einer zufällig ausgewählt)", "unit": ""},
			{"name": "ags", "description": "Amtlicher Gemeindeschlüssel (Der AGS wird explizit für alle Gemeinden, Kreise, Regierungsbezirke und Bundesländer angegeben)", "unit": ""},
			{"name": "rs", "description": "Regionalschlüssel (Existiert für alle Verwaltungseinheiten Gemeindeteil, Gemeinde, Verwaltungsgemeinschaft, Kreis, Regierungsbezirk, Land, Staat)", "unit": ""},
			{"name": "hoehe", "description": "Höhe über NN (Meterangabe; für die Objektarten Ortslage und Besonderer Höhenpunkt)", "unit": "Meter"},
			{"name": "hoehe_ger", "description": "Gerechnete Höhe über NHN (Meterangabe; für die Objektart Ortslage)", "unit": "Meter"},
			{"name": "ewz", "description": "Einwohnerzahl von Gemeinden (Wird nur für Verwaltungseinheitenangegeben)", "unit": "Einwohner"},
			{"name": "ewz_ger", "description": "Gerechnete Einwohnerzahl für alle Ortslagen", "unit": ""},
			{"name": "gewk", "description": "Gewässerkennziffer (eindeutige Gewässerkennziffer nach Bund/Länder-Arbeitsgemeinschaft Wasser (LAWA))", "unit": ""},
			{"name": "gemteil", "description": "Ja/Nein (Ist Gemeindeteil oder nicht)", "unit": ""},
			{"name": "virtuell", "description": "Ja/Nein (Ist eine selbstständige Gemeinde ohne reale Ortslage oder nicht)", "unit": ""},
			{"name": "gemeinde", "description": "Name der Gemeinde (für Ortslagen, Gemeindeteile)", "unit": ""},
			{"name": "verwgem", "description": "Name der Verwaltungsgemeinschaft (für Ortslagen, Gemeindeteile, Gemeinden)", "unit": ""},
			{"name": "kreis", "description": "Name des Kreises (für Ortslagen, Gemeindeteile, Gemeinden, Verwaltungsgemeinschaften)", "unit": ""},
			{"name": "regbezirk", "description": "Name des Regierungsbezirks (für Ortslagen, Gemeindeteile, Gemeinden, Verwaltungsgemeinschaften, Kreise)", "unit": ""},
			{"name": "bundesland", "description": "Name des Bundeslandes (für Ortslagen, Gemeindeteile, Gemeinden, Verwaltungsgemeinschaften, Kreise, Regierungsbezirke)", "unit": ""},
			{"name": "staat", "description": "Zweibuchstaben-Code (ISO 3166, DIN-NABD 10.2 2-92)(für Ortslagen und Verwaltungseinheiten)", "unit": ""},
			{"name": "geola", "description": "Geographische Länge (Grad, Minuten, Sekunden (GGMMSS) )", "unit": ""},
			{"name": "geobr", "description": "Geographische Breite (Grad, Minuten, Sekunden (GGMMSS) )", "unit": ""},
			{"name": "gkre", "description": "Gauß-Krüger Rechtswert (m; vgl. Georeferenzierung unter Punkt 1 für Details)", "unit": ""},
			{"name": "gkho", "description": "Gauß-Krüger Hochwert (m; vgl. Georeferenzierung unter Punkt 1 für Details)", "unit": ""},
			{"name": "utmre", "description": "UTM Rechtswert (m, vgl. Georeferenzierung unter Punkt 1 für Details)", "unit": ""},
			{"name": "utmho", "description": "UTM Hochwert (m, vgl. Georeferenzierung unter Punkt 1 für Details)", "unit": ""},
			{"name": "box_geo", "description": "Kleinstes umschließendes Rechteck für das Objekt in geographischen Koordinaten, für Punktobjekte künstliches Rechteck 0,00001 Grad x 0,00001 Grad mit (GEOLA, GEOBR) als Mittelpunkt. OGC Well Known Text (WKT) Format", "unit": ""},
			{"name": "box_gk", "description": "Kleinstes umschließendes Rechteck für das Objekt in Gauß-Krüger-Koordinaten, für Punktobjekte künstliches Rechteck 1m x 1m mit (GKRE, GKHO) als Mittelpunkt. OGC Well Known Text (WKT) Format", "unit": ""},
			{"name": "box_utm", "description": "Kleinstes umschließendes Rechteck für das Objekt in UTM-Koordinaten, für Punktobjekte künstliches Rechteck 1m x 1m mit (UTMRE, UTMHO) als Mittelpunkt. OGC Well Known Text (WKT) Format", "unit": ""},
			{"name": "geom", "description": "Geometrie", "unit": ""} ] } ],
	"metadata_version": "1.3"}';


--
-- Name: bkg_gn250_b_id_seq; Type: SEQUENCE; Schema: boundaries; Owner: -
--

CREATE SEQUENCE boundaries.bkg_gn250_b_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: bkg_gn250_b_id_seq; Type: SEQUENCE OWNED BY; Schema: boundaries; Owner: -
--

ALTER SEQUENCE boundaries.bkg_gn250_b_id_seq OWNED BY boundaries.bkg_gn250_b.id;


--
-- Name: _edit_base; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public._edit_base (
    _id bigint NOT NULL,
    _message text,
    _user character varying(50),
    _submitted timestamp without time zone DEFAULT now(),
    _autocheck boolean DEFAULT false,
    _humancheck boolean DEFAULT false,
    _type character varying(8),
    _applied boolean DEFAULT false
);


--
-- Name: _bkg_gn250_b_edit; Type: TABLE; Schema: _boundaries; Owner: -
--

CREATE TABLE _boundaries._bkg_gn250_b_edit (
    reference_date date NOT NULL,
    id integer DEFAULT nextval('boundaries.bkg_gn250_b_id_seq'::regclass) NOT NULL,
    nnid character varying(16),
    datum character varying(10),
    oba character varying(40),
    oba_wert character varying(40),
    name character varying(90),
    sprache character varying(25),
    genus character varying(10),
    name2 character varying(90),
    sprache2 character varying(25),
    genus2 character varying(10),
    zusatz character varying(40),
    ags character varying(8),
    rs character varying(12),
    hoehe character varying(8),
    hoehe_ger character varying(5),
    ewz character varying(8),
    ewz_ger character varying(8),
    gewk character varying(18),
    gemteil character varying(4),
    virtuell character varying(4),
    gemeinde character varying(40),
    verwgem character varying(40),
    kreis character varying(40),
    regbezirk character varying(40),
    bundesland character varying(40),
    staat character varying(40),
    geola character varying(6),
    geobr character varying(6),
    gkre numeric,
    gkho numeric,
    utmre numeric,
    utmho numeric,
    box_geo character varying(250),
    box_gk character varying(250),
    box_utm character varying(250),
    geom public.geometry(MultiPolygon,31467)
)
INHERITS (public._edit_base);


--
-- Name: _bkg_gn250_b_insert; Type: TABLE; Schema: _boundaries; Owner: -
--

CREATE TABLE _boundaries._bkg_gn250_b_insert (
    reference_date date NOT NULL,
    id integer DEFAULT nextval('boundaries.bkg_gn250_b_id_seq'::regclass) NOT NULL,
    nnid character varying(16),
    datum character varying(10),
    oba character varying(40),
    oba_wert character varying(40),
    name character varying(90),
    sprache character varying(25),
    genus character varying(10),
    name2 character varying(90),
    sprache2 character varying(25),
    genus2 character varying(10),
    zusatz character varying(40),
    ags character varying(8),
    rs character varying(12),
    hoehe character varying(8),
    hoehe_ger character varying(5),
    ewz character varying(8),
    ewz_ger character varying(8),
    gewk character varying(18),
    gemteil character varying(4),
    virtuell character varying(4),
    gemeinde character varying(40),
    verwgem character varying(40),
    kreis character varying(40),
    regbezirk character varying(40),
    bundesland character varying(40),
    staat character varying(40),
    geola character varying(6),
    geobr character varying(6),
    gkre numeric,
    gkho numeric,
    utmre numeric,
    utmho numeric,
    box_geo character varying(250),
    box_gk character varying(250),
    box_utm character varying(250),
    geom public.geometry(MultiPolygon,31467)
)
INHERITS (public._edit_base);


--
-- Name: _comment_base; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public._comment_base (
    _id bigint NOT NULL,
    origin character varying(2000),
    method character varying(3000),
    assumption json DEFAULT '[]'::json NOT NULL
);


--
-- Name: _ego_dp_loadarea_cor; Type: TABLE; Schema: _demand; Owner: -
--

CREATE TABLE _demand._ego_dp_loadarea_cor (
)
INHERITS (public._comment_base);


--
-- Name: _deu_voronoi_cor; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._deu_voronoi_cor (
)
INHERITS (public._comment_base);


--
-- Name: _deu_voronoi_edit; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._deu_voronoi_edit (
    id integer NOT NULL,
    geom public.geometry
)
INHERITS (public._edit_base);


--
-- Name: deu_voronoi; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.deu_voronoi (
    id integer NOT NULL,
    geom public.geometry
);


--
-- Name: TABLE deu_voronoi; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.deu_voronoi IS '{''license'': {''name'': ''Gesetz über den Zugang zu digitalen Geodaten (Geodatenzugangsgesetz - GeoZG)'', ''copyright'': ''© GeoBasis-DE / BKG 2017 (Daten verändert)'', ''version'': ''Geändert durch Art. 1 G v. 7.11.2012'', ''id'': '''', ''instruction'': '''', ''url'': ''http://www.gesetze-im-internet.de/bundesrecht/geozg/gesamt.pdf''}, ''spatial'': {''extent'': ''Germany'', ''resolution'': ''vector'', ''location'': ''none''}, ''language'': [''ger''], ''title'': ''BKG - Geographische Namen 1:250 000 - GN250 - Darstellung als Bounding-Boxes (Polygon)'', ''metadata_version'': ''1.3'', ''description'': ''Die Geographischen Namen beinhalten Namen der Objektbereiche Siedlung, Verkehr, Vegetation, Gewässer, Relief und Gebiete. Der Datensatz GN250 orientiert sich am Maßstab 1:250 000 und umfasst ca. 134.000 Einträge. Die Lage der Objekte wird jeweils als Punktgeometrie über eine einzelne Koordinate (Punktgeometrie) und über kleinste umschreibende Rechtecke (Bounding Boxes) beschrieben.'', ''contributors'': [{''name'': ''Ludee'', ''email'': '''', ''date'': ''2017-07-03'', ''comment'': ''Create table''}, {''name'': ''Ludee'', ''email'': '''', ''date'': ''2017-07-03'', ''comment'': ''Add metadata v1.3''}], ''resources'': [{''name'': ''boundaries.bkg_gn250_b'', ''format'': ''PostgreSQL'', ''fields'': [{''name'': ''reference_date'', ''unit'': ''none'', ''description'': ''Reference date''}, {''name'': ''id'', ''unit'': ''none'', ''description'': ''Unique identifier''}, {''name'': ''nnid'', ''unit'': '''', ''description'': ''Nationaler Namensidentifikator''}, {''name'': ''datum'', ''unit'': '''', ''description'': ''Datum der letzten Modifikation des Namensobjekts (TT.MM.JJJJ)''}, {''name'': ''oba'', ''unit'': '''', ''description'': ''Name der ATKIS-Objektart, der das Namensobjekt angehört''}, {''name'': ''oba_wert'', ''unit'': '''', ''description'': ''genauere Spezifizierung des Namensobjektes innerhalb der Objektart''}, {''name'': ''name'', ''unit'': '''', ''description'': ''Name des geographischen Namenobjekts (amtlicher Name der SPRACHE DEUTSCH)''}, {''name'': ''sprache'', ''unit'': '''', ''description'': ''Sprache, der NAME zuzuordnen ist''}, {''name'': ''genus'', ''unit'': '''', ''description'': ''Geschlecht, das NAME zugeordnet ist (m, f, n, p)''}, "{''name'': ''name2'', ''unit'': '''', ''description'': ''Synonym des Objektnamens (u.a. sorbischer o. friesischer o. dänischer Name)''}, {''name'': ''sprache2'', ''unit'': '''', ''description'': ''Sprache, der NAME2 zuzuordnen ist''}, {''name'': ''genus2'', ''unit'': '''', ''description'': ''Geschlecht, das NAME2 zugeordnet ist (m, f, n, p)''}, {''name'': ''zusatz'', ''unit'': '''', ''description'': ''Namenszusatz (bei mehreren wird einer zufällig ausgewählt)''}, {''name'': ''ags'', ''unit'': '''', ''description'': ''Amtlicher Gemeindeschlüssel (Der AGS wird explizit für alle Gemeinden, Kreise, Regierungsbezirke und Bundesländer angegeben)''}, {''name'': ''rs'', ''unit'': '''', ''description'': ''Regionalschlüssel (Existiert für alle Verwaltungseinheiten Gemeindeteil, Gemeinde, Verwaltungsgemeinschaft, Kreis, Regierungsbezirk, Land, Staat)''}, {''name'': ''hoehe'', ''unit'': ''Meter'', ''description'': ''Höhe über NN (Meterangabe; für die Objektarten Ortslage und Besonderer Höhenpunkt)''}, {''name'': ''hoehe_ger'', ''unit'': ''Meter'', ''description'': ''Gerechnete Höhe über NHN (Meterangabe; für die Objektart Ortslage)''}, {''name'': ''ewz'', ''unit'': ''Einwohner'', ''description'': ''Einwohnerzahl von Gemeinden (Wird nur für Verwaltungseinheitenangegeben)''}, {''name'': ''ewz_ger'', ''unit'': '''', ''description'': ''Gerechnete Einwohnerzahl für alle Ortslagen''}, {''name'': ''gewk'', ''unit'': '''', ''description'': ''Gewässerkennziffer (eindeutige Gewässerkennziffer nach Bund/Länder-Arbeitsgemeinschaft Wasser (LAWA))''}, {''name'': ''gemteil'', ''unit'': '''', ''description'': ''Ja/Nein (Ist Gemeindeteil oder nicht)''}, {''name'': ''virtuell'', ''unit'': '''', ''description'': ''Ja/Nein (Ist eine selbstständige Gemeinde ohne reale Ortslage oder nicht)''}, {''name'': ''gemeinde'', ''unit'': '''', ''description'': ''Name der Gemeinde (für Ortslagen, Gemeindeteile)''}, {''name'': ''verwgem'', ''unit'': '''', ''description'': ''Name der Verwaltungsgemeinschaft (für Ortslagen, Gemeindeteile, Gemeinden)''}, {''name'': ''kreis'', ''unit'': '''', ''description'': ''Name des Kreises (für Ortslagen, Gemeindeteile, Gemeinden, Verwaltungsgemeinschaften)''}, {''name'': ''regbezirk'', ''unit'': '''', ''description'': ''Name des Regierungsbezirks (für Ortslagen, Gemeindeteile, Gemeinden, Verwaltungsgemeinschaften, Kreise)''}, {''name'': ''bundesland'', ''unit'': '''', ''description'': ''Name des Bundeslandes (für Ortslagen, Gemeindeteile, Gemeinden, Verwaltungsgemeinschaften, Kreise, Regierungsbezirke)''}, {''name'': ''staat'', ''unit'': '''', ''description'': ''Zweibuchstaben-Code (ISO 3166, DIN-NABD 10.2 2-92)(für Ortslagen und Verwaltungseinheiten)''}, {''name'': ''geola'', ''unit'': '''', ''description'': ''Geographische Länge (Grad, Minuten, Sekunden (GGMMSS) )''}, {''name'': ''geobr'', ''unit'': '''', ''description'': ''Geographische Breite (Grad, Minuten, Sekunden (GGMMSS) )''}, {''name'': ''gkre'', ''unit'': '''', ''description'': ''Gauß-Krüger Rechtswert (m; vgl. Georeferenzierung unter Punkt 1 für Details)''}, {''name'': ''gkho'', ''unit'': '''', ''description'': ''Gauß-Krüger Hochwert (m; vgl. Georeferenzierung unter Punkt 1 für Details)''}, {''name'': ''utmre'', ''unit'': '''', ''description'': ''UTM Rechtswert (m, vgl. Georeferenzierung unter Punkt 1 für Details)''}, {''name'': ''utmho'', ''unit'': '''', ''description'': ''UTM Hochwert (m, vgl. Georeferenzierung unter Punkt 1 für Details)''}, {''name'': ''box_geo'', ''unit'': '''', ''description'': ''Kleinstes umschließendes Rechteck für das Objekt in geographischen Koordinaten, für Punktobjekte künstliches Rechteck 0,00001 Grad x 0,00001 Grad mit (GEOLA, GEOBR) als Mittelpunkt. OGC Well Known Text (WKT) Format''}, {''name'': ''box_gk'', ''unit'': '''', ''description'': ''Kleinstes umschließendes Rechteck für das Objekt in Gauß-Krüger-Koordinaten, für Punktobjekte künstliches Rechteck 1m x 1m mit (GKRE, GKHO) als Mittelpunkt. OGC Well Known Text (WKT) Format''}, {''name'': ''box_utm'', ''unit'': '''', ''description'': ''Kleinstes umschließendes Rechteck für das Objekt in UTM-Koordinaten, für Punktobjekte künstliches Rechteck 1m x 1m mit (UTMRE, UTMHO) als Mittelpunkt. OGC Well Known Text (WKT) Format''}, {''name'': ''geom'', ''unit'': '''', ''description'': ''Geometrie''}]}], ''temporal'': {''resolution'': ''none'', ''end'': ''none'', ''reference_date'': ''2015-12-31'', ''start'': ''none''}, ''sources'': [{''name'': ''Dienstleistungszentrum des Bundes für Geoinformation und Geodäsie - Open Data - Geographische Namen 1:250 000 - GN250'', ''license'': ''Geodatenzugangsgesetz (GeoZG)'', ''description'': ''Die Geographischen Namen beinhalten Namen der Objektbereiche Siedlung, Verkehr, Vegetation, Gewässer, Relief und Gebiete.'', ''copyright'': ''© Bundesamt für Kartographie und Geodäsie - Außenstelle Leipzig - Dienstleistungszentrum. Alle Rechte vorbehalten. '', ''url'': ''http://www.geodatenzentrum.de/geodaten/gdz_rahmen.gdz_div?gdz_spr=deu&gdz_akt_zeile=5&gdz_anz_zeile=1&gdz_unt_zeile=20&gdz_user_id=0''}, {''name'': ''Bundesamt für Kartographie und Geodäsie - Geographische Namen 1:250 000 (GN250) - Dokumentation'', ''license'': ''Geodatenzugangsgesetz (GeoZG)'', ''description'': ''Datensatzbeschreibung als PDF'', ''copyright'': ''© GeoBasis-DE / BKG 2016 (Daten verändert)'', ''url'': ''http://sg.geodatenzentrum.de/web_download/gn/gn250/gn250.pdf''}, {''name'': ''BKG - Geographische Namen 1:250 000 - GN250'', ''license'': ''Geodatenzugangsgesetz (GeoZG)'', ''description'': ''Der Datenbestand umfasst sämtliche Verwaltungseinheiten aller hierarchischen Verwaltungsebenen vom Staat bis zu den Gemeinden mit ihren Verwaltungsgrenzen, statistischen Schlüsselzahlen und dem Namen der Verwaltungseinheit sowie der spezifischen Bezeichnung der Verwaltungsebene des jeweiligen Bundeslandes. '', ''copyright'': ''© GeoBasis-DE / BKG 2017 (Daten verändert)'', ''url'': ''http://www.bkg.bund.de''}]}';


--
-- Name: _insert_base; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public._insert_base (
    _message text,
    _user character varying(50),
    _submitted timestamp without time zone DEFAULT now(),
    _autocheck boolean DEFAULT false,
    _humancheck boolean DEFAULT false,
    _type character varying(8),
    _applied boolean DEFAULT false,
    _id integer NOT NULL
);


--
-- Name: _deu_voronoi_insert; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._deu_voronoi_insert (
)
INHERITS (public._insert_base, grid.deu_voronoi);


--
-- Name: ego_dp_ehv_griddistrict; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_dp_ehv_griddistrict (
    version text NOT NULL,
    geom public.geometry(Polygon,4326),
    subst_id integer NOT NULL
);


--
-- Name: TABLE ego_dp_ehv_griddistrict; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_dp_ehv_griddistrict IS '{"spatial": [{"resolution": "", "extend": "Gemany"}], "resources": [{"meta_version": "1.2", "schema": {"fields": [{"name": "version", "unit": "", "description": "version id"}, {"name": "subst_id", "unit": "", "description": "unique identifier"}, {"name": "geom", "unit": "", "description": "geometry"}]}}], "description": "Catchment area of EHV substation (Transmission substation)", "license": [{"copyright": "\u00a9 Flensburg University of Applied Sciences, Centre for Sustainable Energy Systems", "name": "Open Data Commons Open Database License 1.0", "url": "https://opendatacommons.org/licenses/odbl/1.0/", "version": "1.0", "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!", "id": "ODbL-1.0"}], "contributors": [{"email": "", "name": "Ludee", "date": "02.09.2016", "comment": "Create table"}, {"email": "", "name": "Ludee", "date": "15.01.2017", "comment": "Update metadata"}, {"email": "", "name": "Ludee", "date": "21.03.2017", "comment": "Update metadata to 1.1"}, {"email": "", "name": "Ludee", "date": "2017-04-06", "comment": "Update metadata to 1.2"}], "sources": [{"copyright": "\u00a9 Reiner Lemoine Institut", "url": "https://github.com/openego/data_processing", "name": "eGo dataprocessing", "description": " ", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)"}, {"copyright": "\u00a9 OpenStreetMap contributors", "url": "http://www.openstreetmap.org/", "name": "OpenStreetMap", "description": " ", "license": "Open Database License (ODbL) v1.0"}, {"copyright": "\u00a9 GeoBasis-DE / BKG 2016 (Data changed)", "url": "http://www.geodatenzentrum.de/", "name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "description": " ", "license": "Geodatenzugangsgesetz (GeoZG)"}], "reference_date": " 18.01.18", "language": ["eng", "ger"], "title": "eGo dataprocessing - EHV Transmission grid area"}';


--
-- Name: _ego_dp_ehv_griddistrict_insert; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._ego_dp_ehv_griddistrict_insert (
)
INHERITS (public._insert_base, grid.ego_dp_ehv_griddistrict);


--
-- Name: ego_dp_lv_griddistrict; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_dp_lv_griddistrict (
    version text NOT NULL,
    id integer NOT NULL,
    mvlv_subst_id integer,
    subst_id integer,
    la_id integer,
    nn boolean,
    subst_cnt integer,
    zensus_sum integer,
    zensus_count integer,
    zensus_density double precision,
    population_density double precision,
    area_ha double precision,
    sector_area_residential double precision,
    sector_area_retail double precision,
    sector_area_industrial double precision,
    sector_area_agricultural double precision,
    sector_area_sum double precision,
    sector_share_residential double precision,
    sector_share_retail double precision,
    sector_share_industrial double precision,
    sector_share_agricultural double precision,
    sector_share_sum double precision,
    sector_count_residential integer,
    sector_count_retail integer,
    sector_count_industrial integer,
    sector_count_agricultural integer,
    sector_count_sum integer,
    sector_consumption_residential double precision,
    sector_consumption_retail double precision,
    sector_consumption_industrial double precision,
    sector_consumption_agricultural double precision,
    sector_consumption_sum double precision,
    sector_peakload_residential double precision,
    sector_peakload_retail double precision,
    sector_peakload_industrial double precision,
    sector_peakload_agricultural double precision,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_dp_lv_griddistrict; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_dp_lv_griddistrict IS '{"spatial": {"location": "my_loc", "extent": "my_ext", "resolution": "my_res"}, "contributors": [{"date": "02.09.2016", "comment": "Create table", "name": "Ludee", "email": ""}, {"date": "15.01.2017", "comment": "Update metadata", "name": "Ludee", "email": ""}, {"date": "21.03.2017", "comment": "Update metadata to 1.1", "name": "Ludee", "email": ""}, {"date": "2017-04-06", "comment": "Update metadata to 1.2", "name": "Ludee", "email": ""}], "resources": [{"format": "PostgreSQL", "fields": [], "name": "grid.ego_dp_lv_griddistrict"}], "metadata_version": "1.3", "title": "eGo dataprocessing - LV Distribution grid area", "description": "Catchment area of MVLV substation (Distribution substation)", "language": ["eng", "ger"], "temporal": {"resolution": "my_resolution", "reference_date": " my_ref_date", "end": "my_end", "start": "my_start"}, "sources": [{"description": " ", "copyright": "\u00a9 Reiner Lemoine Institut", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "name": "eGo dataprocessing", "url": "https://github.com/openego/data_processing"}, {"description": " ", "copyright": "\u00a9 OpenStreetMap contributors", "license": "Open Database License (ODbL) v1.0", "name": "OpenStreetMap", "url": "http://www.openstreetmap.org/"}, {"description": " ", "copyright": "\u00a9 GeoBasis-DE / BKG 2016 (Data changed)", "license": "Geodatenzugangsgesetz (GeoZG)", "name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "url": "http://www.geodatenzentrum.de/"}], "license": {"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!", "url": "https://opendatacommons.org/licenses/odbl/1.0/", "copyright": "\u00a9 Reiner Lemoine Institut", "name": "Open Data Commons Open Database License 1.0", "id": "ODbL-1.0", "version": "1.0"}}';


--
-- Name: _ego_dp_lv_griddistrict_insert; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._ego_dp_lv_griddistrict_insert (
)
INHERITS (public._insert_base, grid.ego_dp_lv_griddistrict);


--
-- Name: substations_deu_voronoi; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.substations_deu_voronoi (
    lon double precision,
    lat double precision,
    voltage text,
    power_typ text,
    osm_id bigint,
    osm_typ text,
    osm_www text,
    frequency text,
    name text,
    ref text,
    substation text,
    operator text,
    status smallint,
    visible smallint,
    geom public.geometry(Point,4326),
    subst_id integer
);


--
-- Name: _substations_deu_voronoi_insert; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._substations_deu_voronoi_insert (
)
INHERITS (public._insert_base, grid.substations_deu_voronoi);


--
-- Name: substations_dummy; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.substations_dummy (
    subst_id integer NOT NULL,
    geom public.geometry(Point,4326),
    lon double precision,
    lat double precision,
    voltage character varying,
    power_typ character varying,
    osm_id bigint,
    osm_typ character varying,
    osm_www character varying,
    frequency character varying,
    name character varying,
    ref character varying,
    substation character varying,
    operator character varying,
    status integer,
    visible integer
);


--
-- Name: _substations_dummy_insert; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._substations_dummy_insert (
)
INHERITS (public._insert_base, grid.substations_dummy);


--
-- Name: voronoi; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.voronoi (
    geom public.geometry(Polygon,4326),
    id integer NOT NULL
);


--
-- Name: _voronoi_insert; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._voronoi_insert (
)
INHERITS (public._insert_base, grid.voronoi);


--
-- Name: znes_deu_gridcells_qgis; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.znes_deu_gridcells_qgis (
    id integer NOT NULL,
    geom public.geometry(MultiPolygon,4326),
    subst_id integer
);


--
-- Name: _znes_deu_gridcells_qgis_insert; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._znes_deu_gridcells_qgis_insert (
)
INHERITS (public._insert_base, grid.znes_deu_gridcells_qgis);


--
-- Name: znes_deu_substations_filtered; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.znes_deu_substations_filtered (
    lon double precision,
    lat double precision,
    voltage text,
    power_typ text,
    osm_id bigint,
    osm_typ text,
    osm_www text,
    frequency text,
    name text,
    ref text,
    substation text,
    operator text,
    status smallint,
    visible smallint,
    geom public.geometry(Point,4326),
    subst_id integer NOT NULL
);


--
-- Name: TABLE znes_deu_substations_filtered; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.znes_deu_substations_filtered IS '{
	"title": "eGo Conventional power plants in Germany",
	"description": "This dataset contains an augmented and corrected power plant list based on the power plant list provided by the BNetzA and UBA.",
	"language": [ "eng", "ger" ],
	"spatial": 
		{"location": "Germany",
		"extent": "europe",
		"resolution": "100 m"},
	"temporal": 
		{"reference_date": "2016-02-08",
		"start": "1900-01-01",
		"end": "2015-12-31",
		"resolution": ""},
	"sources": [
		{"name": "Open Power System Data (OPSD)",
                "url":  "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
                "license": "Creative Commons Attribution 4.0 International", 
		"copyright": "© Open Power System Data. 2017"}, 

		{"name": "Bundesnetzagentur (BNetzA)", 
		"description": "The Federal Network Agency for Electricity, Gas, Telecommunications, Posts and Railway Data is in Germany data provider of power plant", 
		"url": "https://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/ErneuerbareEnergien/Anlagenregister/Anlagenregister_Veroeffentlichung/Anlagenregister_Veroeffentlichungen_node.html", 
		"license": "Creative Commons Namensnennung-Keine Bearbeitung 3.0 Deutschland Lizenz", 
		"copyright": "© Bundesnetzagentur für Elektrizität, Gas, Telekommunikation, Post und Eisenbahnen; Pressestelle"}
		 ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "© ZNES Europa-Universität Flensburg"} ],
	"contributors": [
		{"name": "wolfbunke", "email": " ", "date": "01.06.2017", "comment": "Create and restructure scripts and table"}],
	"resources": [
		{"name": "model_draft.ego_dp_supply_conv_powerplant",		
		"format": "PostgreSQL",
		"fields": [
                   {"name": "gid", "description": "Geo ID", "unit": "" },
                   {"name": "bnetza_id", "description": "Bundesnetzagentur unit ID", "unit": "" },
                   {"name": "company", "description": "name of company","unit": "" },
                   {"name": "name", "description": "name of unit","unit": "" },
                   {"name": "postcode", "description": "postcode", "unit": "" },
                   {"name": "city", "description": "name of City","unit": "" },
                   {"name": "street", "description": "Street name, address","unit": "" },
                   {"name": "state", "description": "name of federate state of location","unit": "" },
                   {"name": "block", "description": "Power plant block","unit": "" },
                   {"name": "commissioned_original", "description": "Year of commissioning (raw data)", "unit": "" },
                   {"name": "commissioned","description": "Year of commissioning", "unit": "" },
                   {"name": "retrofit",   "description": "Year of modernization according to UBA data", "unit": "" },
                   {"name": "shutdown", "description": "Year of decommissioning", "unit": "" },
                   {"name": "status","description": "Power plant status", "unit": "" },
                   {"name": "fuel", "description": "Used fuel or energy source","unit": "" },
                   {"name": "technology",  "description": "Power plant technology or sort","unit": "" },
                   {"name": "type","description": "Purpose of the produced power","unit": "" },
                   {"name": "eeg", "description": "Status of being entitled to a renumeration", "unit": "" },
                   {"name": "chp", "description": "Status of being able to supply heat","unit": "" },
                   {"name": "capacity",  "description": "Power capacity","unit": "MW" },
                   {"name": "capacity_uba",  "description": "Power capacity according to UBA data","unit": "" },
                   {"name": "chp_capacity_uba", "description": "Heat capacity according to UBA data","unit": "MW" },
                   {"name": "efficiency_data",  "description": "Proportion between power output and input","unit": "" },
                   {"name": "efficiency_estimate",  "description": "Estimated proportion between power output and input", "unit": "" },
                   {"name": "network_node",  "description": "Connection point to the electricity grid","unit": "" },
                   {"name": "voltage", "description": "Grid or transformation level of the network node","unit": "" },
                   {"name": "network_operator", "description": "Network operator of the grid or transformation level","unit": "" },
                   {"name": "name_uba","description": "Power plant name according to UBA data","unit": "" },
                   {"name": "lat",  "description": "Precise geographic coordinates - latitude","unit": "" },
                   {"name": "lon", "description": "Precise geographic coordinates - longitude","unit": "" },
                   {"name": "comment", "description": "Further comments", "unit": "" },
                   {"name": "geom", "description": "Geometry Point", "unit": "" } ] } ],
	"meta_version": "1.3" }';


--
-- Name: _znes_deu_substations_filtered_insert; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._znes_deu_substations_filtered_insert (
)
INHERITS (public._insert_base, grid.znes_deu_substations_filtered);


--
-- Name: znes_deu_substations; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.znes_deu_substations (
    id integer NOT NULL,
    lon double precision NOT NULL,
    lat double precision NOT NULL,
    voltage text,
    power_typ text,
    osm_id bigint NOT NULL,
    osm_typ text NOT NULL,
    osm_www text NOT NULL,
    frequency text,
    name text,
    ref text,
    substation text,
    operator text,
    dbahn text,
    status smallint NOT NULL,
    visible smallint NOT NULL,
    geom public.geometry(Point,4326)
);


--
-- Name: _znes_deu_substations_insert; Type: TABLE; Schema: _grid; Owner: -
--

CREATE TABLE _grid._znes_deu_substations_insert (
)
INHERITS (public._insert_base, grid.znes_deu_substations);


--
-- Name: bkg_vg250_20150101_1_sta; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.bkg_vg250_20150101_1_sta (
    id integer NOT NULL,
    geom public.geometry(MultiPolygon,31467),
    ade bigint,
    gf bigint,
    bsg bigint,
    rs character varying(12),
    ags character varying(12),
    sdv_rs character varying(12),
    gen character varying(50),
    bez character varying(50),
    ibz bigint,
    bem character varying(75),
    nbd character varying(4),
    sn_l character varying(2),
    sn_r character varying(1),
    sn_k character varying(2),
    sn_v1 character varying(2),
    sn_v2 character varying(2),
    sn_g character varying(3),
    fk_s3 character varying(2),
    nuts character varying(5),
    rs_0 character varying(12),
    ags_0 character varying(12),
    wsk date,
    debkg_id character varying(16)
);


--
-- Name: TABLE bkg_vg250_20150101_1_sta; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.bkg_vg250_20150101_1_sta IS '{
"Name": ["BKG - Verwaltungsgebiete 1:250.000 - Stand 01.01.2015"],
"Source": [{
	"Name": "Dienstleistungszentrum des Bundes für Geoinformation und Geodäsie - Open Data",
	"URL": "http://www.geodatenzentrum.de/geodaten/gdz_rahmen.gdz_div?gdz_spr=deu&gdz_akt_zeile=5&gdz_anz_zeile=1&gdz_unt_zeile=14&gdz_user_id=0"}],
"Reference date": ["01.01.2015"],
"Date of collection": ["02.09.2016"],
"Original file": ["vg250_2015-01-01.gk3.shape.ebenen.zip"],
"Spatial resolution": ["Germany; Nationalstaat (sta) - country (cntry)"],
"Description": ["Der Datenbestand umfasst die Verwaltungseinheiten der hierarchischen Verwaltungsebenen vom Staat bis zu den Gemeinden"],

"Changes":[
	{"Name":"Ludwig Hülk", 
    "Mail":"ludwig.huelk@rl-institut.de", 
    "Date":"02.09.2016", 
    "Comment":"Created table"}],

"ToDo": [""],
"Licence": ["Geodatenzugangsgesetz (GeoZG)"],
"Instructions for proper use": ["Dieser Datenbestand steht über Geodatendienste gemäß Geodatenzugangsgesetz (GeoZG) (http://www.geodatenzentrum.de/auftrag/pdf/geodatenzugangsgesetz.pdf) für die kommerzielle und nicht kommerzielle Nutzung geldleistungsfrei zum Download und zur Online-Nutzung zur Verfügung. Die Nutzung der Geodaten und Geodatendienste wird durch die Verordnung zur Festlegung der Nutzungsbestimmungen für die Bereitstellung von Geodaten des Bundes (GeoNutzV) (http://www.geodatenzentrum.de/auftrag/pdf/geonutz.pdf) geregelt. Insbesondere hat jeder Nutzer den Quellenvermerk zu allen Geodaten, Metadaten und Geodatendiensten erkennbar und in optischem Zusammenhang zu platzieren. Veränderungen, Bearbeitungen, neue Gestaltungen oder sonstige Abwandlungen sind mit einem Veränderungshinweis im Quellenvermerk zu versehen. Quellenvermerk und Veränderungshinweis sind wie folgt zu gestalten. Bei der Darstellung auf einer Webseite ist der Quellenvermerk mit der URL http://www.bkg.bund.de zu verlinken. © GeoBasis-DE / BKG <Jahr des letzten Datenbezugs> © GeoBasis-DE / BKG <Jahr des letzten Datenbezugs> (Daten verändert) Beispiel: © GeoBasis-DE / BKG 2013"]}
';


--
-- Name: _bkg_vg250_20150101_1_sta_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._bkg_vg250_20150101_1_sta_insert (
)
INHERITS (public._insert_base, model_draft.bkg_vg250_20150101_1_sta);


--
-- Name: bkg_vg250_20160101_1_sta; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.bkg_vg250_20160101_1_sta (
    id integer NOT NULL,
    geom public.geometry(MultiPolygon,31467),
    ade bigint,
    gf bigint,
    bsg bigint,
    rs character varying(12),
    ags character varying(12),
    sdv_rs character varying(12),
    gen character varying(50),
    bez character varying(50),
    ibz bigint,
    bem character varying(75),
    nbd character varying(4),
    sn_l character varying(2),
    sn_r character varying(1),
    sn_k character varying(2),
    sn_v1 character varying(2),
    sn_v2 character varying(2),
    sn_g character varying(3),
    fk_s3 character varying(2),
    nuts character varying(5),
    rs_0 character varying(12),
    ags_0 character varying(12),
    wsk date,
    debkg_id character varying(16)
);


--
-- Name: TABLE bkg_vg250_20160101_1_sta; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.bkg_vg250_20160101_1_sta IS '{
"Name": ["BKG - Verwaltungsgebiete 1:250.000 - Stand 01.01.2016"],
"Source": [{
	"Name": "Dienstleistungszentrum des Bundes für Geoinformation und Geodäsie - Open Data",
	"URL": "http://www.geodatenzentrum.de/geodaten/gdz_rahmen.gdz_div?gdz_spr=deu&gdz_akt_zeile=5&gdz_anz_zeile=1&gdz_unt_zeile=14&gdz_user_id=0"}],
"Reference date": ["01.01.2016"],
"Date of collection": ["02.09.2016"],
"Original file": ["vg250_2016-01-01.gk3.shape.ebenen.zip"],
"Spatial resolution": ["Germany; Nationalstaat (sta) - country (cntry)"],
"Description": ["Der Datenbestand umfasst die Verwaltungseinheiten der hierarchischen Verwaltungsebenen vom Staat bis zu den Gemeinden"],

"Changes":[
	{"Name":"Ludwig Hülk", 
    "Mail":"ludwig.huelk@rl-institut.de", 
    "Date":"02.09.2016", 
    "Comment":"Created table"}],

"ToDo": [""],
"Licence": ["Geodatenzugangsgesetz (GeoZG)"],
"Instructions for proper use": ["Dieser Datenbestand steht über Geodatendienste gemäß Geodatenzugangsgesetz (GeoZG) (http://www.geodatenzentrum.de/auftrag/pdf/geodatenzugangsgesetz.pdf) für die kommerzielle und nicht kommerzielle Nutzung geldleistungsfrei zum Download und zur Online-Nutzung zur Verfügung. Die Nutzung der Geodaten und Geodatendienste wird durch die Verordnung zur Festlegung der Nutzungsbestimmungen für die Bereitstellung von Geodaten des Bundes (GeoNutzV) (http://www.geodatenzentrum.de/auftrag/pdf/geonutz.pdf) geregelt. Insbesondere hat jeder Nutzer den Quellenvermerk zu allen Geodaten, Metadaten und Geodatendiensten erkennbar und in optischem Zusammenhang zu platzieren. Veränderungen, Bearbeitungen, neue Gestaltungen oder sonstige Abwandlungen sind mit einem Veränderungshinweis im Quellenvermerk zu versehen. Quellenvermerk und Veränderungshinweis sind wie folgt zu gestalten. Bei der Darstellung auf einer Webseite ist der Quellenvermerk mit der URL http://www.bkg.bund.de zu verlinken. © GeoBasis-DE / BKG <Jahr des letzten Datenbezugs> © GeoBasis-DE / BKG <Jahr des letzten Datenbezugs> (Daten verändert) Beispiel: © GeoBasis-DE / BKG 2013"]}
';


--
-- Name: _bkg_vg250_20160101_1_sta_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._bkg_vg250_20160101_1_sta_insert (
)
INHERITS (public._insert_base, model_draft.bkg_vg250_20160101_1_sta);


--
-- Name: dea_germany_per_load_area; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.dea_germany_per_load_area (
    id integer NOT NULL,
    subst_id integer,
    lv_dea_cnt integer,
    lv_dea_capacity numeric
);


--
-- Name: TABLE dea_germany_per_load_area; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.dea_germany_per_load_area IS '{
"title":"Good title",
"description":"example metadata for example data",
"keywords":["example", "test"],
"sources": [{
"name":"Website",
"description":"Data website",
"url":"www.website.com"}],
"spatial": [{
"extend":"europe",
"resolution":"100mx100m"}],
"license": [{
"id":"GPL-3.0",
"name":"GNU General Public License 3.0",
"version":"3.0",
"url":"https://opensource.org/licenses/GPL-3.0",
"instruction":""}],
"contributors": [{
"name":"Joe Nobody",
"email":"joe.nobody@gmail.com",
"date":"16.06.2016",
"comment":"created metadata"}],
"notes":"use this example",
"resources": [{
"schema": {
"fields": [
{"name":"id",
"description":"unique identifier",
"unit":"" },
{"name":"year",
"description":"reference year",
"unit":"" } ]  } }] }';


--
-- Name: _dea_germany_per_load_area_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._dea_germany_per_load_area_insert (
)
INHERITS (public._insert_base, model_draft.dea_germany_per_load_area);


--
-- Name: _destatis_zensus_population_per_ha_inside_edit; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._destatis_zensus_population_per_ha_inside_edit (
    gid integer NOT NULL,
    inside_borders boolean
)
INHERITS (public._edit_base);


--
-- Name: _destatis_zensus_population_per_ha_inside_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._destatis_zensus_population_per_ha_inside_insert (
    gid integer NOT NULL,
    inside_borders boolean
)
INHERITS (public._edit_base);


--
-- Name: _ego_dea_allocation_edit; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_dea_allocation_edit (
    id bigint NOT NULL,
    sort integer,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    voltage_level character varying,
    postcode character varying,
    subst_id integer,
    source character varying,
    la_id integer,
    flag character varying,
    geom public.geometry(Point,3035),
    geom_line public.geometry(LineString,3035),
    geom_new public.geometry(Point,3035)
)
INHERITS (public._edit_base);


--
-- Name: _ego_dea_allocation_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_dea_allocation_insert (
    id bigint NOT NULL,
    sort integer,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    voltage_level character varying,
    postcode character varying,
    subst_id integer,
    source character varying,
    la_id integer,
    flag character varying,
    geom public.geometry(Point,3035),
    geom_line public.geometry(LineString,3035),
    geom_new public.geometry(Point,3035)
)
INHERITS (public._edit_base);


--
-- Name: ego_dea_per_method; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_dea_per_method (
    name text NOT NULL,
    capacity numeric,
    count bigint
);


--
-- Name: _ego_dea_per_method_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_dea_per_method_insert (
)
INHERITS (public._insert_base, model_draft.ego_dea_per_method);


--
-- Name: ego_demand_hv_largescaleconsumer; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_hv_largescaleconsumer (
    polygon_id integer NOT NULL,
    area_ha double precision,
    powerplant_id integer,
    voltage_level smallint,
    subst_id integer,
    otg_id integer,
    un_id integer,
    consumption numeric,
    peak_load numeric,
    geom public.geometry(MultiPolygon,3035),
    geom_centre public.geometry(Point,3035)
);


--
-- Name: TABLE ego_demand_hv_largescaleconsumer; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_hv_largescaleconsumer IS '{
"Name": "Large scale consumer in EHV-level",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Identified industrial large scale consumer with a connection to the EHV-grid"],
"Column": [
                   {"Name": "polygon_id",
                    "Description": "unique id for osm industry-polygon",
                    "Unit": "" },
                   {"Name": "area_ha",
                    "Description": "area of polygon",
                    "Unit": "ha" },
                   {"Name": "powerplant_id",
                    "Description": "id of powerplants on the considered polygons",
                    "Unit": "" },
                   {"Name": "voltage_level",
                    "Description": "voltage level of the consumers grid connection",
                    "Unit": "" },
                   {"Name": "id",
                    "Description": "unique id",
                    "Unit": "" },
                   {"Name": "consumption",
                    "Description": "electricity consumption of associated industry polygon",
                    "Unit": "GWh" },
                   {"Name": "peak_load",
                    "Description": "peak-load of associated industry polygon",
                    "Unit": "MW" },
                   {"Name": "geom",
                    "Description": "geometry of industry-polygon",
                    "Unit": "" },
                   {"Name": "geom_centre",
                    "Description": "centre of industry-polygon",
                    "Unit": "" },
                   {"Name": "subst_id",
                    "Description": "id of associated substation",
                    "Unit": "" },
                   {"Name": "otg_id",
                    "Description": "otg_id of associated substation",
                    "Unit": "" },
                   {"Name": "un_id",
                    "Description": "unique id of loads",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "25.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: _ego_demand_hv_largescaleconsumer_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_demand_hv_largescaleconsumer_insert (
)
INHERITS (public._insert_base, model_draft.ego_demand_hv_largescaleconsumer);


--
-- Name: ego_demand_load_collect; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_load_collect (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_demand_load_collect_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_load_collect_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_load_collect_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_load_collect_id_seq OWNED BY model_draft.ego_demand_load_collect.id;


--
-- Name: _ego_demand_load_collect_edit; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_demand_load_collect_edit (
    id integer DEFAULT nextval('model_draft.ego_demand_load_collect_id_seq'::regclass) NOT NULL,
    geom public.geometry(Polygon,3035)
)
INHERITS (public._edit_base);


--
-- Name: _ego_demand_load_collect_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_demand_load_collect_insert (
    id integer DEFAULT nextval('model_draft.ego_demand_load_collect_id_seq'::regclass) NOT NULL,
    geom public.geometry(Polygon,3035)
)
INHERITS (public._edit_base);


--
-- Name: ego_grid_hvmv_substation; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_hvmv_substation (
    subst_id integer NOT NULL,
    lon double precision NOT NULL,
    lat double precision NOT NULL,
    point public.geometry(Point,4326) NOT NULL,
    polygon public.geometry NOT NULL,
    voltage text,
    power_type text,
    substation text,
    osm_id text NOT NULL,
    osm_www text NOT NULL,
    frequency text,
    subst_name text,
    ref text,
    operator text,
    dbahn text,
    status smallint NOT NULL,
    otg_id bigint,
    ags_0 text,
    geom public.geometry(Point,3035)
);


--
-- Name: TABLE ego_grid_hvmv_substation; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_hvmv_substation IS '{
"Name": "Abstracted substations between high- and medium voltage",
"Source": [{
                  "Name": "OpenStreetMap",
                  "URL":  "www.openstreetmap.org" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["..."],
"Column": [
                   {"Name": "subst_id",	
                    "Description": "serial id",
                    "Unit": "" },
                   {"Name": "lon",
                    "Description": "longitude of substation ",
                    "Unit": "" },
                   {"Name": "lat",
                    "Description": "latitude of substation ",
                    "Unit": "" },
                   {"Name": "point",
                    "Description": "point geometry of substation  (4326)",
                    "Unit": "" },
                   {"Name": "polygon",
                    "Description": "polygon geometry of substation",
                    "Unit": "" },
                   {"Name": "voltage",
                    "Description": "(all) voltage levels contained in substation",
                    "Unit": "V" },
                   {"Name": "power_type",
                    "Description": "value of osm key power",
                    "Unit": "" },
                   {"Name": "substation",
                    "Description": "value of osm key substation",
                    "Unit": "" },
                   {"Name": "osm_id",
                    "Description": "osm id of substation, begins with prefix n(node) or w(way)",
                    "Unit": "" },
                   {"Name": "osm_www",
                    "Description": "hyperlink to osm source",
                    "Unit": "" },
                   {"Name": "frequency",
                    "Description": "frequency of substation",
                    "Unit": "Hz" },
                   {"Name": "subst_name",
                    "Description": "name of substation",
                    "Unit": "" },
                   {"Name": "ref",
                    "Description": "reference tag of substation",
                    "Unit": "" },
                   {"Name": "operator",
                    "Description": "operator(s) of substation",
                    "Unit": "" },
                   {"Name": "dbahn",
                    "Description": "states if substation is connected to railway grid and if yes the indicator",
                    "Unit": "" },
                   {"Name": "status",
                    "Description": "states the osm source of substation (1=way, 2=way intersected by 110kV-line, 3=node)",
                    "Unit": "" },                   
                   {"Name": "otg_id",
                    "Description": "states the id of respective bus in osmtgmod",
                    "Unit": "" }],
"Changes":[
                   {"Name": "lukasol",
                    "Mail": "",
                    "Date":  "20.10.2016",
                    "Comment": "..." }
                  ],
"ToDo": ["..."],
"Licence": [{
	"Name":		"Open Database License (ODbL) v1.0",
	"URL":		"http://opendatacommons.org/licenses/odbl/1.0/",
	"Copyright": 	"NEXT ENERGY"}],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_hvmv_substation_subst_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_hvmv_substation_subst_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_hvmv_substation_subst_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_hvmv_substation_subst_id_seq OWNED BY model_draft.ego_grid_hvmv_substation.subst_id;


--
-- Name: _ego_grid_hvmv_substation_edit; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_grid_hvmv_substation_edit (
    subst_id integer DEFAULT nextval('model_draft.ego_grid_hvmv_substation_subst_id_seq'::regclass) NOT NULL,
    lon double precision NOT NULL,
    lat double precision NOT NULL,
    point public.geometry(Point,4326) NOT NULL,
    polygon public.geometry NOT NULL,
    voltage text,
    power_type text,
    substation text,
    osm_id text NOT NULL,
    osm_www text NOT NULL,
    frequency text,
    subst_name text,
    ref text,
    operator text,
    dbahn text,
    status smallint NOT NULL,
    otg_id bigint,
    ags_0 text,
    geom public.geometry(Point,3035)
)
INHERITS (public._edit_base);


--
-- Name: _ego_grid_hvmv_substation_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_grid_hvmv_substation_insert (
    subst_id integer DEFAULT nextval('model_draft.ego_grid_hvmv_substation_subst_id_seq'::regclass) NOT NULL,
    lon double precision NOT NULL,
    lat double precision NOT NULL,
    point public.geometry(Point,4326) NOT NULL,
    polygon public.geometry NOT NULL,
    voltage text,
    power_type text,
    substation text,
    osm_id text NOT NULL,
    osm_www text NOT NULL,
    frequency text,
    subst_name text,
    ref text,
    operator text,
    dbahn text,
    status smallint NOT NULL,
    otg_id bigint,
    ags_0 text,
    geom public.geometry(Point,3035)
)
INHERITS (public._edit_base);


--
-- Name: _ego_grid_pf_hv_line_edit; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_grid_pf_hv_line_edit (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    line_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom numeric DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    capital_cost double precision,
    length double precision,
    cables integer,
    frequency numeric,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
)
INHERITS (public._edit_base);


--
-- Name: _ego_grid_pf_hv_line_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._ego_grid_pf_hv_line_insert (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    line_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom numeric DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    capital_cost double precision,
    length double precision,
    cables integer,
    frequency numeric,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
)
INHERITS (public._edit_base);


--
-- Name: example_table; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.example_table (
    id integer NOT NULL,
    name character varying(50),
    geom public.geometry(Point)
);


--
-- Name: example_table_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.example_table_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: example_table_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.example_table_id_seq OWNED BY model_draft.example_table.id;


--
-- Name: _example_table_edit; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._example_table_edit (
    id integer DEFAULT nextval('model_draft.example_table_id_seq'::regclass) NOT NULL,
    name character varying(50),
    geom public.geometry(Point)
)
INHERITS (public._edit_base);


--
-- Name: _example_table_insert; Type: TABLE; Schema: _model_draft; Owner: -
--

CREATE TABLE _model_draft._example_table_insert (
)
INHERITS (public._insert_base, model_draft.example_table);


--
-- Name: entries; Type: TABLE; Schema: reference; Owner: -
--

CREATE TABLE reference.entries (
    entries_id integer NOT NULL,
    jabref_eid character varying(8) DEFAULT NULL::character varying,
    database_id integer,
    entry_types_id integer,
    cite_key character varying(100) DEFAULT NULL::character varying,
    abstract text,
    address text,
    annote text,
    author text,
    booktitle text,
    chapter text,
    comment text,
    crossref text,
    doi text,
    edition text,
    editor text,
    eid text,
    file text,
    howpublished text,
    institution text,
    journal text,
    key_ text,
    keywords text,
    language text,
    location text,
    month text,
    note text,
    number text,
    organization text,
    pages text,
    pdf text,
    pmid text,
    priority text,
    ps text,
    publisher text,
    qualityassured text,
    ranking text,
    relevance text,
    school text,
    search text,
    series text,
    title text,
    type text,
    url text,
    volume text,
    year text
);


--
-- Name: _entries_insert; Type: TABLE; Schema: _reference; Owner: -
--

CREATE TABLE _reference._entries_insert (
)
INHERITS (public._insert_base, reference.entries);


--
-- Name: entry_group; Type: TABLE; Schema: reference; Owner: -
--

CREATE TABLE reference.entry_group (
    entries_id integer NOT NULL,
    groups_id integer NOT NULL
);


--
-- Name: _entry_group_insert; Type: TABLE; Schema: _reference; Owner: -
--

CREATE TABLE _reference._entry_group_insert (
)
INHERITS (public._insert_base, reference.entry_group);


--
-- Name: _autoinc_pk_delete; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._autoinc_pk_delete (
    id bigint
)
INHERITS (public._edit_base);


--
-- Name: autoinc_pk; Type: TABLE; Schema: sandbox; Owner: -
--

CREATE TABLE sandbox.autoinc_pk (
    id integer NOT NULL,
    data character varying(50)
);


--
-- Name: autoinc_pk_id_seq; Type: SEQUENCE; Schema: sandbox; Owner: -
--

CREATE SEQUENCE sandbox.autoinc_pk_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: autoinc_pk_id_seq; Type: SEQUENCE OWNED BY; Schema: sandbox; Owner: -
--

ALTER SEQUENCE sandbox.autoinc_pk_id_seq OWNED BY sandbox.autoinc_pk.id;


--
-- Name: _autoinc_pk_edit; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._autoinc_pk_edit (
    id integer DEFAULT nextval('sandbox.autoinc_pk_id_seq'::regclass) NOT NULL,
    data character varying(50)
)
INHERITS (public._edit_base);


--
-- Name: _autoinc_pk_insert; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._autoinc_pk_insert (
    id integer DEFAULT nextval('sandbox.autoinc_pk_id_seq'::regclass) NOT NULL,
    data character varying(50)
)
INHERITS (public._edit_base);


--
-- Name: _includes_defaults_delete; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._includes_defaults_delete (
    id bigint
)
INHERITS (public._edit_base);


--
-- Name: includes_defaults; Type: TABLE; Schema: sandbox; Owner: -
--

CREATE TABLE sandbox.includes_defaults (
    id integer NOT NULL,
    data character varying(50),
    x integer,
    y integer
);


--
-- Name: includes_defaults_id_seq; Type: SEQUENCE; Schema: sandbox; Owner: -
--

CREATE SEQUENCE sandbox.includes_defaults_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: includes_defaults_id_seq; Type: SEQUENCE OWNED BY; Schema: sandbox; Owner: -
--

ALTER SEQUENCE sandbox.includes_defaults_id_seq OWNED BY sandbox.includes_defaults.id;


--
-- Name: _includes_defaults_edit; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._includes_defaults_edit (
    id integer DEFAULT nextval('sandbox.includes_defaults_id_seq'::regclass) NOT NULL,
    data character varying(50),
    x integer,
    y integer
)
INHERITS (public._edit_base);


--
-- Name: _includes_defaults_insert; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._includes_defaults_insert (
    id integer DEFAULT nextval('sandbox.includes_defaults_id_seq'::regclass) NOT NULL,
    data character varying(50),
    x integer,
    y integer
)
INHERITS (public._edit_base);


--
-- Name: _manual_pk_delete; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._manual_pk_delete (
    id bigint
)
INHERITS (public._edit_base);


--
-- Name: _manual_pk_edit; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._manual_pk_edit (
    id integer NOT NULL,
    data character varying(50)
)
INHERITS (public._edit_base);


--
-- Name: _manual_pk_insert; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._manual_pk_insert (
    id integer NOT NULL,
    data character varying(50)
)
INHERITS (public._edit_base);


--
-- Name: _unicode_table_delete; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._unicode_table_delete (
    id bigint
)
INHERITS (public._edit_base);


--
-- Name: unicode_table; Type: TABLE; Schema: sandbox; Owner: -
--

CREATE TABLE sandbox.unicode_table (
    id integer NOT NULL,
    unicode_data text
);


--
-- Name: unicode_table_id_seq; Type: SEQUENCE; Schema: sandbox; Owner: -
--

CREATE SEQUENCE sandbox.unicode_table_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: unicode_table_id_seq; Type: SEQUENCE OWNED BY; Schema: sandbox; Owner: -
--

ALTER SEQUENCE sandbox.unicode_table_id_seq OWNED BY sandbox.unicode_table.id;


--
-- Name: _unicode_table_edit; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._unicode_table_edit (
    id integer DEFAULT nextval('sandbox.unicode_table_id_seq'::regclass) NOT NULL,
    unicode_data text
)
INHERITS (public._edit_base);


--
-- Name: _unicode_table_insert; Type: TABLE; Schema: _sandbox; Owner: -
--

CREATE TABLE _sandbox._unicode_table_insert (
    id integer DEFAULT nextval('sandbox.unicode_table_id_seq'::regclass) NOT NULL,
    unicode_data text
)
INHERITS (public._edit_base);


--
-- Name: ego_conventional_powerplant; Type: TABLE; Schema: supply; Owner: -
--

CREATE TABLE supply.ego_conventional_powerplant (
    gid integer NOT NULL,
    bnetza_id text,
    company text,
    name text,
    postcode text,
    city text,
    street text,
    state text,
    block text,
    commissioned_original text,
    commissioned double precision,
    retrofit double precision,
    shutdown double precision,
    status text,
    fuel text,
    technology text,
    type text,
    eeg text,
    chp text,
    capacity double precision,
    capacity_uba double precision,
    chp_capacity_uba double precision,
    efficiency_data double precision,
    efficiency_estimate double precision,
    network_node text,
    voltage text,
    network_operator text,
    name_uba text,
    lat double precision,
    lon double precision,
    comment text,
    geom public.geometry(Point,4326)
);


--
-- Name: TABLE ego_conventional_powerplant; Type: COMMENT; Schema: supply; Owner: -
--

COMMENT ON TABLE supply.ego_conventional_powerplant IS '{
"Name": "Conventional power plants in Germany",
"Source": [{      "Name": "Open Power System Data (OPSD)",
                  "URL":  "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/" },
                 {"Name": "Bundesnetzagentur (BNetzA)",
                  "URL":  "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html" },
                 {"Name": "Umweltbundesamt (UBA)",
                  "URL":  "http://www.umweltbundesamt.de/dokument/datenbank-kraftwerke-in-deutschland" }],
"Reference date": "08.02.2016",
"Date of collection": "31.12.2015",
"Original file": "http://data.open-power-system-data.org/conventional_power_plants/opsd-conventional_power_plants-2016-03-08.zip",
"Spatial resolution": ["Germany"],
"Description": ["This dataset contains an augmented and corrected power plant list based on the power plant list provided by the BNetzA and UBA."],
"Column": [
                   {"Name": "gid",
                    "Description": "Geo ID",
                    "Unit": "" },
                   {"Name": "bnetza_id",
                    "Description": "Bundesnetzagentur unit ID",
                    "Unit": "" },     
                   {"Name": "company",
                    "Description": "Name of company",
                    "Unit": "" },     
                   {"Name": "name",
                    "Description": "name of unit",
                    "Unit": "" },     
                   {"Name": "postcode",
                    "Description": "postcode",
                    "Unit": "" },     
                   {"Name": "city",
                    "Description": "Name of City",
                    "Unit": "" },     
                   {"Name": "street",
                    "Description": "Street name, address",
                    "Unit": "" },
                   {"Name": "state",
                    "Description": "Name of federate state of location",
                    "Unit": "" },     
                   {"Name": "block",
                    "Description": "Power plant block",
                    "Unit": "" },     
                   {"Name": "commissioned_original",
                    "Description": "Year of commissioning (raw data)",
                    "Unit": "" },     
                   {"Name": "commissioned",
                    "Description": "Year of commissioning",
                    "Unit": "" },     
                   {"Name": "retrofit",
                    "Description": "Year of modernization according to UBA data",
                    "Unit": "" },     
                   {"Name": "shutdown",
                    "Description": "Year of decommissioning",
                    "Unit": "" },     
                   {"Name": "status",
                    "Description": "Power plant status",
                    "Unit": "" },     
                   {"Name": "fuel",
                    "Description": "Used fuel or energy source",
                    "Unit": "" },     
                   {"Name": "technology",
                    "Description": "Power plant technology or sort",
                    "Unit": "" },     
                   {"Name": "type",
                    "Description": "Purpose of the produced power",
                    "Unit": "" },     
                   {"Name": "eeg",
                    "Description": "Status of being entitled to a renumeration",
                    "Unit": "" },     
                   {"Name": "chp",
                    "Description": "Status of being able to supply heat",
                    "Unit": "" },     
                   {"Name": "capacity",
                    "Description": "Power capacity",
                    "Unit": "MW" },     
                   {"Name": "capacity_uba",
                    "Description": "Power capacity according to UBA data",
                    "Unit": "" },     
                   {"Name": "chp_capacity_uba",
                    "Description": "Heat capacity according to UBA data",
                    "Unit": "MW" },     
                   {"Name": "efficiency_data",
                    "Description": "Proportion between power output and input",
                    "Unit": "" },     
                   {"Name": "efficiency_estimate",
                    "Description": "Estimated proportion between power output and input",
                    "Unit": "" },     
                   {"Name": "network_node",
                    "Description": "Connection point to the electricity grid",
                    "Unit": "" },     
                   {"Name": "voltage",
                    "Description": "Grid or transformation level of the network node",
                    "Unit": "" },     
                   {"Name": "network_operator",
                    "Description": "Network operator of the grid or transformation level",
                    "Unit": "" },     
                   {"Name": "name_uba",
                    "Description": "Power plant name according to UBA data",
                    "Unit": "" },     
                   {"Name": "lat",
                    "Description": "Precise geographic coordinates - latitude",
                    "Unit": "" },     
                   {"Name": "lon",
                    "Description": "Precise geographic coordinates - longitude",
                    "Unit": "" },     
                   {"Name": "comment",
                    "Description": "Further comments",
                    "Unit": "" },                             
                   {"Name": "geom",
                    "Description": "Geometry Point",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Wolf-Dieter Bunke",
                    "Mail": "Wolf-dieter-bunke@uni-flensburg.de",
                    "Date":  "19.02.2016",
                    "Comment": "Add comments and structure" }
                  ],
"ToDo": ["Update list with new data version and data structure of opsd"],
"Licence": [""],
"Instructions for proper use": ["..."]
}';


--
-- Name: _ego_conventional_powerplant_insert; Type: TABLE; Schema: _supply; Owner: -
--

CREATE TABLE _supply._ego_conventional_powerplant_insert (
)
INHERITS (public._insert_base, supply.ego_conventional_powerplant);


--
-- Name: ego_dp_conv_powerplant; Type: TABLE; Schema: supply; Owner: -
--

CREATE TABLE supply.ego_dp_conv_powerplant (
    version text NOT NULL,
    gid integer NOT NULL,
    bnetza_id text,
    company text,
    name text,
    postcode text,
    city text,
    street text,
    state text,
    block text,
    commissioned_original text,
    commissioned double precision,
    retrofit double precision,
    shutdown double precision,
    status text,
    fuel text,
    technology text,
    type text,
    eeg text,
    chp text,
    capacity double precision,
    capacity_uba double precision,
    chp_capacity_uba double precision,
    efficiency_data double precision,
    efficiency_estimate double precision,
    network_node text,
    voltage text,
    network_operator text,
    name_uba text,
    lat double precision,
    lon double precision,
    comment text,
    geom public.geometry(Point,4326),
    voltage_level smallint,
    subst_id bigint,
    otg_id bigint,
    un_id bigint
);


--
-- Name: TABLE ego_dp_conv_powerplant; Type: COMMENT; Schema: supply; Owner: -
--

COMMENT ON TABLE supply.ego_dp_conv_powerplant IS '{
	"title": "eGo dataprocessing - Conventional powerplants",
	"description": "",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ", "url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "copyright": "© Reiner Lemoine Institut"},
		{"name": "OpenStreetMap", "description": " ", "url": "http://www.openstreetmap.org/", "license": "Open Database License (ODbL) v1.0", "copyright": "© OpenStreetMap contributors"},
		{"name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "description": " ", "url": "http://www.geodatenzentrum.de/", "license": "Geodatenzugangsgesetz (GeoZG)", "copyright": "© GeoBasis-DE / BKG 2016 (data changed)"},
		{"name": "Statistisches Bundesamt (Destatis) - Zensus2011", "description": " ", "url": "https://www.destatis.de/DE/Methoden/Zensus_/Zensus.html", "license": "Datenlizenz Deutschland – Namensnennung – Version 2.0", "copyright": "© Statistisches Bundesamt, Wiesbaden, Genesis-Online, 2016; Datenlizenz by-2-0"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": " "} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "© Reiner Lemoine Institut"} ],
	"contributors": [
		{"name": "Ludee", "email": " ", "date": "2017-04-13", "comment": "Create table" } ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", 	"description": "Version id", "unit": "" },
				{"name": "id", 		"description": "Unique identifier", "unit": "" }
				 ]},
		"meta_version": "1.2"}] }';


--
-- Name: _ego_dp_conv_powerplant_insert; Type: TABLE; Schema: _supply; Owner: -
--

CREATE TABLE _supply._ego_dp_conv_powerplant_insert (
)
INHERITS (public._insert_base, supply.ego_dp_conv_powerplant);


--
-- Name: forwind_oeko_renewable_capacity_per_federalstate; Type: TABLE; Schema: supply; Owner: -
--

CREATE TABLE supply.forwind_oeko_renewable_capacity_per_federalstate (
    id integer NOT NULL,
    technology text,
    year smallint NOT NULL,
    federal_state text,
    comment text,
    capacity integer
);


--
-- Name: _forwind_oeko_renewable_capacity_per_federalstate_insert; Type: TABLE; Schema: _supply; Owner: -
--

CREATE TABLE _supply._forwind_oeko_renewable_capacity_per_federalstate_insert (
)
INHERITS (public._insert_base, supply.forwind_oeko_renewable_capacity_per_federalstate);


--
-- Name: ego_supply_pf_generator_single; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_pf_generator_single (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    generator_id bigint NOT NULL,
    bus bigint,
    dispatch text DEFAULT 'flexible'::text,
    control text DEFAULT 'PQ'::text,
    p_nom double precision DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    p_min_pu_fixed double precision DEFAULT 0,
    p_max_pu_fixed double precision DEFAULT 1,
    sign double precision DEFAULT 1,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision,
    w_id bigint,
    aggr_id bigint,
    voltage_level smallint
);


--
-- Name: TABLE ego_supply_pf_generator_single; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_supply_pf_generator_single IS '{
"Name": "Seperated generators for powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["ego_dp_powerflow_assignment_generator.sql"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "name of scenario",
                    "Unit": "" },
		   {"Name": "generator_id",
                    "Description": "unique id for generators",
                    "Unit": "" },                   
                   {"Name": "bus",
                    "Description": "id of associated bus",
                    "Unit": "" },
                   {"Name": "dispatch",
                    "Description": "Controllability of active power dispatch, must be flexible or variable",
                    "Unit": "" },
                   {"Name": "control",
                    "Description": "P,Q,V control strategy, must be PQ, PV or Slack",
                    "Unit": "" },
                   {"Name": "p_nom",
                    "Description": "Nominal power",
                    "Unit": "MW" },
                   {"Name": "p_nom_extendable",
                    "Description": "Switch to allow capacity p_nom to be extended",
                    "Unit": "" },
                   {"Name": "p_nom_min",
                    "Description": "If p_nom is extendable, set its minimum value",
                    "Unit": "" },
                   {"Name": "p_nom_max",
                    "Description": "If p_nom is extendable, set its maximum value (e.g. limited by potential)",
                    "Unit": "" },
                   {"Name": "p_min_pu_fixed",
                    "Description": "If control=flexible this gives the minimum output per unit of p_nom",
                    "Unit": "per unit" },
                   {"Name": "p_max_pu_fixed",
                    "Description": "If control=flexible this gives the maximum output per unit of p_nom, equivalent to a de-rating factor",
                    "Unit": "per unit" },
                   {"Name": "sign",
                    "Description": "power sign",
                    "Unit": "" },
                   {"Name": "source",
                    "Description": "prime mover energy carrier",
                    "Unit": "" },
                   {"Name": "marginal_cost",
                    "Description": "Marginal cost of production of 1 MWh",
                    "Unit": "€/MWh" },
                   {"Name": "capital_cost",
                    "Description": "Capital cost of extending p_nom by 1 MW",
                    "Unit": "€/MW" },
                   {"Name": "efficiency",
                    "Description": "Ratio between primary energy and electrical energy",
                    "Unit": "per unit" },
                   {"Name": "w_id",
                    "Description": "w_id",
                    "Unit": "" },                        
                   {"Name": "aggr_id",
                    "Description": "aggregate id",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "05.10.2016",
                    "Comment": "..." }, 
	           {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "27.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["add licence, Please complete"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: pf_pp_by_source_aggr_id; Type: MATERIALIZED VIEW; Schema: calc_renpass_gis; Owner: -
--

CREATE MATERIALIZED VIEW calc_renpass_gis.pf_pp_by_source_aggr_id AS
 SELECT ego.aggr_id,
    ego.source,
    (ego.p_nom / sum(ego.p_nom) OVER (PARTITION BY ego.source)) AS fraction_of_installed
   FROM ( SELECT ego_supply_pf_generator_single.aggr_id,
            ego_supply_pf_generator_single.source,
            sum(ego_supply_pf_generator_single.p_nom) AS p_nom
           FROM model_draft.ego_supply_pf_generator_single
          WHERE (((ego_supply_pf_generator_single.scn_name)::text = 'eGo 100'::text) AND (ego_supply_pf_generator_single.aggr_id IS NOT NULL))
          GROUP BY ego_supply_pf_generator_single.aggr_id, ego_supply_pf_generator_single.source) ego
  WITH NO DATA;


--
-- Name: renpass_gis_results_id_seq; Type: SEQUENCE; Schema: calc_renpass_gis; Owner: -
--

CREATE SEQUENCE calc_renpass_gis.renpass_gis_results_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: renpass_gis_results; Type: TABLE; Schema: calc_renpass_gis; Owner: -
--

CREATE TABLE calc_renpass_gis.renpass_gis_results (
    id bigint DEFAULT nextval('calc_renpass_gis.renpass_gis_results_id_seq'::regclass) NOT NULL,
    scenario_id integer,
    bus_label character varying(250),
    type character varying(250),
    obj_label character varying(250),
    datetime timestamp without time zone,
    val numeric
);


--
-- Name: TABLE renpass_gis_results; Type: COMMENT; Schema: calc_renpass_gis; Owner: -
--

COMMENT ON TABLE calc_renpass_gis.renpass_gis_results IS '{
"Name": "renpassG!S results",
"Source": [{
                  "Name": "ZNES",
                  "URL":  "" }],
"Reference date": "",
"Date of collection": "",
"Original file": "",
"Spatial resolution": [""],
"Description": ["Results of renpassG!S"],
"Column": [
                   {"Name":"id", "Description":"", "Unit":""},
                   {"Name":"scenario_id", "Description":"", "Unit":""},
                   {"Name":"bus_label", "Description":"", "Unit":""},
                   {"Name":"type", "Description":"", "Unit":""},
                   {"Name":"obj_label", "Description":"", "Unit":""},
                   {"Name":"datetime", "Description":"", "Unit":""},
                   {"Name":"val", "Description":"", "Unit":""},
],
"Changes":[
                   {"Name": "Martin Söthe",
                    "Mail": "",
                    "Date":  "",
                    "Comment": "Created table, added description" }],
"ToDo": [""],
"Licence": [""],
"Instructions for proper use": [""],
"Label": [""]
}''';


--
-- Name: renpass_gis_scenario_id_seq; Type: SEQUENCE; Schema: calc_renpass_gis; Owner: -
--

CREATE SEQUENCE calc_renpass_gis.renpass_gis_scenario_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: renpass_gis_scenario; Type: TABLE; Schema: calc_renpass_gis; Owner: -
--

CREATE TABLE calc_renpass_gis.renpass_gis_scenario (
    id integer DEFAULT nextval('calc_renpass_gis.renpass_gis_scenario_id_seq'::regclass) NOT NULL,
    name character varying(250) NOT NULL,
    project character varying(50),
    repository character varying(50),
    commit character varying(50),
    compatibility character varying(6),
    comment character varying(250)
);


--
-- Name: TABLE renpass_gis_scenario; Type: COMMENT; Schema: calc_renpass_gis; Owner: -
--

COMMENT ON TABLE calc_renpass_gis.renpass_gis_scenario IS '{
"Name": "renpassG!S sink",
"Source": [{
                  "Name": "ZNES",
                  "URL":  "" }],
"Reference date": "",
"Date of collection": "",
"Original file": "",
"Spatial resolution": [""],
"Description": ["Scenario definition table of renpassG!S"],
"Column": [
                   {"Name":"id", "Description":"scenario id", "Unit":""},
                   {"Name":"name", "Description":"scenario name", "Unit":""}


],
"Changes":[
                   {"Name": "Martin Söthe",
                    "Mail": "",
                    "Date":  "",
                    "Comment": "Created table, added description" }],
"ToDo": [""],
"Licence": [""],
"Instructions for proper use": [""],
"Label": [""]
}''';


--
-- Name: ego_dp_loadarea; Type: TABLE; Schema: demand; Owner: -
--

CREATE TABLE demand.ego_dp_loadarea (
    version text NOT NULL,
    id integer NOT NULL,
    subst_id integer,
    area_ha numeric,
    nuts character varying(5),
    rs_0 character varying(12),
    ags_0 character varying(12),
    otg_id integer,
    un_id integer,
    zensus_sum integer,
    zensus_count integer,
    zensus_density numeric,
    ioer_sum numeric,
    ioer_count integer,
    ioer_density numeric,
    sector_area_residential numeric,
    sector_area_retail numeric,
    sector_area_industrial numeric,
    sector_area_agricultural numeric,
    sector_area_sum numeric,
    sector_share_residential numeric,
    sector_share_retail numeric,
    sector_share_industrial numeric,
    sector_share_agricultural numeric,
    sector_share_sum numeric,
    sector_count_residential integer,
    sector_count_retail integer,
    sector_count_industrial integer,
    sector_count_agricultural integer,
    sector_count_sum integer,
    sector_consumption_residential double precision,
    sector_consumption_retail double precision,
    sector_consumption_industrial double precision,
    sector_consumption_agricultural double precision,
    sector_consumption_sum double precision,
    sector_peakload_retail double precision,
    sector_peakload_residential double precision,
    sector_peakload_industrial double precision,
    sector_peakload_agricultural double precision,
    geom_centroid public.geometry(Point,3035),
    geom_surfacepoint public.geometry(Point,3035),
    geom_centre public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_dp_loadarea; Type: COMMENT; Schema: demand; Owner: -
--

COMMENT ON TABLE demand.ego_dp_loadarea IS '{
	"title": "eGo dataprocessing - Loadarea",
	"description": "Loadarea with electrical consumption per sector",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ", "url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "copyright": "© Reiner Lemoine Institut"},
		{"name": "OpenStreetMap", "description": " ", "url": "http://www.openstreetmap.org/", "license": "Open Database License (ODbL) v1.0", "copyright": "© OpenStreetMap contributors"},
		{"name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "description": " ", "url": "http://www.geodatenzentrum.de/", "license": "Geodatenzugangsgesetz (GeoZG)", "copyright": "© GeoBasis-DE / BKG 2016 (data changed)"},
		{"name": "Statistisches Bundesamt (Destatis) - Zensus2011", "description": " ", "url": "https://www.destatis.de/DE/Methoden/Zensus_/Zensus.html", "license": "Datenlizenz Deutschland – Namensnennung – Version 2.0", "copyright": "© Statistisches Bundesamt, Wiesbaden, Genesis-Online, 2016; Datenlizenz by-2-0"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": " "} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "© Reiner Lemoine Institut"} ],
	"contributors": [
		{"name": "Ludee", "email": " ", "date": "02.10.2016", "comment": "Create loadareas" },
		{"name": "Ilka Cussmann", "email": " ", "date": "25.10.2016", "comment": "Create metadata" },
		{"name": "Ludee", "email": " ", "date": "15.01.2017", "comment": "Update metadata"},
		{"name": "Ludee", "email": " ", "date": "21.03.2017", "comment": "Update metadata to 1.1"},
		{"name": "Ludee", "email": " ", "date": "2017-03-21", "comment": "Update metadata to 1.2"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", 	"description": "Version id", "unit": "" },
				{"name": "id", 		"description": "Unique identifier", "unit": "" },
				{"name": "subst_id", 	"description": "Substation id", "unit": "" },
				{"name": "area_ha", 	"description": "Area", "unit": "ha" },
				{"name": "nuts", 	"description": "Nuts id", "unit": "" },
				{"name": "rs_0", 	"description": "Geimeindeschlüssel, municipality key", "unit": "" },
				{"name": "ags_0", 	"description": "Geimeindeschlüssel, municipality key", "unit": "" },
				{"name": "otg_id", 	"description": "States the id of respective bus in osmtgmod", "unit": "" },
				{"name": "zensus_sum", 		"description": "Population", "unit": "" },
				{"name": "zensus_count", 	"description": "Number of population rasters", "unit": "" },
				{"name": "zensus_density", 	"description": "Average population per raster (zensus_sum/zensus_count)", "unit": "" },
				{"name": "sector_area_residential", 	"description": "Aggregated residential area", "unit": "ha" },
				{"name": "sector_area_retail", 		"description": "Aggregated retail area", "unit": "ha" },
				{"name": "sector_area_industrial", 	"description": "Aggregated industrial area", "unit": "ha" },
				{"name": "sector_area_agricultural", 	"description": "Aggregated agricultural area", "unit": "ha" },
				{"name": "sector_area_sum", 		"description": "Aggregated sector area", "unit": "ha" },
				{"name": "sector_share_residential", 	"description": "Percentage of residential area per load area", "unit":"" },
				{"name": "sector_share_retail", 	"description": "Percentage of retail area per load area", "unit": ""},
				{"name": "sector_share_industrial", 	"description": "Percentage of industrial area per load area", "unit": ""},
				{"name": "sector_share_agricultural", 	"description": "Percentage of agricultural area per load area", "unit": "" },
				{"name": "sector_share_sum", 		"description": "Percentage of sector area per load area", "unit": "" },
				{"name": "sector_count_residential", 	"description": "Number of residential areas per load area", "unit": "" },
				{"name": "sector_count_retail", 	"description": "Number of retail areas per load area", "unit": "" },
				{"name": "sector_count_industrial", 	"description": "Number of industrial areas per load area", "unit": "" },
				{"name": "sector_count_agricultural", 	"description": "Number of agricultural areas per load area", "unit": "" },
				{"name": "sector_count_sum", 		"description": "Number of sector areas per load area", "unit": "" },
				{"name": "sector_consumption_residential", 	"description": "Electricity consumption of residential sector", "unit": "GWh" },
				{"name": "sector_consumption_retail", 		"description": "Electricity consumption of retail sector", "unit": "GWh" },
				{"name": "sector_consumption_industrial", 	"description": "Electricity consumption of industrial sector", "unit": "GWh" },
				{"name": "sector_consumption_agricultural", 	"description": "Electricity consumption of agricultural sector", "unit": "GWh" },
				{"name": "sector_consumption_sum", 		"description": "Electricity consumption of ALL sectorS", "unit": "GWh" },
				{"name": "geom_centroid", 	"description": "Centroid (can be outside the polygon)", "unit": "" },
				{"name": "geom_surfacepoint", 	"description": "Point on surface", "unit": "" },
				{"name": "geom_centre", 	"description": "Centroid and point on surface when centroid outside the polygon", "unit": "" },
				{"name": "geom", 		"description": "Geometry", "unit": "" } ]},
		"meta_version": "1.2"}] }';


--
-- Name: ego_dp_hvmv_substation; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_dp_hvmv_substation (
    version text NOT NULL,
    subst_id integer NOT NULL,
    lon double precision,
    lat double precision,
    point public.geometry(Point,4326),
    polygon public.geometry,
    voltage text,
    power_type text,
    substation text,
    osm_id text,
    osm_www text,
    frequency text,
    subst_name text,
    ref text,
    operator text,
    dbahn text,
    status smallint,
    otg_id bigint,
    ags_0 text,
    geom public.geometry(Point,3035)
);


--
-- Name: TABLE ego_dp_hvmv_substation; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_dp_hvmv_substation IS '{
	"title": "eGo dataprocessing - HVMV Substation",
	"description": "Abstracted substation between high- and medium voltage (Transition point)",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ", "url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "copyright": "© Reiner Lemoine Institut"},
		{"name": "OpenStreetMap", "description": " ", "url": "http://www.openstreetmap.org/", "license": "Open Database License (ODbL) v1.0", "copyright": "© OpenStreetMap contributors"},
		{"name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "description": " ", "url": "http://www.geodatenzentrum.de/", "license": "Geodatenzugangsgesetz (GeoZG)", "copyright": "© GeoBasis-DE / BKG 2016 (Data changed)"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": ""} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "© NEXT ENERGY"} ],
	"contributors": [
		{"name": "lukasol", "email": "", "date":  "20.10.2016", "comment": "Create substations" },
		{"name": "Ludee", "email": "", "date": "15.01.2017", "comment": "Update metadata"},
		{"name": "Ludee", "email": "", "date": "21.03.2017", "comment": "Update metadata to 1.1"},
		{"name": "Ludee", "email": "", "date": "2017-04-06", "comment": "Update metadata to 1.2"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", "description": "version id", "unit": "" },
				{"name": "subst_id", "description": "unique identifier", "unit": "" },
				{"name": "subst_name", "description": "name of substation", "unit": "" },
				{"name": "ags_0", "description": "Geimeindeschlüssel, municipality key", "unit": "" },
				{"name": "voltage", "description": "(all) voltage levels contained in substation", "unit": "" },
				{"name": "power_type", "description": "value of osm key power", "unit": "" },
				{"name": "substation", "description": "value of osm key substation", "unit": "" },
				{"name": "osm_id", "description": "osm id of substation, begins with prefix n(node) or w(way)", "unit": "" },
				{"name": "osm_www", "description": "hyperlink to osm source", "unit": "" },
				{"name": "frequency", "description": "frequency of substation", "unit": "" },
				{"name": "ref", "description": "reference tag of substation", "unit": "" },
				{"name": "operator", "description": "operator(s) of substation", "unit": "" },
				{"name": "dbahn", "description": "states if substation is connected to railway grid and if yes the indicator", "unit": "" },
				{"name": "status", "description": "states the osm source of substation (1=way, 2=way intersected by 110kV-line, 3=node)", "unit": "" },
				{"name": "otg_id", "description": "states the id of respective bus in osmtgmod", "unit": "" },
				{"name": "lat", "description": "latitude of substation", "unit": "" },
				{"name": "lon", "description": "longitude of substation", "unit": "" },
				{"name": "point", "description": "point geometry of substation", "unit": "" },
				{"name": "polygon", "description": "original geometry of substation", "unit": "" },
				{"name": "geom", "description": "geometry", "unit": "" } ]},
		"meta_version": "1.2"}] }';


--
-- Name: ego_dp_mv_griddistrict; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_dp_mv_griddistrict (
    version text NOT NULL,
    subst_id integer NOT NULL,
    subst_sum integer,
    type1 integer,
    type1_cnt integer,
    type2 integer,
    type2_cnt integer,
    type3 integer,
    type3_cnt integer,
    "group" character(1),
    gem integer,
    gem_clean integer,
    zensus_sum integer,
    zensus_count integer,
    zensus_density numeric,
    population_density numeric,
    la_count integer,
    area_ha numeric,
    la_area numeric(10,1),
    free_area numeric(10,1),
    area_share numeric(4,1),
    consumption numeric,
    consumption_per_area numeric,
    dea_cnt integer,
    dea_capacity numeric,
    lv_dea_cnt integer,
    lv_dea_capacity numeric,
    mv_dea_cnt integer,
    mv_dea_capacity numeric,
    geom_type text,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_dp_mv_griddistrict; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_dp_mv_griddistrict IS '{
	"title": "eGo dataprocessing - MV Grid district",
	"description": "Catchment area of HVMV substation (Transition point)",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ", "url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "copyright": "© Reiner Lemoine Institut"},
		{"name": "OpenStreetMap", "description": " ", "url": "http://www.openstreetmap.org/", "license": "Open Database License (ODbL) v1.0", "copyright": "© OpenStreetMap contributors"},
		{"name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "description": " ", "url": "http://www.geodatenzentrum.de/", "license": "Geodatenzugangsgesetz (GeoZG)", "copyright": "© GeoBasis-DE / BKG 2016 (Data changed)"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": ""} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "© Reiner Lemoine Institut"} ],
	"contributors": [
		{"name": "Ludee", "email": "", "date": "02.09.2016", "comment": "Create table"},
		{"name": "Ludee", "email": "", "date": "15.01.2017", "comment": "Update metadata"},
		{"name": "Ludee", "email": "", "date": "21.03.2017", "comment": "Update metadata to 1.1"},
		{"name": "Ludee", "email": "", "date": "2017-04-06", "comment": "Update metadata to 1.2"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", "description": "version id", "unit": "" },
				{"name": "subst_id", "description": "unique identifier", "unit": "" },
				{"name": "subst_sum", "description": "number of substation per MV griddistrict", "unit": "" },
				{"name": "area_ha", "description": "area in hectar", "unit": "ha" },
				{"name": "geom_type", "description": "polygon type (polygon, multipolygon)", "unit": "" },
				{"name": "geom", "description": "geometry", "unit": "" } ]},
		"meta_version": "1.2"}] }';


--
-- Name: ego_dp_mvlv_substation; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_dp_mvlv_substation (
    version text NOT NULL,
    mvlv_subst_id integer NOT NULL,
    la_id integer,
    subst_id integer,
    geom public.geometry(Point,3035),
    is_dummy boolean,
    subst_cnt integer
);


--
-- Name: TABLE ego_dp_mvlv_substation; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_dp_mvlv_substation IS '{
	"title": "eGo dataprocessing - HVMV Substation",
	"description": "Abstracted substation between medium- and low voltage (Distribution substation)",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ", "url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "copyright": "© Reiner Lemoine Institut"},
		{"name": "OpenStreetMap", "description": " ", "url": "http://www.openstreetmap.org/", "license": "Open Database License (ODbL) v1.0", "copyright": "© OpenStreetMap contributors"},
		{"name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "description": " ", "url": "http://www.geodatenzentrum.de/", "license": "Geodatenzugangsgesetz (GeoZG)", "copyright": "© GeoBasis-DE / BKG 2016 (Data changed)"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": ""} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "© Reiner Lemoine Institut"} ],
	"contributors": [
		{"name": "jong42", "email": "", "date": "20.10.2016", "comment": "Create table"},
		{"name": "jong42", "email": "", "date": "27.10.2016", "comment": "Change table names"},
		{"name": "Ludee", "email": "", "date": "15.01.2017", "comment": "Update metadata"},
		{"name": "Ludee", "email": "", "date": "21.03.2017", "comment": "Update metadata to 1.1"},
		{"name": "Ludee", "email": "", "date": "2017-04-06", "comment": "Update metadata to 1.2"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", "description": "version id", "unit": "" },
				{"name": "subst_id", "description": "unique identifier", "unit": "" },
				{"name": "mvgd_id", "description": "corresponding hvmv substation", "unit": "" },
				{"name": "geom", "description": "geometry", "unit": "" } ]},
		"meta_version": "1.2"}] }';


--
-- Name: ego_pf_hv_bus; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_bus (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    bus_id bigint NOT NULL,
    v_nom double precision,
    current_type text DEFAULT 'AC'::text,
    v_mag_pu_min double precision DEFAULT 0,
    v_mag_pu_max double precision,
    geom public.geometry(Point,4326)
);


--
-- Name: TABLE ego_pf_hv_bus; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_bus IS '{
    "title": "eGo hv powerflow - bus",
    "description": "Buses relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "scn_name",
                    "unit": "",
                    "description": "name of corresponding scenario"
                },
                {
                    "name": "bus_id",
                    "unit": "",
                    "description": "unique id for bus, equivalent to id from osmtgmod"
                },
                {
                    "name": "v_nom",
                    "unit": "kV",
                    "description": "nominal voltage"
                },
                {
                    "name": "current_type",
                    "unit": "",
                    "description": "current type - AC or DC"
                },
                {
                    "name": "v_mag_pu_min",
                    "unit": "per unit",
                    "description": "Minimum desired voltage, per unit of v_nom"
                },
                {
                    "name": "v_mag_pu_max",
                    "unit": "per unit",
                    "description": "Maximum desired voltage, per unit of v_nom"
                },
                {
                    "name": "geom",
                    "unit": "...",
                    "description": "geometry of bus"
                }
            ],
            "name": "grid.ego_pf_hv_bus",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_generator; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_generator (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    generator_id bigint NOT NULL,
    bus bigint,
    dispatch text DEFAULT 'flexible'::text,
    control text DEFAULT 'PQ'::text,
    p_nom double precision DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    p_min_pu_fixed double precision DEFAULT 0,
    p_max_pu_fixed double precision DEFAULT 1,
    sign double precision DEFAULT 1,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision
);


--
-- Name: TABLE ego_pf_hv_generator; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_generator IS '{
    "title": "eGo hv powerflow - generator",
    "description": "Generators relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "scn_name",
                    "unit": "",
                    "description": "name of corresponding scenario"
                },
                {
                    "name": "generator_id",
                    "unit": "",
                    "description": "ID of corresponding generator"
                },
                {
                    "name": "bus",
                    "unit": "",
                    "description": "id of associated bus"
                },
                {
                    "name": "dispatch",
                    "unit": "",
                    "description": "Controllability of active power dispatch, must be flexible or variable."
                },
                {
                    "name": "control",
                    "unit": "",
                    "description": "P,Q,V control strategy, must be PQ, PV or Slack."
                },
                {
                    "name": "p_nom",
                    "unit": "MW",
                    "description": "Nominal power"
                },
                {
                    "name": "p_nom_extendable",
                    "unit": "",
                    "description": "Switch to allow capacity p_nom to be extended"
                },
                {
                    "name": "p_nom_min",
                    "unit": "",
                    "description": "If p_nom is extendable, set its minimum value"
                },
                {
                    "name": "p_nom_max",
                    "unit": "",
                    "description": "If p_nom is extendable, set its maximum value (e.g. limited by potential)"
                },
                {
                    "name": "p_min_pu_fixed",
                    "unit": "per unit",
                    "description": "If control=flexible this gives the minimum output per unit of p_nom"
                },
                {
                    "name": "p_max_pu_fixed",
                    "unit": "per unit",
                    "description": "If control=flexible this gives the maximum output per unit of p_nom, equivalent to a de-rating factor."
                },
                {
                    "name": "sign",
                    "unit": "",
                    "description": "power sign"
                },
                {
                    "name": "source",
                    "unit": "",
                    "description": "prime mover energy carrier"
                },
                {
                    "name": "marginal_cost",
                    "unit": "EUR/MWh",
                    "description": "Marginal cost of production of 1 MWh"
                },
                {
                    "name": "capital_cost",
                    "unit": "EUR/MW",
                    "description": "Capital cost of extending p_nom by 1 MW"
                },
                {
                    "name": "efficiency",
                    "unit": "per unit",
                    "description": "Ratio between primary energy and electrical energy"
                }
            ],
            "name": "grid.ego_pf_hv_generator",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_generator_pq_set; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_generator_pq_set (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    generator_id integer NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[]
);


--
-- Name: TABLE ego_pf_hv_generator_pq_set; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_generator_pq_set IS '{
    "title": "eGo hv powerflow - generator time series",
    "description": "Time series of generators relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Europa-Universitaet Flensburg, Center for Sustainable Energy Systems",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "https://github.com/oemof/feedinlib",
            "copyright": "\u00a9 oemof developing group",
            "name": "oemof feedinlib",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Europa-Universitaet Flensburg, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "scn_name",
                    "unit": "",
                    "description": "name of corresponding scenario"
                },
                {
                    "name": "generator_id",
                    "unit": "",
                    "description": "ID of corresponding generator"
                },
                {
                    "name": "temp_id",
                    "unit": "",
                    "description": "ID of temporal resolution"
                },
                {
                    "name": "p_set",
                    "unit": "MW",
                    "description": "active power set point (for PF)"
                },
                {
                    "name": "q_set",
                    "unit": "MVar",
                    "description": "reactive power set point (for PF)"
                },
                {
                    "name": "p_min_pu",
                    "unit": "per unit",
                    "description": "If control=variable this gives the minimum output for each snapshot per unit of p_nom for the OPF"
                },
                {
                    "name": "p_max_pu",
                    "unit": "per unit",
                    "description": "If control=variable this gives the maximum output for each snapshot per unit of p_nom for the OPF"
                }
            ],
            "name": "grid.ego_pf_hv_generator_pq_set",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_line; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_line (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    line_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom numeric DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    capital_cost double precision,
    length double precision,
    cables integer,
    frequency numeric,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: TABLE ego_pf_hv_line; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_line IS '{
    "title": "eGo hv powerflow - lines",
    "description": "lines in eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "https://github.com/openego/osmTGmod",
            "copyright": "\u00a9 Wuppertal Institut",
            "name": "osmTGmod",
            "license": "Apache License 2.0",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 NEXT ENERGY",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "scn_name",
                    "unit": "",
                    "description": "name of corresponding scenario"
                },
                {
                    "name": "line_id",
                    "unit": "",
                    "description": "ID of line"
                },
                {
                    "name": "bus0",
                    "unit": "",
                    "description": "name of first bus to which branch is attached"
                },
                {
                    "name": "bus1",
                    "unit": "",
                    "description": "name of second bus to which branch is attached"
                },
                {
                    "name": "x",
                    "unit": "Ohm",
                    "description": "Series reactance"
                },
                {
                    "name": "r",
                    "unit": "Ohm",
                    "description": "Series resistance"
                },
                {
                    "name": "g",
                    "unit": "Siemens",
                    "description": "Shunt conductivity"
                },
                {
                    "name": "b",
                    "unit": "Siemens",
                    "description": "Shunt susceptance"
                },
                {
                    "name": "s_nom",
                    "unit": "MVA",
                    "description": "Limit of apparent power which can pass through branch"
                },
                {
                    "name": "s_nom_extendable",
                    "unit": "",
                    "description": "Switch to allow capacity s_nom to be extended"
                },
                {
                    "name": "s_nom_min",
                    "unit": "MVA",
                    "description": "If s_nom is extendable, set its minimum value"
                },
                {
                    "name": "s_nom_max",
                    "unit": "MVA",
                    "description": "If s_nom is extendable in OPF, set its maximum value"
                },
                {
                    "name": "capital_cost",
                    "unit": "EUR/MVA",
                    "description": "capital cost of extending s_nom by 1 MVA"
                },
                {
                    "name": "length",
                    "unit": "km",
                    "description": "length of line"
                },
                {
                    "name": "cables",
                    "unit": "",
                    "description": "..."
                },
                {
                    "name": "frequency",
                    "unit": "",
                    "description": "frequency of line"
                },
                {
                    "name": "terrain_factor",
                    "unit": "",
                    "description": "..."
                },
                {
                    "name": "geom",
                    "unit": "",
                    "description": "geometry that depict the real route of the line"
                },
                {
                    "name": "topo",
                    "unit": "...",
                    "description": "topology that depicts a direct connection between both busses"
                }
            ],
            "name": "grid.ego_pf_hv_line",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_link; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_link (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    link_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    efficiency double precision DEFAULT 1,
    marginal_cost double precision DEFAULT 0,
    p_nom numeric DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    capital_cost double precision,
    length double precision,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: ego_pf_hv_load; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_load (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    load_id bigint NOT NULL,
    bus bigint,
    sign double precision DEFAULT '-1'::integer,
    e_annual double precision
);


--
-- Name: TABLE ego_pf_hv_load; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_load IS '{
    "title": "eGo hv powerflow - loads",
    "description": "loads in eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://www.lak-energiebilanzen.de/seiten/energiebilanzenLaender.cfm",
            "copyright": " ",
            "name": "L\u00e4nderarbeitskreis Energiebilanzen",
            "license": " ",
            "description": " "
        },
        {
            "url": "http://www.stmwi.bayern.de/fileadmin/user_upload/stmwivt/Themen/Energie_und_Rohstoffe/Dokumente_und_Cover/Energiebilanz/2014/B-03_bilanzjo_mgh_2014-03-07.pdf",
            "copyright": " ",
            "name": "Bayerisches Landesamt f\u00fcr Statistik und Datenverarbeitung",
            "license": " ",
            "description": " "
        },
        {
            "url": "http://www.statistik-hessen.de/publikationen/download/277/index.html",
            "copyright": " ",
            "name": "Hessisches Statistisches Landesamt",
            "license": " ",
            "description": " "
        },
        {
            "url": "https://www.destatis.de/GPStatistik/servlets/MCRFileNodeServlet/MVHeft_derivate_00000168/E453_2011_00a.pdf;jsessionid=CD300CD3A06FF85FDEA864FF4D91D880",
            "copyright": " ",
            "name": "Statistisches Amt Mecklenburg-Vorpommern",
            "license": " ",
            "description": " "
        },
        {
            "url": "http://www.umwelt.niedersachsen.de/energie/daten/co2bilanzen/niedersaechsische-energie--und-co2-bilanzen-2009-6900.html",
            "copyright": " ",
            "name": "Nieders\u00e4chsisches Ministerium f\u00fcr Umwelt, Energie und Klimaschutz",
            "license": " ",
            "description": " "
        },
        {
            "url": "https://webshop.it.nrw.de/gratis/E449%20201100.pdf",
            "copyright": " ",
            "name": "Information und Technik Nordrhein-Westfalen",
            "license": " ",
            "description": " "
        },
        {
            "url": "http://www.stala.sachsen-anhalt.de/download/stat_berichte/6E402_j_2011.pdf",
            "copyright": " ",
            "name": "Statistisches Landesamt Sachsen-Anhalt",
            "license": " ",
            "description": " "
        },
        {
            "url": "http://www.statistik.thueringen.de/webshop/pdf/2011/05402_2011_00.pdf",
            "copyright": " ",
            "name": "Th\u00fcringer Landesamt f\u00fcr Statistik",
            "license": " ",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "scn_name",
                    "unit": "",
                    "description": "name of corresponding scenario"
                },
                {
                    "name": "load_id",
                    "unit": "",
                    "description": "unique id"
                },
                {
                    "name": "bus",
                    "unit": "",
                    "description": "id of associated bus"
                },
                {
                    "name": "sign",
                    "unit": "",
                    "description": "power sign"
                },
                {
                    "name": "e_annual",
                    "unit": "GWh",
                    "description": "annual electricity consumption"
                }
            ],
            "name": "grid.ego_pf_hv_load",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_load_pq_set; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_load_pq_set (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    load_id bigint NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[]
);


--
-- Name: TABLE ego_pf_hv_load_pq_set; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_load_pq_set IS '{
    "title": "eGo hv powerflow - loads",
    "description": "loads in eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "location": "",
        "extend": "Germany",
        "resolution": ""
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "name": "eGo dataprocessing",
            "description": " ",
            "url": "https://github.com/openego/data_processing/blob/master/dataprocessing/python_scripts/demand_per_mv_grid_district.py",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "copyright": "\u00a9 Reiner Lemoine Institut"
        }
    ],
    "license": {
        "id": "ODbL-1.0",
        "name": "Open Data Commons Open Database License 1.0",
        "version": "1.0",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "copyright": "\u00a9 Reiner Lemoine Institut"
    },
    "contributors": [
        {
            "name": "IlkaCu",
            "email": "",
            "date": "26.04.2017",
            "comment": "Create table"
        },
        {
            "name": "KilianZimmerer",
            "email": "",
            "date": "2017-6-27",
            "comment": "Update metadata to v1.3"
        }
    ],
    "resources": [
        {
            "name": "grid.ego_pf_hv_load_pq_set",
            "fromat": "sql",
            "fields": [
                {
                    "name": "version",
                    "description": "version id",
                    "unit": ""
                },
                {
                    "name": "scn_name",
                    "description": "name of corresponding scenario",
                    "unit": ""
                },
                {
                    "name": "load_id",
                    "description": "unique id",
                    "unit": ""
                },
                {
                    "name": "temp_id",
                    "description": "id of temporal resolution",
                    "unit": ""
                },
                {
                    "name": "p_set",
                    "description": "active power set point",
                    "unit": "MW"
                },
                {
                    "name": "q_set",
                    "description": "reactive power set point",
                    "unit": "MVar"
                }
            ]
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_bus; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_bus (
    result_id bigint NOT NULL,
    bus_id bigint NOT NULL,
    x double precision,
    y double precision,
    v_nom double precision,
    current_type text,
    v_mag_pu_min double precision,
    v_mag_pu_max double precision,
    geom public.geometry(Point,4326)
);


--
-- Name: TABLE ego_pf_hv_result_bus; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_bus IS '{
    "title": "eGo hv powerflow results - bus",
    "description": "Buses relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "bus_id",
                    "unit": "",
                    "description": "unique id for bus, equivalent to id from osmtgmod"
                },
                {
                    "name": "x",
                    "unit": "",
                    "description": "longitude of the bus"
                },
				{
                    "name": "y",
                    "unit": "",
                    "description": "latitude of the bus"
                },
				{
                    "name": "v_nom",
                    "unit": "kV",
                    "description": "nominal voltage"
                },
                {
                    "name": "current_type",
                    "unit": "",
                    "description": "current type - AC or DC"
                },
                {
                    "name": "v_mag_pu_min",
                    "unit": "per unit",
                    "description": "Minimum desired voltage, per unit of v_nom"
                },
                {
                    "name": "v_mag_pu_max",
                    "unit": "per unit",
                    "description": "Maximum desired voltage, per unit of v_nom"
                },
                {
                    "name": "geom",
                    "unit": "...",
                    "description": "geometry of bus"
                }
            ],
            "name": "grid.ego_pf_hv_result_bus",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_bus_t; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_bus_t (
    result_id bigint NOT NULL,
    bus_id bigint NOT NULL,
    v_mag_pu_set double precision[],
    p double precision[],
    q double precision[],
    v_mag_pu double precision[],
    v_ang double precision[],
    marginal_price double precision[]
);


--
-- Name: TABLE ego_pf_hv_result_bus_t; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_bus_t IS '{
    "title": "eGo hv powerflow results - bus_t",
    "description": "Results of time varying data of buses relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "bus_id",
                    "unit": "",
                    "description": "unique id for bus, equivalent to id from osmtgmod"
                },
                {
                    "name": "v_mag_pu_set",
                    "unit": "per unit",
                    "description": "Voltage magnitude set point, per unit of v_nom"
                },
				{
                    "name": "p",
                    "unit": "MW",
                    "description": "active power at bus (positive if net generation at bus)"
                },
				{
                    "name": "q",
                    "unit": "MVar",
                    "description": "reactive power (positive if net generation at bus)"
                },
                {
                    "name": "v_mag_pu",
                    "unit": "per unit",
                    "description": "Voltage magnitude, per unit of v_nom"
                },
                {
                    "name": "v_ang",
                    "unit": "radians",
                    "description": "Voltage angle"
                },
                {
                    "name": "marginal_price",
                    "unit": "currency",
                    "description": "Locational marginal price from LOPF from power balance constraint"
                }
            ],
            "name": "grid.ego_pf_hv_result_bus_t",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_generator; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_generator (
    result_id bigint NOT NULL,
    generator_id bigint NOT NULL,
    bus bigint,
    dispatch text,
    control text,
    p_nom double precision,
    p_nom_extendable boolean,
    p_nom_min double precision,
    p_nom_max double precision,
    p_min_pu_fixed double precision,
    p_max_pu_fixed double precision,
    sign double precision,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision,
    p_nom_opt double precision
);


--
-- Name: TABLE ego_pf_hv_result_generator; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_generator IS '{
    "title": "eGo hv powerflow results - generator",
    "description": "Generators relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
               {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "generator_id",
                    "unit": "",
                    "description": "ID of corresponding generator"
                },
                {
                    "name": "bus",
                    "unit": "",
                    "description": "id of associated bus"
                },
                {
                    "name": "dispatch",
                    "unit": "",
                    "description": "Controllability of active power dispatch, must be flexible or variable."
                },
                {
                    "name": "control",
                    "unit": "",
                    "description": "P,Q,V control strategy, must be PQ, PV or Slack."
                },
                {
                    "name": "p_nom",
                    "unit": "MW",
                    "description": "Nominal power"
                },
                {
                    "name": "p_nom_extendable",
                    "unit": "",
                    "description": "Switch to allow capacity p_nom to be extended"
                },
                {
                    "name": "p_nom_min",
                    "unit": "",
                    "description": "If p_nom is extendable, set its minimum value"
                },
                {
                    "name": "p_nom_max",
                    "unit": "",
                    "description": "If p_nom is extendable, set its maximum value (e.g. limited by potential)"
                },
                {
                    "name": "p_min_pu_fixed",
                    "unit": "per unit",
                    "description": "If control=flexible this gives the minimum output per unit of p_nom"
                },
                {
                    "name": "p_max_pu_fixed",
                    "unit": "per unit",
                    "description": "If control=flexible this gives the maximum output per unit of p_nom, equivalent to a de-rating factor."
                },
                {
                    "name": "sign",
                    "unit": "",
                    "description": "power sign"
                },
                {
                    "name": "source",
                    "unit": "",
                    "description": "prime mover energy carrier"
                },
                {
                    "name": "marginal_cost",
                    "unit": "EUR/MWh",
                    "description": "Marginal cost of production of 1 MWh"
                },
                {
                    "name": "capital_cost",
                    "unit": "EUR/MW",
                    "description": "Capital cost of extending p_nom by 1 MW"
                },
                {
                    "name": "efficiency",
                    "unit": "per unit",
                    "description": "Ratio between primary energy and electrical energy"
                },
                {
                    "name": "p_nom_opt",
                    "unit": "MW",
                    "description": "Optimised nominal power"
                }
            ],
            "name": "grid.ego_pf_hv_result_generator",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_generator_t; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_generator_t (
    result_id bigint NOT NULL,
    generator_id bigint NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[],
    p double precision[],
    q double precision[],
    status bigint[]
);


--
-- Name: TABLE ego_pf_hv_result_generator_t; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_generator_t IS '{
    "title": "eGo hv powerflow results - generator_t",
    "description": "Results of generators_t considered in eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "generator_id",
                    "unit": "",
                    "description": "ID of corresponding generator"
                },
                {
                    "name": "p_set",
                    "unit": "MW",
                    "description": "active power set point"
                },
				{
                    "name": "q_set",
                    "unit": "MVar",
                    "description": "reactive power set point"
                },
				{
                    "name": "p_min_pu",
                    "unit": "per unit",
                    "description": "If control=variable this gives the minimum output for each snapshot per unit of p_nom for the OPF"
                },
				{
                    "name": "p_max_pu",
                    "unit": "per unit",
                    "description": "If control=variable this gives the maximum output for each snapshot per unit of p_nom for the OPF, relevant e.g. if for renewables the power output is limited by the weather"
                },
				{
                    "name": "p",
                    "unit": "MW",
                    "description": "active power at bus (positive if net generation at bus)"
                },
				{
                    "name": "q",
                    "unit": "MVar",
                    "description": "reactive power (positive if net generation at bus)"
                },
				{
                    "name": "status",
                    "unit": "",
                    "description": "Status (1 is on, 0 is off). Only outputted if committable is True."
                }
            ],
            "name": "grid.ego_pf_hv_result_generator_t",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_line; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_line (
    result_id bigint NOT NULL,
    line_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric,
    r numeric,
    g numeric,
    b numeric,
    s_nom numeric,
    s_nom_extendable boolean,
    s_nom_min double precision,
    s_nom_max double precision,
    capital_cost double precision,
    length double precision,
    cables integer,
    frequency numeric,
    terrain_factor double precision DEFAULT 1,
    x_pu numeric,
    r_pu numeric,
    g_pu numeric,
    b_pu numeric,
    s_nom_opt numeric,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: TABLE ego_pf_hv_result_line; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_line IS '{
    "title": "eGo hv powerflow results - lines",
    "description": "Results of power lines considered in hv powerflow calculations",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "line_id",
                    "unit": "",
                    "description": "ID of corresponding line"
                },
                {
                    "name": "bus0",
                    "unit": "",
                    "description": "Name of first bus to which branch is attached"
                },
				{
                    "name": "bus1",
                    "unit": "",
                    "description": "Name of second bus to which branch is attached"
                },
				{
                    "name": "x",
                    "unit": "Ohm",
                    "description": "Series reactance"
                },
				{
                    "name": "r",
                    "unit": "Ohm",
                    "description": "Series resistance"
                },
				{
                    "name": "g",
                    "unit": "Siemens",
                    "description": "Shunt conductivity"
                },
				{
                    "name": "b",
                    "unit": "Siemens",
                    "description": "Shunt susceptance"
                },
				{
                    "name": "s_nom",
                    "unit": "MVA",
                    "description": "Limit of apparent power which can pass through branch"
                },
				{
                    "name": "s_nom_extendable",
                    "unit": "",
                    "description": "Switch to allow capacity s_nom to be extended"
                },
				{
                    "name": "s_nom_min",
                    "unit": "MVA",
                    "description": "If s_nom is extendable, set its minimum value"
                },
				{
                    "name": "s_nom_max",
                    "unit": "MVA",
                    "description": "If s_nom is extendable in OPF, set its maximum value"
                },
				{
                    "name": "capital_cost",
                    "unit": "€/MVA",
                    "description": "Capital cost of extending s_nom by 1 MVA"
                },
				{
                    "name": "length",
                    "unit": "km",
                    "description": "Length of line"
                },
				{
                    "name": "cables",
                    "unit": "",
                    "description": "Number of cables per line"
                },
				{
                    "name": "frequency",
                    "unit": "Hz",
                    "description": "Frequency of line"
                },
				{
                    "name": "terrain_factor",
                    "unit": "",
                    "description": "PyPSA terrain_factor"
                },
				{
                    "name": "x_pu",
                    "unit": "per unit",
                    "description": "Per unit series reactance calculated by PyPSA from x and bus.v_nom"
                },
				{
                    "name": "r_pu",
                    "unit": "per unit",
                    "description": "Per unit series resistance calculated by PyPSA from r and bus.v_nom"
                },
				{
                    "name": "g_pu",
                    "unit": "per unit",
                    "description": "Per unit shunt conductivity calculated by PyPSA from g and bus.v_nom"
                },
				{
                    "name": "b_pu",
                    "unit": "per unit",
                    "description": "Per unit shunt susceptance calculated by PyPSA from b and bus.v_nom"
                },
				{
                    "name": "s_nom_opt",
                    "unit": "MVA",
                    "description": "Optimised capacity for apparent power"
                },
				{
                    "name": "geom",
                    "unit": "geom",
                    "description": "geometry that depict the real route of the line"
                },
				{
                    "name": "topo",
                    "unit": "topo",
                    "description": "topology that depicts a direct connection between both busses"
                }
				
            ],
            "name": "grid.ego_pf_hv_result_line",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_line_t; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_line_t (
    result_id bigint NOT NULL,
    line_id bigint NOT NULL,
    p0 double precision[],
    q0 double precision[],
    p1 double precision[],
    q1 double precision[]
);


--
-- Name: TABLE ego_pf_hv_result_line_t; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_line_t IS '{
    "title": "eGo hv powerflow results - line_t",
    "description": "Results of power line_t considered in hv powerflow calculations",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "line_id",
                    "unit": "",
                    "description": "ID of corresponding line"
                },
                {
                    "name": "p0",
                    "unit": "MW",
                    "description": "active power at bus0 (positive if net generation at bus0)"
                },
				{
                    "name": "q0",
                    "unit": "MVar",
                    "description": "Reactive power at bus0 (positive if branch is withdrawing power from bus0)"
                },
				{
                    "name": "p1",
                    "unit": "MW",
                    "description": "active power at bus1 (positive if net generation at bus1)"
                },
				{
                    "name": "q1",
                    "unit": "MVar",
                    "description": "Reactive power at bus1 (positive if branch is withdrawing power from bus1)"
                }				
            ],
            "name": "grid.ego_pf_hv_result_line_t",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_load; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_load (
    result_id bigint NOT NULL,
    load_id bigint NOT NULL,
    bus bigint,
    sign double precision,
    e_annual double precision
);


--
-- Name: TABLE ego_pf_hv_result_load; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_load IS '{
    "title": "eGo hv powerflow results - load",
    "description": "Results of loads considered in hv powerflow calculations",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "load_id",
                    "unit": "",
                    "description": "ID of load"
                },
                {
                    "name": "bus",
                    "unit": "",
                    "description": "ID of associated bus"
                },
				{
                    "name": "sign",
                    "unit": "",
                    "description": "power sign"
                },
				{
                    "name": "e_annual",
                    "unit": "GWh",
                    "description": "annual electricity consumption"
                }				
            ],
            "name": "grid.ego_pf_hv_result_load",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_load_t; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_load_t (
    result_id bigint NOT NULL,
    load_id bigint NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p double precision[],
    q double precision[]
);


--
-- Name: TABLE ego_pf_hv_result_load_t; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_load_t IS '{
    "title": "eGo hv powerflow results - load_t",
    "description": "Results of load_t considered in hv powerflow calculations",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "load_id",
                    "unit": "",
                    "description": "ID of load"
                },
                {
                    "name": "p_set",
                    "unit": "MW",
                    "description": "active power set point"
                },
				{
                    "name": "q_set",
                    "unit": "MVar",
                    "description": "reactive power set point"
                },
				{
                    "name": "p",
                    "unit": "MW",
                    "description": "active power at bus (positive if net generation at bus)"
                },	
				{
                    "name": "q",
                    "unit": "MVar",
                    "description": "reactive power (positive if net generation at bus)"
                }
            ],
            "name": "grid.ego_pf_hv_result_load_t",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_meta; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_meta (
    result_id bigint NOT NULL,
    modeldraft_id bigint NOT NULL,
    scn_name character varying,
    calc_date timestamp without time zone,
    user_name character varying,
    method character varying,
    start_snapshot integer,
    end_snapshot integer,
    snapshots timestamp without time zone[],
    solver character varying,
    settings json
);


--
-- Name: TABLE ego_pf_hv_result_meta; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_meta IS '{
    "title": "eGo hv powerflow results - meta",
    "description": "Metadata of results from hv powerflow calculations",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "Unique result ID"
                },
                {
                    "name": "modeldraft_id",
                    "unit": "",
                    "description": "Result ID used in the model_draft schema"
                },
				{
                    "name": "scn_name",
                    "unit": "",
                    "description": "Scenario name"
                },
				{
                    "name": "calc_date",
                    "unit": "Datetime",
                    "description": "Datetime of calculation start"
                },
				{
                    "name": "user_name",
                    "unit": "",
                    "description": "Name of user who uploaded the results"
                },
				{
                    "name": "method",
                    "unit": "",
                    "description": "Type of powerflow calculation (pf/lopf/lpf)"
                },
				{
                    "name": "start_snapshot",
                    "unit": "",
                    "description": "Start step of calculation range"
                },
				{
                    "name": "end_snapshot",
                    "unit": "",
                    "description": "End step of calculation range"
                },
				{
                    "name": "snapshots",
                    "unit": "",
                    "description": "PyPSA snapshots"
                },
				{
                    "name": "solver",
                    "unit": "",
                    "description": "Name of solver used in calculations"
                },
				{
                    "name": "settings",
                    "unit": "",
                    "description": "All other settings used for the calculations"
                }				
            ],
            "name": "grid.ego_pf_hv_result_meta",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_storage; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_storage (
    result_id bigint NOT NULL,
    storage_id bigint NOT NULL,
    bus bigint,
    dispatch text,
    control text,
    p_nom double precision,
    p_nom_extendable boolean,
    p_nom_min double precision,
    p_nom_max double precision,
    p_min_pu_fixed double precision,
    p_max_pu_fixed double precision,
    sign double precision,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision,
    soc_initial double precision,
    soc_cyclic boolean DEFAULT false,
    max_hours double precision,
    efficiency_store double precision,
    efficiency_dispatch double precision,
    standing_loss double precision,
    p_nom_opt double precision
);


--
-- Name: TABLE ego_pf_hv_result_storage; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_storage IS '{
    "title": "eGo hv powerflow results - storage",
    "description": "Results of storages relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
               {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "storage_id",
                    "unit": "",
                    "description": "ID of corresponding storage"
                },
                {
                    "name": "bus",
                    "unit": "",
                    "description": "id of associated bus"
                },
                {
                    "name": "dispatch",
                    "unit": "",
                    "description": "Controllability of active power dispatch, must be flexible or variable."
                },
                {
                    "name": "control",
                    "unit": "",
                    "description": "P,Q,V control strategy, must be PQ, PV or Slack."
                },
                {
                    "name": "p_nom",
                    "unit": "MW",
                    "description": "Nominal power"
                },
                {
                    "name": "p_nom_extendable",
                    "unit": "",
                    "description": "Switch to allow capacity p_nom to be extended"
                },
                {
                    "name": "p_nom_min",
                    "unit": "",
                    "description": "If p_nom is extendable, set its minimum value"
                },
                {
                    "name": "p_nom_max",
                    "unit": "",
                    "description": "If p_nom is extendable, set its maximum value (e.g. limited by potential)"
                },
                {
                    "name": "p_min_pu_fixed",
                    "unit": "per unit",
                    "description": "If control=flexible this gives the minimum output per unit of p_nom"
                },
                {
                    "name": "p_max_pu_fixed",
                    "unit": "per unit",
                    "description": "If control=flexible this gives the maximum output per unit of p_nom, equivalent to a de-rating factor."
                },
                {
                    "name": "sign",
                    "unit": "",
                    "description": "power sign"
                },
                {
                    "name": "source",
                    "unit": "",
                    "description": "prime mover energy carrier"
                },
                {
                    "name": "marginal_cost",
                    "unit": "EUR/MWh",
                    "description": "Marginal cost of production of 1 MWh"
                },
                {
                    "name": "capital_cost",
                    "unit": "EUR/MW",
                    "description": "Capital cost of extending p_nom by 1 MW"
                },
                {
                    "name": "efficiency",
                    "unit": "per unit",
                    "description": "Ratio between primary energy and electrical energy"
                },
                 {
                    "name": "soc_initial",
                    "unit": "MWh",
                    "description": "State of charge before the snapshots in the OPF"
                },
                 {
                    "name": "soc_cyclic",
                    "unit": "",
                    "description": "Switch: if True, then state_of_charge_initial is ignored and the initial state of charge is set to the final state of charge for the group of snapshots in the OPF"
                },
                 {
                    "name": "max_hours",
                    "unit": "hours",
                    "description": "Maximum state of charge capacity in terms of hours at full output capacity p_nom"
                },
                 {
                    "name": "efficiency_store",
                    "unit": "per unit",
                    "description": "Efficiency of storage on the way into the storage"
                },
                 {
                    "name": "efficiency_dispatch",
                    "unit": "per unit",
                    "description": "Efficiency of storage on the way out of the storage"
                },
                 {
                    "name": "standing_loss",
                    "unit": "per unit",
                    "description": "Losses per hour to state of charge"
                },
                {
                    "name": "p_nom_opt",
                    "unit": "MW",
                    "description": "Optimised nominal power"
                }
            ],
            "name": "grid.ego_pf_hv_result_storage",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_storage_t; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_storage_t (
    result_id bigint NOT NULL,
    storage_id bigint NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[],
    soc_set double precision[],
    inflow double precision[],
    p double precision[],
    q double precision[],
    state_of_charge double precision[],
    spill double precision[]
);


--
-- Name: TABLE ego_pf_hv_result_storage_t; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_storage_t IS '{
    "title": "eGo hv powerflow results - storage_t",
    "description": "Results of storage_t relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
               {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "storage_id",
                    "unit": "",
                    "description": "ID of corresponding storage"
                },
                {
                    "name": "p_set",
                    "unit": "MW",
                    "description": "active power set point"
                },
                {
                    "name": "q_set",
                    "unit": "MVar",
                    "description": "reactive power set point"
                },
                {
                    "name": "p_min_pu",
                    "unit": "per unit",
                    "description": "If control=variable this gives the minimum output for each snapshot per unit of p_nom for the OPF"
                },
                {
                    "name": "p_max_pu",
                    "unit": "per unit",
                    "description": "If control=variable this gives the maximum output for each snapshot per unit of p_nom for the OPF, relevant e.g. if for renewables the power output is limited by the weather"
                },
                {
                    "name": "soc_set",
                    "unit": "MWh",
                    "description": "State of charge set points for snapshots in the OPF"
                },
                {
                    "name": "inflow",
                    "unit": "MW",
                    "description": "Inflow to the state of charge, e.g. due to river inflow in hydro reservoir."
                },
                {
                    "name": "p",
                    "unit": "MW",
                    "description": "active power at bus (positive if net generation at bus)"
                },
                {
                    "name": "q",
                    "unit": "Mvar",
                    "description": "reactive power (positive if net generation at bus)"
                },
                {
                    "name": "state_of_charge",
                    "unit": "BBB",
                    "description": "State of charge as calculated by the OPF"
                },
                {
                    "name": "spill",
                    "unit": "MW",
                    "description": "Spillage for each snapshot"
                }                      
            ],
            "name": "grid.ego_pf_hv_result_storage_t",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_transformer; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_transformer (
    result_id bigint NOT NULL,
    trafo_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric,
    r numeric,
    g numeric,
    b numeric,
    s_nom numeric,
    s_nom_extendable boolean,
    s_nom_min double precision,
    s_nom_max double precision,
    tap_ratio double precision,
    phase_shift double precision,
    capital_cost double precision,
    x_pu numeric,
    r_pu numeric,
    g_pu numeric,
    b_pu numeric,
    s_nom_opt numeric,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: TABLE ego_pf_hv_result_transformer; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_transformer IS '{
    "title": "eGo hv powerflow results - transformer",
    "description": "Results of transformers considered in hv powerflow calculations",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "line_id",
                    "unit": "",
                    "description": "ID of corresponding transformer"
                },
                {
                    "name": "bus0",
                    "unit": "",
                    "description": "Name of first bus to which branch is attached"
                },
				{
                    "name": "bus1",
                    "unit": "",
                    "description": "Name of second bus to which branch is attached"
                },
				{
                    "name": "x",
                    "unit": "Ohm",
                    "description": "Series reactance"
                },
				{
                    "name": "r",
                    "unit": "Ohm",
                    "description": "Series resistance"
                },
				{
                    "name": "g",
                    "unit": "Siemens",
                    "description": "Shunt conductivity"
                },
				{
                    "name": "b",
                    "unit": "Siemens",
                    "description": "Shunt susceptance"
                },
				{
                    "name": "s_nom",
                    "unit": "MVA",
                    "description": "Limit of apparent power which can pass through branch"
                },
				{
                    "name": "s_nom_extendable",
                    "unit": "",
                    "description": "Switch to allow capacity s_nom to be extended"
                },
				{
                    "name": "s_nom_min",
                    "unit": "MVA",
                    "description": "If s_nom is extendable, set its minimum value"
                },
				{
                    "name": "s_nom_max",
                    "unit": "MVA",
                    "description": "If s_nom is extendable in OPF, set its maximum value"
                },
				{
                    "name": "s_nom_max",
                    "unit": "MVA",
                    "description": "If s_nom is extendable in OPF, set its maximum value"
                },
				{
                    "name": "tap_ratio",
                    "unit": "",
                    "description": "Ratio of per unit voltages at each bus"
                },
				{
                    "name": "phase_shift",
                    "unit": "degrees",
                    "description": "Voltage phase angle shift"
                },
				{
                    "name": "capital_cost",
                    "unit": "€/MVA",
                    "description": "Capital cost of extending s_nom by 1 MVA"
                },
				{
                    "name": "x_pu",
                    "unit": "per unit",
                    "description": "Per unit series reactance calculated by PyPSA from x and bus.v_nom"
                },
				{
                    "name": "r_pu",
                    "unit": "per unit",
                    "description": "Per unit series resistance calculated by PyPSA from r and bus.v_nom"
                },
				{
                    "name": "g_pu",
                    "unit": "per unit",
                    "description": "Per unit shunt conductivity calculated by PyPSA from g and bus.v_nom"
                },
				{
                    "name": "b_pu",
                    "unit": "per unit",
                    "description": "Per unit shunt susceptance calculated by PyPSA from b and bus.v_nom"
                },
				{
                    "name": "s_nom_opt",
                    "unit": "MVA",
                    "description": "Optimised capacity for apparent power"
                },
				{
                    "name": "geom",
                    "unit": "geom",
                    "description": "geometry that depict the real route of the line"
                },
				{
                    "name": "topo",
                    "unit": "topo",
                    "description": "topology that depicts a direct connection between both busses"
                }
            ],
            "name": "grid.ego_pf_hv_result_transformer",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_result_transformer_t; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_result_transformer_t (
    result_id bigint NOT NULL,
    trafo_id bigint NOT NULL,
    p0 double precision[],
    q0 double precision[],
    p1 double precision[],
    q1 double precision[]
);


--
-- Name: TABLE ego_pf_hv_result_transformer_t; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_result_transformer_t IS '{
    "title": "eGo hv powerflow results - transformer_t",
    "description": "Results of power line_t considered in hv powerflow calculations",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "www.energymap.info",
            "copyright": "",
            "name": "EnergyMap",
            "license": "",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "2017-11-21",
            "comment": "Create table",
            "name": "Mariusves",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "result_id",
                    "unit": "",
                    "description": "unique result id corresponding to result_meta"
                },
                {
                    "name": "line_id",
                    "unit": "",
                    "description": "ID of corresponding transformer"
                },
                {
                    "name": "p0",
                    "unit": "MW",
                    "description": "active power at bus0 (positive if net generation at bus0)"
                },
				{
                    "name": "q0",
                    "unit": "MVar",
                    "description": "Reactive power at bus0 (positive if branch is withdrawing power from bus0)"
                },
				{
                    "name": "p1",
                    "unit": "MW",
                    "description": "active power at bus1 (positive if net generation at bus1)"
                },
				{
                    "name": "q1",
                    "unit": "MVar",
                    "description": "Reactive power at bus1 (positive if branch is withdrawing power from bus1)"
                }				
            ],
            "name": "grid.ego_pf_hv_result_transformer_t",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_source; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_source (
    version text NOT NULL,
    source_id bigint NOT NULL,
    name text,
    co2_emissions double precision,
    commentary text
);


--
-- Name: TABLE ego_pf_hv_source; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_source IS '{
    "title": "eGo hv powerflow - sources",
    "description": "sources in eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "source_id",
                    "unit": "",
                    "description": "unique source id"
                },
                {
                    "name": "name",
                    "unit": "",
                    "description": "source name"
                },
                {
                    "name": "co2_emissions",
                    "unit": "tonnes/MWh",
                    "description": "technology specific CO2 emissions "
                },
                {
                    "name": "commentary",
                    "unit": "",
                    "description": "..."
                }
            ],
            "name": "grid.ego_pf_hv_source",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_storage; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_storage (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    storage_id bigint NOT NULL,
    bus bigint,
    dispatch text DEFAULT 'flexible'::text,
    control text DEFAULT 'PQ'::text,
    p_nom double precision DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    p_min_pu_fixed double precision DEFAULT 0,
    p_max_pu_fixed double precision DEFAULT 1,
    sign double precision DEFAULT 1,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision,
    soc_initial double precision,
    soc_cyclic boolean DEFAULT false,
    max_hours double precision,
    efficiency_store double precision,
    efficiency_dispatch double precision,
    standing_loss double precision
);


--
-- Name: TABLE ego_pf_hv_storage; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_storage IS '{
    "title": "eGo hv powerflow - storage",
    "description": "Storages relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Reiner Lemoine Institut",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "http://data.open-power-system-data.org/conventional_power_plants/2016-02-08/",
            "copyright": "\u00a9 2016 Open Power System Data",
            "name": "Open Power System Data (OPSD)",
            "license": "MIT Licence",
            "description": " "
        },
        {
            "url": "http://www.bundesnetzagentur.de/DE/Sachgebiete/ElektrizitaetundGas/Unternehmen_Institutionen/Versorgungssicherheit/Erzeugungskapazitaeten/Kraftwerksliste/kraftwerksliste-node.html",
            "copyright": "",
            "name": "Bundesnetzagentur (BNetzA)",
            "license": "",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Europa-Universitaet Flensburg, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "scn_name",
                    "unit": "",
                    "description": "name of corresponding scenario"
                },
                {
                    "name": "storage_id",
                    "unit": "",
                    "description": "ID of corresponding storage"
                },
                {
                    "name": "bus",
                    "unit": "",
                    "description": "id of associated bus"
                },
                {
                    "name": "dispatch",
                    "unit": "",
                    "description": "Controllability of active power dispatch, must be flexible or variable."
                },
                {
                    "name": "control",
                    "unit": "",
                    "description": "P,Q,V control strategy, must be PQ, PV or Slack."
                },
                {
                    "name": "p_nom",
                    "unit": "MW",
                    "description": "Nominal power"
                },
                {
                    "name": "p_nom_extendable",
                    "unit": "",
                    "description": "Switch to allow capacity p_nom to be extended"
                },
                {
                    "name": "p_nom_min",
                    "unit": "",
                    "description": "If p_nom is extendable, set its minimum value"
                },
                {
                    "name": "p_nom_max",
                    "unit": "",
                    "description": "If p_nom is extendable, set its maximum value (e.g. limited by potential)"
                },
                {
                    "name": "p_min_pu_fixed",
                    "unit": "per unit",
                    "description": "If control=flexible this gives the minimum output per unit of p_nom"
                },
                {
                    "name": "p_max_pu_fixed",
                    "unit": "per unit",
                    "description": "If control=flexible this gives the maximum output per unit of p_nom, equivalent to a de-rating factor."
                },
                {
                    "name": "sign",
                    "unit": "",
                    "description": "power sign"
                },
                {
                    "name": "source",
                    "unit": "",
                    "description": "prime mover energy carrier"
                },
                {
                    "name": "marginal_cost",
                    "unit": "EUR/MWh",
                    "description": "Marginal cost of production of 1 MWh"
                },
                {
                    "name": "capital_cost",
                    "unit": "EUR/MW",
                    "description": "Capital cost of extending p_nom by 1 MW"
                },
                {
                    "name": "efficiency",
                    "unit": "per unit",
                    "description": "Ratio between primary energy and electrical energy"
                },
                {
                    "name": "soc_initial",
                    "unit": "MWh",
                    "description": "State of charge before the snapshots in the OPF."
                },
                {
                    "name": "soc_cyclic",
                    "unit": "",
                    "description": "Switch: if True, then state_of_charge_initial is ignored and the initial state of charge is set to the final state of charge for the group of snapshots in the OPF"
                },
                {
                    "name": "max_hours",
                    "unit": "hours",
                    "description": "Maximum state of charge capacity in terms of hours at full output capacity p_nom"
                },
                {
                    "name": "efficiency_store",
                    "unit": "per unit",
                    "description": "Efficiency of storage on the way into the storage"
                },
                {
                    "name": "efficiency_dispatch",
                    "unit": "per unit",
                    "description": "Efficiency of storage on the way out of the storage"
                },
                {
                    "name": "standing_loss",
                    "unit": "per unit",
                    "description": "Losses per hour to state of charge"
                }
            ],
            "name": "grid.ego_pf_hv_storage",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_storage_pq_set; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_storage_pq_set (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    storage_id bigint NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[],
    soc_set double precision[],
    inflow double precision[]
);


--
-- Name: TABLE ego_pf_hv_storage_pq_set; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_storage_pq_set IS '{
    "title": "eGo hv powerflow - storage time series",
    "description": "Time series of storages relevant for eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Europa-Universitaet Flensburg, Center for Sustainable Energy Systems",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "https://github.com/oemof/feedinlib",
            "copyright": "\u00a9 oemof developing group",
            "name": "oemof feedinlib",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "scn_name",
                    "unit": "",
                    "description": "name of corresponding scenario"
                },
                {
                    "name": "storage_id",
                    "unit": "",
                    "description": "ID of corresponding storage"
                },
                {
                    "name": "temp_id",
                    "unit": "",
                    "description": "ID of temporal resolution"
                },
                {
                    "name": "p_set",
                    "unit": "MW",
                    "description": "active power set point (for PF)"
                },
                {
                    "name": "q_set",
                    "unit": "MVar",
                    "description": "reactive power set point (for PF)"
                },
                {
                    "name": "p_min_pu",
                    "unit": "per unit",
                    "description": "If control=variable this gives the minimum output for each snapshot per unit of p_nom for the OPF"
                },
                {
                    "name": "p_max_pu",
                    "unit": "per unit",
                    "description": "If control=variable this gives the maximum output for each snapshot per unit of p_nom for the OPF"
                },
                {
                    "name": "soc_set",
                    "unit": "MWh",
                    "description": "State of charge set points for snapshots in the OPF"
                },
                {
                    "name": "inflow",
                    "unit": "MW",
                    "description": "Inflow to the state of charge, e.g. due to river inflow in hydro reservoir"
                }
            ],
            "name": "grid.ego_pf_hv_storage_pq_set",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_temp_resolution; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_temp_resolution (
    version text NOT NULL,
    temp_id bigint NOT NULL,
    timesteps bigint NOT NULL,
    resolution text,
    start_time timestamp without time zone
);


--
-- Name: TABLE ego_pf_hv_temp_resolution; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_temp_resolution IS '{
    "title": "eGo hv powerflow - temp_resolution",
    "description": "Temporal resolution in eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": ""
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "temp_id",
                    "unit": "",
                    "description": "unique id"
                },
                {
                    "name": "timesteps",
                    "unit": "",
                    "description": "timestep"
                },
                {
                    "name": "resolution",
                    "unit": "",
                    "description": "temporal resolution"
                },
                {
                    "name": "start_time",
                    "unit": "",
                    "description": "start time with style: YYYY-MM-DD HH:MM:SS"
                }
            ],
            "name": "grid.ego_pf_hv_temp_resolution",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: ego_pf_hv_transformer; Type: TABLE; Schema: grid; Owner: -
--

CREATE TABLE grid.ego_pf_hv_transformer (
    version text NOT NULL,
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    trafo_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom double precision DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    tap_ratio double precision,
    phase_shift double precision,
    capital_cost double precision DEFAULT 0,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: TABLE ego_pf_hv_transformer; Type: COMMENT; Schema: grid; Owner: -
--

COMMENT ON TABLE grid.ego_pf_hv_transformer IS '{
    "title": "eGo hv powerflow - transformer",
    "description": "transformer in eGo hv powerflow",
    "language": [ "eng" ],
    "spatial": {
        "resolution": "",
        "location": "",
        "extend": "Germany"
    },
    "temporal": {
        "reference_date": " ",
        "start": "",
        "end": "",
        "resolution": ""
    },
    "sources": [
        {
            "url": "https://github.com/openego/data_processing",
            "copyright": "\u00a9 Flensburg University of Applied Sciences, Center for Sustainable Energy Systems",
            "name": "eGo dataprocessing",
            "license": "GNU Affero General Public License Version 3 (AGPL-3.0)",
            "description": " "
        },
        {
            "url": "http://www.openstreetmap.org/",
            "copyright": "\u00a9 OpenStreetMap contributors",
            "name": "OpenStreetMap",
            "license": "Open Database License (ODbL) v1.0",
            "description": " "
        },
        {
            "url": "https://github.com/openego/osmTGmod",
            "copyright": "\u00a9 Wuppertal Institut",
            "name": "osmTGmod",
            "license": "Apache License 2.0",
            "description": " "
        }
    ],
    "license": {
        "name": "Open Data Commons Open Database License 1.0",
        "copyright": "\u00a9 NEXT ENERGY",
        "url": "https://opendatacommons.org/licenses/odbl/1.0/",
        "instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
        "version": "1.0",
        "id": "ODbL-1.0"
    },
    "contributors": [
        {
            "date": "26.04.2017",
            "comment": "Create table",
            "name": "IlkaCu",
            "email": ""
        },
        {
            "date": "2017-9-12",
            "comment": "Update metadata to v1.3",
            "name": "KilianZimmerer",
            "email": ""
        }
    ],
    "resources": [
        {
            "fields": [
                {
                    "name": "version",
                    "unit": "",
                    "description": "version id"
                },
                {
                    "name": "scn_name",
                    "unit": "",
                    "description": "name of corresponding scenario"
                },
                {
                    "name": "trafo_id",
                    "unit": "",
                    "description": "ID of line"
                },
                {
                    "name": "bus0",
                    "unit": "",
                    "description": "name of first bus to which branch is attached"
                },
                {
                    "name": "bus1",
                    "unit": "",
                    "description": "name of second bus to which branch is attached"
                },
                {
                    "name": "x",
                    "unit": "Ohm",
                    "description": "Series reactance"
                },
                {
                    "name": "r",
                    "unit": "Ohm",
                    "description": "Series resistance"
                },
                {
                    "name": "g",
                    "unit": "Siemens",
                    "description": "Shunt conductivity"
                },
                {
                    "name": "b",
                    "unit": "Siemens",
                    "description": "Shunt susceptance"
                },
                {
                    "name": "s_nom",
                    "unit": "MVA",
                    "description": "Limit of apparent power which can pass through branch"
                },
                {
                    "name": "s_nom_extendable",
                    "unit": "",
                    "description": "Switch to allow capacity s_nom to be extended"
                },
                {
                    "name": "s_nom_min",
                    "unit": "MVA",
                    "description": "If s_nom is extendable, set its minimum value"
                },
                {
                    "name": "s_nom_max",
                    "unit": "MVA",
                    "description": "If s_nom is extendable in OPF, set its maximum value"
                },
                {
                    "name": "tap_ratio",
                    "unit": "",
                    "description": "Ratio of per unit voltages at each bus"
                },
                {
                    "name": "phase_shift",
                    "unit": "degrees",
                    "description": "Voltage phase angle shift"
                },
                {
                    "name": "capital_cost",
                    "unit": "EUR/MVA",
                    "description": "capital cost of extending s_nom by 1 MVA"
                },
                {
                    "name": "geom",
                    "unit": "",
                    "description": "geometry that depict the real route of the line"
                },
                {
                    "name": "topo",
                    "unit": "...",
                    "description": "topology that depicts a direct connection between both busses"
                }
            ],
            "name": "grid.ego_pf_hv_transformer",
            "format": "sql"
        }
    ],
    "metadata_version": "1.3"
}';


--
-- Name: uw_id_seq; Type: SEQUENCE; Schema: grid; Owner: -
--

CREATE SEQUENCE grid.uw_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: uw_id_seq; Type: SEQUENCE OWNED BY; Schema: grid; Owner: -
--

ALTER SEQUENCE grid.uw_id_seq OWNED BY grid.znes_deu_substations.id;


--
-- Name: voronoi_id_seq; Type: SEQUENCE; Schema: grid; Owner: -
--

CREATE SEQUENCE grid.voronoi_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: voronoi_id_seq; Type: SEQUENCE OWNED BY; Schema: grid; Owner: -
--

ALTER SEQUENCE grid.voronoi_id_seq OWNED BY grid.voronoi.id;


--
-- Name: znes_deu_gridcells_qgis_id_seq; Type: SEQUENCE; Schema: grid; Owner: -
--

CREATE SEQUENCE grid.znes_deu_gridcells_qgis_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: znes_deu_gridcells_qgis_id_seq; Type: SEQUENCE OWNED BY; Schema: grid; Owner: -
--

ALTER SEQUENCE grid.znes_deu_gridcells_qgis_id_seq OWNED BY grid.znes_deu_gridcells_qgis.id;


--
-- Name: znes_deu_substations_filtered_subst_id_seq; Type: SEQUENCE; Schema: grid; Owner: -
--

CREATE SEQUENCE grid.znes_deu_substations_filtered_subst_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: znes_deu_substations_filtered_subst_id_seq; Type: SEQUENCE OWNED BY; Schema: grid; Owner: -
--

ALTER SEQUENCE grid.znes_deu_substations_filtered_subst_id_seq OWNED BY grid.znes_deu_substations_filtered.subst_id;


--
-- Name: bkg_vg250_20150101_1_sta_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.bkg_vg250_20150101_1_sta_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: bkg_vg250_20150101_1_sta_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.bkg_vg250_20150101_1_sta_id_seq OWNED BY model_draft.bkg_vg250_20150101_1_sta.id;


--
-- Name: bkg_vg250_20160101_1_sta_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.bkg_vg250_20160101_1_sta_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: bkg_vg250_20160101_1_sta_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.bkg_vg250_20160101_1_sta_id_seq OWNED BY model_draft.bkg_vg250_20160101_1_sta.id;


--
-- Name: destatis_zensus_population_per_ha_inside; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.destatis_zensus_population_per_ha_inside (
    gid integer NOT NULL,
    inside_borders boolean
);


--
-- Name: TABLE destatis_zensus_population_per_ha_inside; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.destatis_zensus_population_per_ha_inside IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_data_processing_clean_run; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_data_processing_clean_run (
    id integer NOT NULL,
    version text,
    schema_name text,
    table_name text,
    script_name text,
    entries integer,
    status text,
    "timestamp" timestamp without time zone,
    user_name text
);


--
-- Name: TABLE ego_data_processing_clean_run; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_data_processing_clean_run IS '{
"Name": "eGo data processing - clean run",
"Source": [{
                  "Name": "open_eGo",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "2016",
"Date of collection": "2016-10-01",
"Original file": "",
"Spatial resolution": ["Germany"],
"Description": ["eGo data processing clean run"],

"Column": [
                {"Name": "id",
                "Description": "Unique identifier",
                "Unit": "" },
					
                {"Name": "version",
                "Description": "Scenario version",
                "Unit": "" },

                {"Name": "schema_name",
                "Description": "Schema name",
                "Unit": "" },
					
		{"Name": "table_name",
                "Description": "Table name",
                "Unit": "" },
					
		{"Name": "script_name",
                "Description": "Script name",
                "Unit": "" },
					
		{"Name": "entries",
                "Description": "Number of rows",
                "Unit": "" },
			
		{"Name": "status",
                "Description": "Current status and comments",
                "Unit": "" },
			
		{"Name": "timestamp",
                "Description": "Timestamp (Berlin)",
                "Unit": "" }],

"Changes":[
                {"Name": "Ludwig Hülk",
                "Mail": "ludwig.huelk@rl-institut.de",
                "Date":  "01.10.2016",
                "Comment": "Created table" }],

"ToDo": ["More attributes needed?"],
"Licence": ["tba"],
"Instructions for proper use": ["Do not drop table, always insert!"]
}';


--
-- Name: ego_data_processing_clean_run_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_data_processing_clean_run_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_data_processing_clean_run_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_data_processing_clean_run_id_seq OWNED BY model_draft.ego_data_processing_clean_run.id;


--
-- Name: ego_data_processing_results; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_data_processing_results (
    id integer NOT NULL,
    schema_name text,
    table_name text,
    description text,
    result integer,
    unit text,
    "timestamp" timestamp without time zone
);


--
-- Name: ego_data_processing_results_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_data_processing_results_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_data_processing_results_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_data_processing_results_id_seq OWNED BY model_draft.ego_data_processing_results.id;


--
-- Name: ego_data_processing_results_mvgd; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_data_processing_results_mvgd (
    subst_id integer NOT NULL,
    type1 integer,
    type1_cnt integer,
    type2 integer,
    type2_cnt integer,
    type3 integer,
    type3_cnt integer,
    gem integer,
    gem_clean integer,
    la_count integer,
    area_ha numeric(10,1),
    la_area numeric(10,1),
    free_area numeric(10,1),
    area_share numeric(4,1),
    geom public.geometry(MultiPolygon,3035),
    "timestamp" timestamp without time zone,
    compound text,
    "group" character(1),
    consumption numeric,
    consumption_per_area numeric
);


--
-- Name: ego_dea_agricultural_sector_per_grid_district; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_dea_agricultural_sector_per_grid_district (
    id integer NOT NULL,
    subst_id integer,
    area_ha numeric,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_dea_agricultural_sector_per_grid_district_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_dea_agricultural_sector_per_grid_district_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_dea_agricultural_sector_per_grid_district_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_dea_agricultural_sector_per_grid_district_id_seq OWNED BY model_draft.ego_dea_agricultural_sector_per_grid_district.id;


--
-- Name: ego_dea_allocation; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_dea_allocation (
    id bigint NOT NULL,
    sort integer,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    voltage_level character varying,
    postcode character varying,
    subst_id integer,
    source character varying,
    la_id integer,
    flag character varying,
    geom public.geometry(Point,3035),
    geom_line public.geometry(LineString,3035),
    geom_new public.geometry(Point,3035)
);


--
-- Name: ego_dea_per_generation_type_and_voltage_level; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_dea_per_generation_type_and_voltage_level (
    id bigint NOT NULL,
    generation_type text,
    generation_subtype character varying,
    voltage_level character varying,
    capacity numeric,
    count bigint
);


--
-- Name: ego_dea_per_grid_district; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_dea_per_grid_district (
    subst_id integer NOT NULL,
    lv_dea_cnt integer,
    lv_dea_capacity numeric,
    mv_dea_cnt integer,
    mv_dea_capacity numeric
);


--
-- Name: ego_dea_per_load_area; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_dea_per_load_area (
    id integer NOT NULL,
    subst_id integer,
    lv_dea_cnt integer,
    lv_dea_capacity numeric
);


--
-- Name: ego_demand_hvmv_demand; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_hvmv_demand (
    id integer NOT NULL,
    p_set double precision[],
    q_set double precision[]
);


--
-- Name: TABLE ego_demand_hvmv_demand; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_hvmv_demand IS '{"Note": "Be aware of applicability. Data bases on synthetic load profiles", "Spatial resolution": "Germany", "Column": [{"Unit": "-", "Description": "Unique identifier", "Name": "id"}, {"Unit": "MW", "Description": "Active power demand", "Name": "active_power"}, {"Unit": "MW", "Description": "Reactive power demand", "Name": "reactive_power"}], "License": "", "Reference date": "2011", "Changes": {"Date": "24.03.2017", "Mail": "guido.plessmann@rl-institut.de", "Name": "Guido Ple\u00dfmann", "Comment": "Initial creation of dataset"}, "Instruction for proper use": "", "Original file": "Open Energy Database, schema: model_draft, table: ego_demand_hvmv_demand", "Name": "Load time series at transition points", "Date of collection": "24.03.2017", "Description": "Active and reactive power demand time series per transition point", "Source": ""}';


--
-- Name: ego_demand_hvmv_demand_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_hvmv_demand_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_hvmv_demand_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_hvmv_demand_id_seq OWNED BY model_draft.ego_demand_hvmv_demand.id;


--
-- Name: ego_demand_la_osm; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_la_osm (
    id integer NOT NULL,
    area_ha double precision,
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_demand_la_osm; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_la_osm IS '{
    "Name": "ego osm loads",
    "Source":   [{
	"Name": "open_eGo",
	"URL": "https://github.com/openego/data_processing"}],
    "Reference date": "2016",
    "Date of collection": "02.09.2016",
    "Original file": ["ego_grid_hvmv_substation"],
    "Spatial": [{
	"Resolution": "",
	"Extend": "Germany" }],
    "Description": ["osm laods"],
    "Column":[
        {"Name": "id", "Description": "Unique identifier", "Unit": " " },
        {"Name": "area_ha", "Description": "Area", "Unit": "ha" },
	{"Name": "geom", "Description": "Geometry", "Unit": " " } ],
    "Changes":	[
        {"Name": "Ludee", "Mail": "",
	"Date":  "02.09.2015", "Comment": "Created mview" },
	{"Name": "Ludee", "Mail": "",
	"Date":  "17.12.2016", "Comment": "Added metadata" } ],
    "Notes": [""],
    "Licence": [{
	"Name": "", 
	"URL": "" }],
    "Instructions for proper use": [" "]
    }';


--
-- Name: ego_demand_la_osm_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_la_osm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_la_osm_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_la_osm_id_seq OWNED BY model_draft.ego_demand_la_osm.id;


--
-- Name: ego_demand_la_zensus; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_la_zensus (
    id integer NOT NULL,
    gid integer,
    population integer,
    inside_la boolean,
    geom_point public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_demand_la_zensus; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_la_zensus IS '{
    "Name": "ego zensus loads",
    "Source":   [{
	"Name": "open_eGo",
	"URL": "https://github.com/openego/data_processing"}],
    "Reference date": "2016",
    "Date of collection": "02.09.2016",
    "Original file": ["ego_grid_hvmv_substation"],
    "Spatial": [{
	"Resolution": "",
	"Extend": "Germany" }],
    "Description": ["osm laods"],
    "Column":[
        {"Name": "id", "Description": "Unique identifier", "Unit": " " },
        {"Name": "area_ha", "Description": "Area", "Unit": "ha" },
	{"Name": "geom", "Description": "Geometry", "Unit": " " } ],
    "Changes":	[
        {"Name": "Ludee", "Mail": "",
	"Date":  "02.09.2015", "Comment": "Created mview" },
	{"Name": "Ludee", "Mail": "",
	"Date":  "17.12.2016", "Comment": "Added metadata" } ],
    "Notes": [""],
    "Licence": [{
	"Name": "", 
	"URL": "" }],
    "Instructions for proper use": [" "]
    }';


--
-- Name: ego_demand_la_zensus_cluster; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_la_zensus_cluster (
    cid integer NOT NULL,
    zensus_sum integer,
    area_ha integer,
    geom public.geometry(Polygon,3035),
    geom_buffer public.geometry(Polygon,3035),
    geom_centroid public.geometry(Point,3035),
    geom_surfacepoint public.geometry(Point,3035)
);


--
-- Name: TABLE ego_demand_la_zensus_cluster; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_la_zensus_cluster IS '{
    "Name": "ego zensus loads cluster",
    "Source":   [{
	"Name": "open_eGo",
	"URL": "https://github.com/openego/data_processing"}],
    "Reference date": "2016",
    "Date of collection": "02.09.2016",
    "Original file": ["ego_grid_hvmv_substation"],
    "Spatial": [{
	"Resolution": "",
	"Extend": "Germany" }],
    "Description": ["osm laods"],
    "Column":[
        {"Name": "id", "Description": "Unique identifier", "Unit": " " },
        {"Name": "area_ha", "Description": "Area", "Unit": "ha" },
	{"Name": "geom", "Description": "Geometry", "Unit": " " } ],
    "Changes":	[
        {"Name": "Ludee", "Mail": "",
	"Date":  "02.09.2015", "Comment": "Created mview" },
	{"Name": "Ludee", "Mail": "",
	"Date":  "17.12.2016", "Comment": "Added metadata" } ],
    "Notes": [""],
    "Licence": [{
	"Name": "", 
	"URL": "" }],
    "Instructions for proper use": [" "]
    }';


--
-- Name: ego_demand_la_zensus_cluster_cid_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_la_zensus_cluster_cid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_la_zensus_cluster_cid_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_la_zensus_cluster_cid_seq OWNED BY model_draft.ego_demand_la_zensus_cluster.cid;


--
-- Name: ego_demand_la_zensus_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_la_zensus_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_la_zensus_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_la_zensus_id_seq OWNED BY model_draft.ego_demand_la_zensus.id;


--
-- Name: ego_demand_load_collect_buffer100; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_load_collect_buffer100 (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_demand_load_collect_buffer100_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_load_collect_buffer100_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_load_collect_buffer100_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_load_collect_buffer100_id_seq OWNED BY model_draft.ego_demand_load_collect_buffer100.id;


--
-- Name: ego_demand_load_melt; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_load_melt (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_demand_load_melt_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_load_melt_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_load_melt_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_load_melt_id_seq OWNED BY model_draft.ego_demand_load_melt.id;


--
-- Name: ego_demand_loadarea; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_loadarea (
    id integer NOT NULL,
    subst_id integer,
    area_ha numeric,
    nuts character varying(5),
    rs_0 character varying(12),
    ags_0 character varying(12),
    otg_id integer,
    un_id integer,
    zensus_sum integer,
    zensus_count integer,
    zensus_density numeric,
    ioer_sum numeric,
    ioer_count integer,
    ioer_density numeric,
    sector_area_residential numeric,
    sector_area_retail numeric,
    sector_area_industrial numeric,
    sector_area_agricultural numeric,
    sector_area_sum numeric,
    sector_share_residential numeric,
    sector_share_retail numeric,
    sector_share_industrial numeric,
    sector_share_agricultural numeric,
    sector_share_sum numeric,
    sector_count_residential integer,
    sector_count_retail integer,
    sector_count_industrial integer,
    sector_count_agricultural integer,
    sector_count_sum integer,
    sector_consumption_residential double precision,
    sector_consumption_retail double precision,
    sector_consumption_industrial double precision,
    sector_consumption_agricultural double precision,
    sector_consumption_sum double precision,
    sector_peakload_retail double precision,
    sector_peakload_residential double precision,
    sector_peakload_industrial double precision,
    sector_peakload_agricultural double precision,
    geom_centroid public.geometry(Point,3035),
    geom_surfacepoint public.geometry(Point,3035),
    geom_centre public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_demand_loadarea; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_loadarea IS '{
"Name": "Electricity consumption per load area",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "",
"Date of collection": "19.10.2016",
"Original file": "ego_dp_loadarea_consumption.sql",
"Spatial resolution": ["Germany"],
"Description": ["Spatial allocation of electricity consumption to load_area "],
"Column": [
                   {"Name": "id",
                    "Description": "load area id",
                    "Unit": "" },
                   {"Name": "subst_id",
                    "Description": "id of associated HV/MV substation",
                    "Unit": "" },
                   {"Name": "sector_area_residential",
                    "Description": "aggregated residential area",
                    "Unit": "ha" },
                   {"Name": "sector_area_retail",
                    "Description": "aggregated retail area",
                    "Unit": "ha" },
                   {"Name": "sector_area_industrial",
                    "Description": "aggregated industrial area",
                    "Unit": "ha" },
                   {"Name": "sector_area_agricultural",
                    "Description": "aggregated agricultural area",
                    "Unit": "ha" },
                   {"Name": "sector_consumption_residential",
                    "Description": "electricity consumption of households",
                    "Unit": "GWh" },
                   {"Name": "sector_consumption_retail",
                    "Description": "electricity consumption of retail sector",
                    "Unit": "GWh" },
                   {"Name": "sector_consumption_industrial",
                    "Description": "electricity consumption of industrial sector",
                    "Unit": "GWh" },
                   {"Name": "sector_consumption_agricultural",
                    "Description": "electricity consumption of agricultural sector",
                    "Unit": "GWh" },
                   {"Name": "geom",
                    "Description": "geometry of load area",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "25.10.2016",
                    "Comment": "completed json-String" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_demand_loadarea_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_loadarea_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_loadarea_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_loadarea_id_seq OWNED BY model_draft.ego_demand_loadarea.id;


--
-- Name: ego_demand_loadarea_peak_load; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_loadarea_peak_load (
    id bigint NOT NULL,
    retail double precision,
    residential double precision,
    industrial double precision,
    agricultural double precision
);


--
-- Name: TABLE ego_demand_loadarea_peak_load; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_loadarea_peak_load IS '{"Name": "Peak load per load area", "Date of collection": "17.04.2017", "Spatial resolution": "Germany", "Reference date": "2011", "Instruction for proper use": "", "Description": "Sectoral peak of single load areas based on synthetic standard load profiles.", "License": "", "Note": "Be aware of applicability. Data bases on synthetic load profiles", "Source": "", "Changes": {"Name": "Guido Ple\u00dfmann", "Comment": "Initial creation of dataset", "Mail": "guido.plessmann@rl-institut.de", "Date": "17.04.2017"}, "Column": [{"Name": "id", "Unit": "-", "Description": "Unique identifier"}, {"Name": "g0", "Unit": "GW", "Description": "Peak demand of retail sector"}, {"Name": "h0", "Unit": "GW", "Description": "Peak demand of household sector"}, {"Name": "l0", "Unit": "GW", "Description": "Peak demand of agricultural sector"}, {"Name": "i0", "Unit": "GW", "Description": "Peak demand of industrial sector"}], "Original file": "Open Energy Database, schema: model_draft, table: ego_demand_loadarea_peak_load"}';


--
-- Name: ego_demand_loadarea_peak_load_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_loadarea_peak_load_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_loadarea_peak_load_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_loadarea_peak_load_id_seq OWNED BY model_draft.ego_demand_loadarea_peak_load.id;


--
-- Name: ego_demand_loadarea_temp; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_loadarea_temp (
    id integer NOT NULL,
    subst_id integer,
    area_ha numeric,
    nuts character varying(5),
    rs_0 character varying(12),
    ags_0 character varying(12),
    otg_id integer,
    un_id integer,
    zensus_sum integer,
    zensus_count integer,
    zensus_density numeric,
    ioer_sum numeric,
    ioer_count integer,
    ioer_density numeric,
    sector_area_residential numeric,
    sector_area_retail numeric,
    sector_area_industrial numeric,
    sector_area_agricultural numeric,
    sector_area_sum numeric,
    sector_share_residential numeric,
    sector_share_retail numeric,
    sector_share_industrial numeric,
    sector_share_agricultural numeric,
    sector_share_sum numeric,
    sector_count_residential integer,
    sector_count_retail integer,
    sector_count_industrial integer,
    sector_count_agricultural integer,
    sector_count_sum integer,
    sector_consumption_residential double precision,
    sector_consumption_retail double precision,
    sector_consumption_industrial double precision,
    sector_consumption_agricultural double precision,
    sector_consumption_sum double precision,
    geom_centroid public.geometry(Point,3035),
    geom_surfacepoint public.geometry(Point,3035),
    geom_centre public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_demand_loadarea_voi; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_loadarea_voi (
    id integer NOT NULL,
    subst_id integer,
    area_ha numeric,
    nuts character varying(5),
    rs_0 character varying(12),
    ags_0 character varying(12),
    otg_id integer,
    un_id integer,
    zensus_sum integer,
    zensus_count integer,
    zensus_density numeric,
    ioer_sum numeric,
    ioer_count integer,
    ioer_density numeric,
    sector_area_residential numeric,
    sector_area_retail numeric,
    sector_area_industrial numeric,
    sector_area_agricultural numeric,
    sector_area_sum numeric,
    sector_share_residential numeric,
    sector_share_retail numeric,
    sector_share_industrial numeric,
    sector_share_agricultural numeric,
    sector_share_sum numeric,
    sector_count_residential integer,
    sector_count_retail integer,
    sector_count_industrial integer,
    sector_count_agricultural integer,
    sector_count_sum integer,
    sector_consumption_residential numeric,
    sector_consumption_retail numeric,
    sector_consumption_industrial numeric,
    sector_consumption_agricultural numeric,
    sector_consumption_sum numeric,
    geom_centroid public.geometry(Point,3035),
    geom_surfacepoint public.geometry(Point,3035),
    geom_centre public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_demand_loadarea_voi_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_loadarea_voi_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_loadarea_voi_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_loadarea_voi_id_seq OWNED BY model_draft.ego_demand_loadarea_voi.id;


--
-- Name: ego_demand_loads; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_loads (
    un_id integer NOT NULL,
    ssc_id integer,
    lsc_id integer,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_demand_loads; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_loads IS '{
"Name": "Merged loads",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "2016",
"Date of collection": "20. October 2016",
"Original file": "ego_dp_powerflow_assignment_load.sql",
"Spatial resolution": ["Germany"],
"Description": ["Unique identifier are assigned to loads from different voltage levels"],
"Column": [
                   {"Name": "un_id",
                    "Description": "unique identifier",
                    "Unit": "" },
                   {"Name": "ssc_id",
                    "Description": "id for small scale consumer",
                    "Unit": "" },
                   {"Name": "lsc_id",
                    "Description": "id for large scale consumer",
                    "Unit": "" },
                   {"Name": "geom",
                    "Description": "geometry",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 

                   {"Name": "IlkaCussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_demand_loads_un_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_demand_loads_un_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_demand_loads_un_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_demand_loads_un_id_seq OWNED BY model_draft.ego_demand_loads.un_id;


--
-- Name: ego_demand_per_district; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_per_district (
    eu_code character varying(7) NOT NULL,
    district character varying,
    elec_consumption_industry double precision,
    elec_consumption_tertiary_sector double precision,
    area_industry double precision,
    consumption_per_area_industry double precision,
    area_retail double precision,
    area_agriculture double precision,
    area_tertiary_sector double precision
);


--
-- Name: TABLE ego_demand_per_district; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_per_district IS '{
"Name": "Electricity consumption per administrative district",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "2011",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Electricity consumption calculated for every administrative district in Germany"],
"Column": [
                   {"Name": "eu_code",
                    "Description": "eu_code for nuts region",
                    "Unit": "" },
                   {"Name": "district",
                    "Description": "name of administrative district",
                    "Unit": "" },
                   {"Name": "elec_consumption_industry",
                    "Description": "electricity consumption of industrial sector",
                    "Unit": "GWh" },
                   {"Name": "elec_consumption_tertiary_sector",
                    "Description": "electricity consumption of tertiary sector",
                    "Unit": "GWh" },
                   {"Name": "area_industry",
                    "Description": "industrial osm-area within the administrative district",
                    "Unit": "ha" },
                   {"Name": "area_retail",
                    "Description": "retail osm-area within the administrative district",
                    "Unit": "ha" },
                   {"Name": "area_agricultural",
                    "Description": "agricultural osm-area within the administrative district",
                    "Unit": "ha" },
                   {"Name": "area_tertiary_sector",
                    "Description": "retail and agricultural osm-area within the administrative district",
                    "Unit": "ha" },
                   {"Name": "consumption_per_area_industry",
                    "Description": "specific consumption of industrial sector per ha within the administrative district",
                    "Unit": "GWh/ha" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "05.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "25.10.2016",
                    "Comment": "Completed meta-dokumentation" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_demand_per_gva; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_per_gva (
    eu_code character varying(7) NOT NULL,
    federal_states character varying,
    elec_consumption_industry double precision,
    elec_consumption_tertiary_sector double precision
);


--
-- Name: TABLE ego_demand_per_gva; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_per_gva IS '{
"Name": "Specific electricity consumption per gross value added",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "2011",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Electricity consumption of the industrial and tertiary sector divided by the respective gross value added"],
"Column": [
                   {"Name": "eu_code",
                    "Description": "eu_code for nuts region",
                    "Unit": "" },
                   {"Name": "federal_states",
                    "Description": "name of federal state",
                    "Unit": "" },
                   {"Name": "elec_consumption_industry",
                    "Description": "specific electricity consumption per Million Euro of gva of the industrial sector",
                    "Unit": "GWh/Million Euro" },
                   {"Name": "elec_consumption_tertiary_sector",
                    "Description": "specific electricity consumption per Million Euro of gva of the tertiary sector",
                    "Unit": "GWh/Million Euro" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "05.10.2016",
                    "Comment": "..." }, 
	  	   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "25.10.2016",
                    "Comment": "Completed json-String" }
                  ],
"ToDo": ["Add Licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_demand_pf_load_single; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_demand_pf_load_single (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    load_id bigint NOT NULL,
    bus bigint,
    sign double precision DEFAULT '-1'::integer,
    e_annual double precision
);


--
-- Name: TABLE ego_demand_pf_load_single; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_demand_pf_load_single IS '{
"Name": "Single loads for powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "2016",
"Date of collection": "20. October 2016",
"Original file": "ego_dp_powerflow_assignment_load.sql",
"Spatial resolution": ["Germany"],
"Description": ["non aggregated loads powerflow-ready"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "name of scenario",
                    "Unit": "" },
                   {"Name": "load_id",
                    "Description": "id for single load",
                    "Unit": "" },
                   {"Name": "bus",
                    "Description": "id of associated bus",
                    "Unit": "" },
                   {"Name": "sign",
                    "Description": "power sign - negative for loads",
                    "Unit": "" },
                   {"Name": "e_annual",
                    "Description": "annual electricity consumption",
                    "Unit": "GWh" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_deu_loads_osm; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_deu_loads_osm (
    id integer NOT NULL,
    area_ha double precision,
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_deu_loads_osm; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_deu_loads_osm IS '{
    "Name": "ego osm loads",
    "Source":   [{
	"Name": "open_eGo",
	"URL": "https://github.com/openego/data_processing"}],
    "Reference date": "2016",
    "Date of collection": "02.09.2016",
    "Original file": ["ego_grid_hvmv_substation"],
    "Spatial": [{
	"Resolution": "",
	"Extend": "Germany" }],
    "Description": ["osm laods"],
    "Column":[
        {"Name": "id", "Description": "Unique identifier", "Unit": " " },
        {"Name": "area_ha", "Description": "Area", "Unit": "ha" },
	{"Name": "geom", "Description": "Geometry", "Unit": " " } ],
    "Changes":	[
        {"Name": "Ludwig HÃ¼lk", "Mail": "ludwig.huelk@rl-institut.de",
	"Date":  "02.09.2015", "Comment": "Created mview" },
	{"Name": "Ludwig HÃ¼lk", "Mail": "ludwig.huelk@rl-institut.de",
	"Date":  "17.12.2016", "Comment": "Added metadata" } ],
    "Notes": [""],
    "Licence": [{
	"Name": "", 
	"URL": "" }],
    "Instructions for proper use": [" "]
    }';


--
-- Name: ego_deu_loads_osm_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_deu_loads_osm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_deu_loads_osm_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_deu_loads_osm_id_seq OWNED BY model_draft.ego_deu_loads_osm.id;


--
-- Name: ego_ehv_substation; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_ehv_substation (
    version text NOT NULL,
    subst_id integer NOT NULL,
    lon double precision NOT NULL,
    lat double precision NOT NULL,
    point public.geometry(Point,4326) NOT NULL,
    polygon public.geometry NOT NULL,
    voltage text,
    power_type text,
    substation text,
    osm_id text NOT NULL,
    osm_www text NOT NULL,
    frequency text,
    subst_name text,
    ref text,
    operator text,
    dbahn text,
    status smallint NOT NULL,
    otg_id bigint
);


--
-- Name: TABLE ego_ehv_substation; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_ehv_substation IS '{
	"title": "eGo dataprocessing - EHV(HV) Substation",
	"description": "Abstracted substation between extrahigh- and high voltage (Transmission substation)",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ",
		"url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)"},
		{"name": "OpenStreetMap", "description": "© OpenStreetMap contributors",
		"url": "http://www.openstreetmap.org/", "license": "Open Database License (ODbL) v1.0"},
		{"name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "description": "© GeoBasis-DE / BKG 2016 (Daten verändert)",
		"url": "http://www.geodatenzentrum.de/", "license": "Geodatenzugangsgesetz (GeoZG)"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": ""} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!"} ],
	"contributors": [
		{"name": "lukasol", "email": "",
		"date":  "20.10.2016", "comment": "Create substations" },
		{"name": "Ludee", "email": "",
		"date": "15.01.2017", "comment": "Update metadata"},
		{"name": "Ludee", "email": "",
		"date": "21.03.2017", "comment": "Update metadata to 1.1"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", "description": "version id", "unit": "" },
				{"name": "subst_id", "description": "unique identifier", "unit": "" },
				{"name": "subst_name", "description": "name of substation", "unit": "" },
				{"name": "ags_0", "description": "Geimeindeschlüssel, municipality key", "unit": "" },
				{"name": "voltage", "description": "(all) voltage levels contained in substation", "unit": "" },
				{"name": "power_type", "description": "value of osm key power", "unit": "" },
				{"name": "substation", "description": "value of osm key substation", "unit": "" },
				{"name": "osm_id", "description": "osm id of substation, begins with prefix n(node) or w(way)", "unit": "" },
				{"name": "osm_www", "description": "hyperlink to osm source", "unit": "" },
				{"name": "frequency", "description": "frequency of substation", "unit": "" },
				{"name": "ref", "description": "reference tag of substation", "unit": "" },
				{"name": "operator", "description": "operator(s) of substation", "unit": "" },
				{"name": "dbahn", "description": "states if substation is connected to railway grid and if yes the indicator", "unit": "" },
				{"name": "status", "description": "states the osm source of substation (1=way, 2=way intersected by 110kV-line, 3=node)", "unit": "" },
				{"name": "otg_id", "description": "states the id of respective bus in osmtgmod", "unit": "" },
				{"name": "lat", "description": "latitude of substation", "unit": "" },
				{"name": "lon", "description": "longitude of substation", "unit": "" },
				{"name": "point", "description": "point geometry of substation", "unit": "" },
				{"name": "polygon", "description": "original geometry of substation", "unit": "" },
				{"name": "geom", "description": "geometry", "unit": "" } ]},
		"meta_version": "1.1"}] }';


--
-- Name: ego_ehv_substation_subst_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_ehv_substation_subst_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_ehv_substation_subst_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_ehv_substation_subst_id_seq OWNED BY model_draft.ego_ehv_substation.subst_id;


--
-- Name: ego_grid_ehv_substation; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_ehv_substation (
    subst_id integer NOT NULL,
    lon double precision NOT NULL,
    lat double precision NOT NULL,
    point public.geometry(Point,4326) NOT NULL,
    polygon public.geometry NOT NULL,
    voltage text,
    power_type text,
    substation text,
    osm_id text NOT NULL,
    osm_www text NOT NULL,
    frequency text,
    subst_name text,
    ref text,
    operator text,
    dbahn text,
    status smallint NOT NULL,
    otg_id bigint
);


--
-- Name: TABLE ego_grid_ehv_substation; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_ehv_substation IS '{
"Name": "Abstracted substations of extra high voltage",
"Source": [{
                  "Name": "OpenStreetMap",
                  "URL":  "www.openstreetmap.org" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["..."],
"Column": [
                   {"Name": "id",	
                    "Description": "serial id",
                    "Unit": "" },
                   {"Name": "lon",
                    "Description": "longitude of substation ",
                    "Unit": "" },
                   {"Name": "lat",
                    "Description": "latitude of substation ",
                    "Unit": "" },
                   {"Name": "point",
                    "Description": "point geometry of substation  (4326)",
                    "Unit": "" },
                   {"Name": "polygon",
                    "Description": "polygon geometry of substation",
                    "Unit": "" },
                   {"Name": "voltage",
                    "Description": "(all) voltage levels contained in substation",
                    "Unit": "V" },
                   {"Name": "power_type",
                    "Description": "value of osm key power",
                    "Unit": "" },
                   {"Name": "substation",
                    "Description": "value of osm key substation",
                    "Unit": "" },
                   {"Name": "osm_id",
                    "Description": "osm id of substation, begins with prefix r(relation), n(node) or w(way)",
                    "Unit": "" },
                   {"Name": "osm_www",
                    "Description": "hyperlink to osm source",
                    "Unit": "" },
                   {"Name": "frequency",
                    "Description": "frequency of substation",
                    "Unit": "Hz" },
                   {"Name": "subst_name",
                    "Description": "name of substation",
                    "Unit": "" },
                   {"Name": "ref",
                    "Description": "reference tag of substation",
                    "Unit": "" },
                   {"Name": "operator",
                    "Description": "operator(s) of substation",
                    "Unit": "" },
                   {"Name": "dbahn",
                    "Description": "states if substation is connected to railway grid and if yes the indicator",
                    "Unit": "" },
                   {"Name": "status",
                    "Description": "states the osm source of substation (1=relation, 2=way, 4=node)",
                    "Unit": "" },                   
                   {"Name": "otg_id",
                    "Description": "states the id of respective bus in osmtgmod",
                    "Unit": "" }],
"Changes":[
                   {"Name": "lukasol",
                    "Mail": "",
                    "Date":  "20.10.2016",
                    "Comment": "..." }
                  ],
"ToDo": ["..."],
"Licence": [{
	"Name":		"Open Database License (ODbL) v1.0",
	"URL":		"http://opendatacommons.org/licenses/odbl/1.0/",
	"Copyright": 	"NEXT ENERGY"}],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_ehv_substation_subst_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_ehv_substation_subst_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_ehv_substation_subst_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_ehv_substation_subst_id_seq OWNED BY model_draft.ego_grid_ehv_substation.subst_id;


--
-- Name: ego_grid_ehv_substation_voronoi; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_ehv_substation_voronoi (
    geom public.geometry(Polygon,4326),
    subst_id integer NOT NULL
);


--
-- Name: TABLE ego_grid_ehv_substation_voronoi; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_ehv_substation_voronoi IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_hv_electrical_neighbours_bus; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_hv_electrical_neighbours_bus (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    bus_id bigint NOT NULL,
    v_nom double precision,
    id bigint NOT NULL,
    cntr_id text,
    current_type text DEFAULT 'AC'::text,
    v_mag_pu_min double precision DEFAULT 0,
    v_mag_pu_max double precision,
    geom public.geometry(Point,4326)
);


--
-- Name: ego_grid_hv_electrical_neighbours_line; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_hv_electrical_neighbours_line (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    line_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    cntr_id text,
    v_nom bigint,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom numeric DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    capital_cost double precision,
    length double precision,
    cables integer,
    frequency numeric,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: ego_grid_hv_electrical_neighbours_transformer; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_hv_electrical_neighbours_transformer (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    trafo_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    cntr_id text,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom double precision DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    tap_ratio double precision,
    phase_shift double precision,
    capital_cost double precision DEFAULT 0,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326),
    s1 double precision DEFAULT 0,
    s2 double precision DEFAULT 0,
    s_min double precision DEFAULT 0
);


--
-- Name: ego_grid_hvmv_substation_dummy; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_hvmv_substation_dummy (
    subst_id integer NOT NULL,
    subst_name text,
    geom public.geometry(Point,3035)
);


--
-- Name: TABLE ego_grid_hvmv_substation_dummy; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_hvmv_substation_dummy IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_hvmv_substation_voronoi; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_hvmv_substation_voronoi (
    geom public.geometry(Polygon,3035),
    id integer NOT NULL,
    subst_id integer,
    subst_sum integer
);


--
-- Name: TABLE ego_grid_hvmv_substation_voronoi; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_hvmv_substation_voronoi IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_hvmv_substation_voronoi_cut; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_hvmv_substation_voronoi_cut (
    id integer NOT NULL,
    subst_id integer,
    mun_id integer,
    voi_id integer,
    ags_0 character varying(12),
    subst_type integer,
    subst_sum integer,
    geom public.geometry(Polygon,3035),
    geom_sub public.geometry(Point,3035)
);


--
-- Name: TABLE ego_grid_hvmv_substation_voronoi_cut; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_hvmv_substation_voronoi_cut IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_hvmv_substation_voronoi_cut_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_hvmv_substation_voronoi_cut_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_hvmv_substation_voronoi_cut_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_hvmv_substation_voronoi_cut_id_seq OWNED BY model_draft.ego_grid_hvmv_substation_voronoi_cut.id;


--
-- Name: ego_grid_hvmv_substation_voronoi_cut_nn_collect; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_hvmv_substation_voronoi_cut_nn_collect (
    id integer NOT NULL,
    subst_id integer,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_grid_hvmv_substation_voronoi_cut_nn_collect; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_hvmv_substation_voronoi_cut_nn_collect IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_hvmv_substation_voronoi_cut_nn_collect_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_hvmv_substation_voronoi_cut_nn_collect_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_hvmv_substation_voronoi_cut_nn_collect_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_hvmv_substation_voronoi_cut_nn_collect_id_seq OWNED BY model_draft.ego_grid_hvmv_substation_voronoi_cut_nn_collect.id;


--
-- Name: ego_grid_hvmv_substation_voronoi_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_hvmv_substation_voronoi_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_hvmv_substation_voronoi_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_hvmv_substation_voronoi_id_seq OWNED BY model_draft.ego_grid_hvmv_substation_voronoi.id;


--
-- Name: ego_grid_lv_griddistrict; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_lv_griddistrict (
    id integer NOT NULL,
    mvlv_subst_id integer,
    subst_id integer,
    la_id integer,
    nn boolean,
    subst_cnt integer,
    zensus_sum integer,
    zensus_count integer,
    zensus_density double precision,
    population_density double precision,
    area_ha double precision,
    sector_area_residential double precision,
    sector_area_retail double precision,
    sector_area_industrial double precision,
    sector_area_agricultural double precision,
    sector_area_sum double precision,
    sector_share_residential double precision,
    sector_share_retail double precision,
    sector_share_industrial double precision,
    sector_share_agricultural double precision,
    sector_share_sum double precision,
    sector_count_residential integer,
    sector_count_retail integer,
    sector_count_industrial integer,
    sector_count_agricultural integer,
    sector_count_sum integer,
    sector_consumption_residential double precision,
    sector_consumption_retail double precision,
    sector_consumption_industrial double precision,
    sector_consumption_agricultural double precision,
    sector_consumption_sum double precision,
    sector_peakload_retail double precision,
    sector_peakload_residential double precision,
    sector_peakload_industrial double precision,
    sector_peakload_agricultural double precision,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: ego_grid_lv_griddistrict_cut; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_lv_griddistrict_cut (
    id integer NOT NULL,
    la_id integer,
    subst_id integer,
    subst_cnt integer,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_grid_lv_griddistrict_cut_0subst; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_lv_griddistrict_cut_0subst (
    id integer NOT NULL,
    la_id integer,
    subst_id integer,
    subst_cnt integer,
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_grid_lv_griddistrict_cut_0subst; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_lv_griddistrict_cut_0subst IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_lv_griddistrict_cut_1subst; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_lv_griddistrict_cut_1subst (
    id integer NOT NULL,
    la_id integer,
    subst_id integer,
    subst_cnt integer,
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_grid_lv_griddistrict_cut_1subst; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_lv_griddistrict_cut_1subst IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_lv_griddistrict_cut_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_lv_griddistrict_cut_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_lv_griddistrict_cut_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_lv_griddistrict_cut_id_seq OWNED BY model_draft.ego_grid_lv_griddistrict_cut.id;


--
-- Name: ego_grid_lv_griddistrict_cut_nn; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_lv_griddistrict_cut_nn (
    id integer NOT NULL,
    a_id integer,
    b_id integer,
    subst_id integer,
    la_id integer,
    geom public.geometry(Polygon,3035),
    geom_line public.geometry(LineString,3035),
    distance double precision
);


--
-- Name: TABLE ego_grid_lv_griddistrict_cut_nn; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_lv_griddistrict_cut_nn IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_lv_griddistrict_cut_nn_collect; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_lv_griddistrict_cut_nn_collect (
    id integer NOT NULL,
    mvlv_subst_id integer,
    subst_id integer,
    la_id integer,
    nn boolean,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_grid_lv_griddistrict_cut_nn_collect; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_lv_griddistrict_cut_nn_collect IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_lv_griddistrict_cut_nn_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_lv_griddistrict_cut_nn_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_lv_griddistrict_cut_nn_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_lv_griddistrict_cut_nn_id_seq OWNED BY model_draft.ego_grid_lv_griddistrict_cut_nn.id;


--
-- Name: ego_grid_lv_griddistrict_cut_xsubst; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_lv_griddistrict_cut_xsubst (
    id integer NOT NULL,
    la_id integer,
    subst_id integer,
    subst_cnt integer,
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_grid_lv_griddistrict_cut_xsubst; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_lv_griddistrict_cut_xsubst IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_lv_griddistrict_paper; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_lv_griddistrict_paper (
    id integer NOT NULL,
    geom public.geometry(Point,3035),
    la_id integer,
    ont_count integer,
    ont_id integer,
    merge_id integer,
    mvlv_subst_id integer
);


--
-- Name: ego_grid_lv_loadarea_rest; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_lv_loadarea_rest (
    id integer NOT NULL,
    la_id integer,
    geom_point public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_grid_lv_loadarea_rest_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_lv_loadarea_rest_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_lv_loadarea_rest_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_lv_loadarea_rest_id_seq OWNED BY model_draft.ego_grid_lv_loadarea_rest.id;


--
-- Name: ego_grid_mv_griddistrict; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict (
    subst_id integer NOT NULL,
    subst_sum integer,
    type1 integer,
    type1_cnt integer,
    type2 integer,
    type2_cnt integer,
    type3 integer,
    type3_cnt integer,
    "group" character(1),
    gem integer,
    gem_clean integer,
    zensus_sum integer,
    zensus_count integer,
    zensus_density numeric,
    population_density numeric,
    la_count integer,
    area_ha numeric,
    la_area numeric(10,1),
    free_area numeric(10,1),
    area_share numeric(4,1),
    consumption numeric,
    consumption_per_area numeric,
    dea_cnt integer,
    dea_capacity numeric,
    lv_dea_cnt integer,
    lv_dea_capacity numeric,
    mv_dea_cnt integer,
    mv_dea_capacity numeric,
    geom_type text,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_grid_mv_griddistrict; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict IS '{
	"title": "eGo dataprocessing - MV Grid district",
	"description": "Catchment area of HVMV substation (Transition point)",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ",
		"url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)"},
		{"name": "OpenStreetMap", "description": "Â© OpenStreetMap contributors",
		"url": "http://www.openstreetmap.org/", "license": "Open Database License (ODbL) v1.0"},
		{"name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "description": "Â© GeoBasis-DE / BKG 2016 (Daten verÃ¤ndert)",
		"url": "http://www.geodatenzentrum.de/", "license": "Geodatenzugangsgesetz (GeoZG)"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": ""} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!"} ],
	"contributors": [
		{"name": "Ludee", "email": "",
		"date": "02.09.2016", "comment": "Create table"},
		{"name": "Ludee", "email": "",
		"date": "15.01.2017", "comment": "Update metadata"},
		{"name": "Ludee", "email": "",
		"date": "21.03.2017", "comment": "Update metadata to 1.1"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", "description": "version id", "unit": "" },
				{"name": "subst_id", "description": "unique identifier", "unit": "" },
				{"name": "subst_sum", "description": "number of substation per MV griddistrict", "unit": "" },
				{"name": "area_ha", "description": "area in hectar", "unit": "ha" },
				{"name": "geom_type", "description": "polygon type (polygon, multipolygon)", "unit": "" },
				{"name": "geom", "description": "geometry", "unit": "" } ]},
		"meta_version": "1.1"}] }';


--
-- Name: ego_grid_mv_griddistrict_collect; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_collect (
    id integer NOT NULL,
    subst_id integer,
    subst_name text,
    ags_0 character varying(12),
    geom_sub public.geometry(Point,3035),
    subst_sum integer,
    subst_type integer,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_grid_mv_griddistrict_collect; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict_collect IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_mv_griddistrict_collect_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mv_griddistrict_collect_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mv_griddistrict_collect_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mv_griddistrict_collect_id_seq OWNED BY model_draft.ego_grid_mv_griddistrict_collect.id;


--
-- Name: ego_grid_mv_griddistrict_dump; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_dump (
    id integer NOT NULL,
    subst_id integer,
    subst_cnt integer,
    geom_point public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_grid_mv_griddistrict_dump; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict_dump IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_mv_griddistrict_dump_0sub; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_dump_0sub (
    id integer NOT NULL,
    subst_id integer,
    subst_cnt integer,
    geom_point public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_grid_mv_griddistrict_dump_0sub_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_0sub_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mv_griddistrict_dump_0sub_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_0sub_id_seq OWNED BY model_draft.ego_grid_mv_griddistrict_dump_0sub.id;


--
-- Name: ego_grid_mv_griddistrict_dump_1sub; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_dump_1sub (
    id integer NOT NULL,
    subst_id integer,
    subst_cnt integer,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_grid_mv_griddistrict_dump_1sub_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_1sub_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mv_griddistrict_dump_1sub_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_1sub_id_seq OWNED BY model_draft.ego_grid_mv_griddistrict_dump_1sub.id;


--
-- Name: ego_grid_mv_griddistrict_dump_id_seq1; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_id_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mv_griddistrict_dump_id_seq1; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_id_seq1 OWNED BY model_draft.ego_grid_mv_griddistrict_dump.id;


--
-- Name: ego_grid_mv_griddistrict_dump_nn; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_dump_nn (
    a_id integer NOT NULL,
    a_geom_point public.geometry(Point,3035),
    a_geom public.geometry(Polygon,3035),
    b_id integer,
    subst_id integer,
    b_subst_cnt integer,
    b_geom public.geometry(Polygon,3035),
    distance double precision
);


--
-- Name: TABLE ego_grid_mv_griddistrict_dump_nn; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict_dump_nn IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_mv_griddistrict_dump_nn_collect; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_dump_nn_collect (
    id integer NOT NULL,
    subst_id integer,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_collect_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_nn_collect_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mv_griddistrict_dump_nn_collect_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_nn_collect_id_seq OWNED BY model_draft.ego_grid_mv_griddistrict_dump_nn_collect.id;


--
-- Name: ego_grid_mv_griddistrict_dump_nn_collect_union; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_dump_nn_collect_union (
    subst_id integer NOT NULL,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_grid_mv_griddistrict_dump_nn_collect_union; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict_dump_nn_collect_union IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_mv_griddistrict_dump_nn_line; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_dump_nn_line (
    id integer NOT NULL,
    a_id integer,
    subst_id integer,
    geom public.geometry(LineString,3035)
);


--
-- Name: TABLE ego_grid_mv_griddistrict_dump_nn_line; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict_dump_nn_line IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_mv_griddistrict_dump_nn_line_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_nn_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mv_griddistrict_dump_nn_line_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mv_griddistrict_dump_nn_line_id_seq OWNED BY model_draft.ego_grid_mv_griddistrict_dump_nn_line.id;


--
-- Name: ego_grid_mv_griddistrict_dump_nn_union; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_dump_nn_union (
    subst_id integer NOT NULL,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: ego_grid_mv_griddistrict_new; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_new (
    subst_id integer NOT NULL,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: ego_grid_mv_griddistrict_type1; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_type1 (
    subst_id integer NOT NULL,
    subst_name text,
    ags_0 character varying(12),
    geom_sub public.geometry(Point,3035),
    subst_sum integer,
    subst_type integer,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_grid_mv_griddistrict_type1; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict_type1 IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_mv_griddistrict_type2; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_type2 (
    subst_id integer NOT NULL,
    subst_name text,
    ags_0 character varying(12),
    geom_sub public.geometry(Point,3035),
    subst_sum integer,
    subst_type integer,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_grid_mv_griddistrict_type2; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict_type2 IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_mv_griddistrict_type3; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_type3 (
    subst_id integer NOT NULL,
    subst_name text,
    ags_0 character varying(12),
    geom_sub public.geometry(Point,3035),
    subst_sum integer,
    subst_type integer,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_grid_mv_griddistrict_type3; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict_type3 IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_mv_griddistrict_union; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_griddistrict_union (
    subst_id integer NOT NULL,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_grid_mv_griddistrict_union; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mv_griddistrict_union IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_grid_mv_visualization_branches; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_visualization_branches (
    branch_id character varying(25) NOT NULL,
    grid_id integer,
    type_name character varying(25),
    type_kind character varying(5),
    type_v_nom integer,
    type_s_nom double precision,
    length double precision,
    geom public.geometry(LineString,4326),
    s_res0 double precision,
    s_res1 double precision
);


--
-- Name: ego_grid_mv_visualization_bunch; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_visualization_bunch (
    grid_id integer NOT NULL,
    geom_mv_station public.geometry(Point,4326),
    geom_mv_cable_dists public.geometry(MultiPoint,4326),
    geom_mv_circuit_breakers public.geometry(MultiPoint,4326),
    geom_lv_load_area_centres public.geometry(MultiPoint,4326),
    geom_lv_stations public.geometry(MultiPoint,4326),
    geom_mv_generators public.geometry(MultiPoint,4326),
    geom_mv_lines public.geometry(MultiLineString,4326)
);


--
-- Name: ego_grid_mv_visualization_bunch_grid_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mv_visualization_bunch_grid_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mv_visualization_bunch_grid_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mv_visualization_bunch_grid_id_seq OWNED BY model_draft.ego_grid_mv_visualization_bunch.grid_id;


--
-- Name: ego_grid_mv_visualization_bunch_paper1; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_visualization_bunch_paper1 (
    grid_id integer NOT NULL,
    geom_mv_station public.geometry(Point,4326),
    geom_mv_cable_dists public.geometry(MultiPoint,4326),
    geom_mv_circuit_breakers public.geometry(MultiPoint,4326),
    geom_lv_load_area_centres public.geometry(MultiPoint,4326),
    geom_lv_stations public.geometry(MultiPoint,4326),
    geom_mv_generators public.geometry(MultiPoint,4326),
    geom_mv_lines public.geometry(MultiLineString,4326)
);


--
-- Name: ego_grid_mv_visualization_bunch_paper1_grid_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mv_visualization_bunch_paper1_grid_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mv_visualization_bunch_paper1_grid_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mv_visualization_bunch_paper1_grid_id_seq OWNED BY model_draft.ego_grid_mv_visualization_bunch_paper1.grid_id;


--
-- Name: ego_grid_mv_visualization_nodes; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mv_visualization_nodes (
    node_id character varying(100) NOT NULL,
    grid_id integer,
    v_nom integer,
    geom public.geometry(Point,4326),
    v_res0 double precision,
    v_res1 double precision
);


--
-- Name: ego_grid_mvlv_substation; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mvlv_substation (
    mvlv_subst_id integer NOT NULL,
    la_id integer,
    subst_id integer,
    geom public.geometry(Point,3035),
    is_dummy boolean
);


--
-- Name: TABLE ego_grid_mvlv_substation; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mvlv_substation IS '{
	"title": "eGoDP - MVLV Substation (ONT)",
	"description": "Low voltage substations / Distribution substations (Ortsnetztrafos)",
	"language": [ "eng", "ger" ],
	"reference_date": "2017",
	"sources": [
		{"name": "open_eGo", "description": "eGo dataprocessing",
		"url": "https://github.com/openego/data_processing", "license": "ODbL-1.0"} ],
	"spatial": [
		{"extend": "Germany",
		"resolution": " "} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!"} ],
	"contributors": [
		{"name": "jong42", "email": "",
		"date": "20.10.2016", "comment": "create table"},
		{"name": "jong42", "email": "",
		"date": "27.10.2016", "comment": "change table names"},
		{"name": "Ludee", "email": "",
		"date": "21.03.2017", "comment": "validate and restructure tables"},
		{"name": "Ludee", "email": "",
		"date": "22.03.2017", "comment": "update metadata (1.1) and add license"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "mvlv_subst_id", "description": "MVLV substation ID", "unit": "" },
				{"name": "la_id", "description": "loadarea ID", "unit": "" },
				{"name": "subst_id", "description": "HVMV substation ID", "unit": "" },
				{"name": "geom", "description": "geometry", "unit": "" } ]},
		"meta_version": "1.1" }] }';


--
-- Name: ego_grid_mvlv_substation_mvlv_subst_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mvlv_substation_mvlv_subst_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mvlv_substation_mvlv_subst_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mvlv_substation_mvlv_subst_id_seq OWNED BY model_draft.ego_grid_mvlv_substation.mvlv_subst_id;


--
-- Name: ego_grid_mvlv_substation_paper; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mvlv_substation_paper (
    mvlv_subst_id integer NOT NULL,
    la_id integer,
    subst_id integer,
    geom public.geometry(Point,3035),
    is_dummy boolean
);


--
-- Name: TABLE ego_grid_mvlv_substation_paper; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_mvlv_substation_paper IS '{
	"title": "eGoDP - MVLV Substation (ONT)",
	"description": "Low voltage substations / Distribution substations (Ortsnetztrafos)",
	"language": [ "eng", "ger" ],
	"reference_date": "2017",
	"sources": [
		{"name": "open_eGo", "description": "eGo dataprocessing",
		"url": "https://github.com/openego/data_processing", "license": "ODbL-1.0"} ],
	"spatial": [
		{"extend": "Germany",
		"resolution": " "} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!"} ],
	"contributors": [
		{"name": "jong42", "email": "",
		"date": "20.10.2016", "comment": "create table"},
		{"name": "jong42", "email": "",
		"date": "27.10.2016", "comment": "change table names"},
		{"name": "Ludee", "email": "",
		"date": "21.03.2017", "comment": "validate and restructure tables"},
		{"name": "Ludee", "email": "",
		"date": "22.03.2017", "comment": "update metadata (1.1) and add license"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "mvlv_subst_id", "description": "MVLV substation ID", "unit": "" },
				{"name": "la_id", "description": "loadarea ID", "unit": "" },
				{"name": "subst_id", "description": "HVMV substation ID", "unit": "" },
				{"name": "geom", "description": "geometry", "unit": "" } ]},
		"meta_version": "1.1" }] }';


--
-- Name: ego_grid_mvlv_substation_paper_mvlv_subst_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mvlv_substation_paper_mvlv_subst_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mvlv_substation_paper_mvlv_subst_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mvlv_substation_paper_mvlv_subst_id_seq OWNED BY model_draft.ego_grid_mvlv_substation_paper.mvlv_subst_id;


--
-- Name: ego_grid_mvlv_substation_voronoi; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_mvlv_substation_voronoi (
    id integer NOT NULL,
    subst_id integer,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_grid_mvlv_substation_voronoi_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_mvlv_substation_voronoi_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_mvlv_substation_voronoi_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_grid_mvlv_substation_voronoi_id_seq OWNED BY model_draft.ego_grid_mvlv_substation_voronoi.id;


--
-- Name: ego_grid_pf_hv_bus; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_bus (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    bus_id bigint NOT NULL,
    v_nom double precision,
    current_type text DEFAULT 'AC'::text,
    v_mag_pu_min double precision DEFAULT 0,
    v_mag_pu_max double precision,
    geom public.geometry(Point,4326)
);


--
-- Name: TABLE ego_grid_pf_hv_bus; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_bus IS '{
"Name": "hv powerflow bus",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Bus considered in hv powerflow calculation"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "bus_id",
                    "Description": " unique id for bus, equivalent to id from osmtgmod",
                    "Unit": "" },
                   {"Name": "v_nom",
                    "Description": "nominal voltage",
                    "Unit": "kV" },
                   {"Name": "current_type",
                    "Description": "current type - AC or DC",
                    "Unit": "" },
                   {"Name": "v_mag_pu_min",
                    "Description": "Minimum desired voltage, per unit of v_nom",
                    "Unit": "per unit" },
                   {"Name": "v_mag_pu_max",
                    "Description": "Maximum desired voltage, per unit of v_nom",
                    "Unit": "per unit" },
                   {"Name": "geom",
                    "Description": "geometry of bus",
                    "Unit": "..." }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-String" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_bus_v_mag_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_bus_v_mag_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    bus_id bigint NOT NULL,
    temp_id integer NOT NULL,
    v_mag_pu_set double precision[]
);


--
-- Name: TABLE ego_grid_pf_hv_bus_v_mag_set; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_bus_v_mag_set IS '{
"Name": "...",
"Source": [{ 	  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["..."],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "bus_id",
                    "Description": "unique id of sorresponding bus",
                    "Unit": "" },
                   {"Name": "temp_id",
                    "Description": "id of temporal resolution",
                    "Unit": "" },
                   {"Name": "v_mag_pu_set",
                    "Description": "Voltage magnitude set point, per unit of v_nom",
                    "Unit": "per unit" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." },
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_busmap; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_busmap (
    scn_name text NOT NULL,
    bus0 text NOT NULL,
    bus1 text NOT NULL,
    path_length numeric
);


--
-- Name: TABLE ego_grid_pf_hv_busmap; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_busmap IS '{
"Name": "hv powerflow busmap",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "2017
"Date of collection": ""
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": [""],
"Description": ["Bus to bus assignment by id to support PyPSA clustering."],
"Column": [
                   {"Name": "scn_name",
                    "Description": "name of scenario",
                    "Unit": "" },
                   {"Name": "bus0",
                    "Description": "source bus id",
                    "Unit": "" },
                   {"Name": "bus1",
                    "Description": "target bus id",
                    "Unit": "" },
                   {"Name": "path_length",
                    "Description": "Length of line between source and target bus.",
                    "Unit": "" }],
"Changes":[
                   {"Name": "s3pp",
                    "Mail": "",
                    "Date":  "02.06.2017",
                    "Comment": "Initial statement."}
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_extension_bus; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_bus (
    scn_name character varying DEFAULT 'extension_nep2035_confirmed'::character varying NOT NULL,
    bus_id bigint NOT NULL,
    v_nom double precision,
    current_type text DEFAULT 'AC'::text,
    v_mag_pu_min double precision DEFAULT 0,
    v_mag_pu_max double precision,
    geom public.geometry(Point,4326),
    project character varying,
    bus_name character varying
);


--
-- Name: ego_grid_pf_hv_extension_generator; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_generator (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    generator_id bigint NOT NULL,
    bus bigint,
    dispatch text DEFAULT 'flexible'::text,
    control text DEFAULT 'PQ'::text,
    p_nom double precision DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    p_min_pu_fixed double precision DEFAULT 0,
    p_max_pu_fixed double precision DEFAULT 1,
    sign double precision DEFAULT 1,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision
);


--
-- Name: ego_grid_pf_hv_extension_generator_pq_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_generator_pq_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    generator_id bigint NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[]
);


--
-- Name: ego_grid_pf_hv_extension_line; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_line (
    scn_name character varying DEFAULT 'extension_nep2035_confirmed'::character varying NOT NULL,
    line_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom numeric DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    capital_cost double precision,
    length double precision,
    cables integer,
    frequency numeric,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326),
    v_nom bigint,
    project character varying,
    project_id bigint,
    segment bigint,
    cable boolean DEFAULT false,
    nova character varying
);


--
-- Name: ego_grid_pf_hv_extension_link; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_link (
    scn_name character varying DEFAULT 'extension_nep2035_confirmed'::character varying NOT NULL,
    link_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    efficiency double precision DEFAULT 1,
    p_nom numeric DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    capital_cost double precision,
    marginal_cost double precision,
    length double precision,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326),
    project text,
    project_id bigint,
    segment character varying,
    v_nom bigint
);


--
-- Name: ego_grid_pf_hv_extension_load; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_load (
    scn_name character varying DEFAULT 'BE and NO'::character varying NOT NULL,
    load_id bigint NOT NULL,
    bus bigint,
    sign double precision DEFAULT '-1'::integer,
    e_annual double precision
);


--
-- Name: ego_grid_pf_hv_extension_load_pq_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_load_pq_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    load_id bigint NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[]
);


--
-- Name: ego_grid_pf_hv_extension_source; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_source (
    source_id bigint,
    name text,
    co2_emissions double precision,
    commentary text
);


--
-- Name: ego_grid_pf_hv_extension_storage; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_storage (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    storage_id bigint NOT NULL,
    bus bigint,
    dispatch text DEFAULT 'flexible'::text,
    control text DEFAULT 'PQ'::text,
    p_nom double precision DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    p_min_pu_fixed double precision DEFAULT 0,
    p_max_pu_fixed double precision DEFAULT 1,
    sign double precision DEFAULT 1,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision,
    soc_initial double precision,
    soc_cyclic boolean DEFAULT false,
    max_hours double precision,
    efficiency_store double precision,
    efficiency_dispatch double precision,
    standing_loss double precision
);


--
-- Name: ego_grid_pf_hv_extension_storage_pq_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_storage_pq_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    storage_id bigint NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[],
    soc_set double precision[],
    inflow double precision[]
);


--
-- Name: ego_grid_pf_hv_extension_temp_resolution; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_temp_resolution (
    temp_id bigint,
    timesteps bigint,
    resolution text,
    start_time timestamp without time zone
);


--
-- Name: ego_grid_pf_hv_extension_transformer; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_extension_transformer (
    scn_name character varying DEFAULT 'extension_nep2035_confirmed'::character varying NOT NULL,
    trafo_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom double precision DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    tap_ratio double precision,
    phase_shift double precision,
    capital_cost double precision DEFAULT 0,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326),
    project character varying,
    v0 double precision DEFAULT 0,
    v1 double precision DEFAULT 0,
    s0 double precision DEFAULT 0,
    s1 double precision DEFAULT 0,
    s_min double precision DEFAULT 0
);


--
-- Name: ego_grid_pf_hv_generator; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_generator (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    generator_id bigint NOT NULL,
    bus bigint,
    dispatch text DEFAULT 'flexible'::text,
    control text DEFAULT 'PQ'::text,
    p_nom double precision DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    p_min_pu_fixed double precision DEFAULT 0,
    p_max_pu_fixed double precision DEFAULT 1,
    sign double precision DEFAULT 1,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision
);


--
-- Name: TABLE ego_grid_pf_hv_generator; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_generator IS '{
"Name": "Generator in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Generators considered in hv powerflow"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "generator_id",
                    "Description": "unique id for generators",
                    "Unit": "" },                   
                   {"Name": "bus",
                    "Description": "id of associated bus",
                    "Unit": "" },
                   {"Name": "dispatch",
                    "Description": "Controllability of active power dispatch, must be flexible or variable.",
                    "Unit": "" },
                   {"Name": "control",
                    "Description": "P,Q,V control strategy, must be PQ, PV or Slack.",
                    "Unit": "" },
                   {"Name": "p_nom",
                    "Description": "Nominal power",
                    "Unit": "MW" },
                   {"Name": "p_nom_extendable",
                    "Description": "Switch to allow capacity p_nom to be extended",
                    "Unit": "" },
                   {"Name": "p_nom_min",
                    "Description": "If p_nom is extendable, set its minimum value",
                    "Unit": "" },
                   {"Name": "p_nom_max",
                    "Description": "If p_nom is extendable, set its maximum value (e.g. limited by potential)",
                    "Unit": "" },
                   {"Name": "p_min_pu_fixed",
                    "Description": "If control=flexible this gives the minimum output per unit of p_nom",
                    "Unit": "per unit" },
                   {"Name": "p_max_pu_fixed",
                    "Description": "If control=flexible this gives the maximum output per unit of p_nom, equivalent to a de-rating factor.",
                    "Unit": "per unit" },
                   {"Name": "sign",
                    "Description": "power sign",
                    "Unit": "" },
                   {"Name": "source",
                    "Description": "prime mover energy carrier",
                    "Unit": "" },
                   {"Name": "marginal_cost",
                    "Description": "Marginal cost of production of 1 MWh",
                    "Unit": "€/MWh" },
                   {"Name": "capital_cost",
                    "Description": "Capital cost of extending p_nom by 1 MW",
                    "Unit": "€/MW" },
                   {"Name": "efficiency",
                    "Description": "Ratio between primary energy and electrical energy",
                    "Unit": "per unit" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_generator_pq_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_generator_pq_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    generator_id bigint NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[]
);


--
-- Name: TABLE ego_grid_pf_hv_generator_pq_set; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_generator_pq_set IS '{
"Name": "Generator time series hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Times series for generators considered in hv powerflow"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "generator_id",
                    "Description": "id of considered generator",
                    "Unit": "" },                   
                   {"Name": "temp_id",
                    "Description": "id of temporal resolution",
                    "Unit": "" },
                   {"Name": "p_set",
                    "Description": "active power set point",
                    "Unit": "MW" },
                   {"Name": "q_set",
                    "Description": "reactive power set point",
                    "Unit": "MVar" },
                   {"Name": "p_min_pu",
                    "Description": "If control=variable this gives the minimum output for each snapshot per unit of p_nom for the OPF",
                    "Unit": "per unit" },
                   {"Name": "p_max_pu",
                    "Description": "If control=variable this gives the maximum output for each snapshot per unit of p_nom for the OPF, relevant e.g. if for renewables the power output is limited by the climate",
                    "Unit": "per unit" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_line; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_line (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    line_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom numeric DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    capital_cost double precision,
    length double precision,
    cables integer,
    frequency numeric,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: TABLE ego_grid_pf_hv_line; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_line IS '{
"Name": "Lines in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Electricity lines considered in hv powerflow calculations"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "line_id",
                    "Description": "unique identifier",
                    "Unit": "" },                   
                   {"Name": "bus0",
                    "Description": "Name of first bus to which branch is attached",
                    "Unit": "" },
                   {"Name": "bus1",
                    "Description": "Name of second bus to which branch is attached",
                    "Unit": "" },
                   {"Name": "x",
                    "Description": "Series reactance",
                    "Unit": "Ohm" },
                   {"Name": "r",
                    "Description": "Series resistance",
                    "Unit": "Ohm" },
                   {"Name": "g",
                    "Description": "Shunt conductivity",
                    "Unit": "Siemens" }, 
                   {"Name": "b",
                    "Description": "Shunt susceptance",
                    "Unit": "Siemens" }, 
                   {"Name": "s_nom",
                    "Description": "Limit of apparent power which can pass through branch",
                    "Unit": "MVA" }, 
                   {"Name": "s_nom_extendable",
                    "Description": "Switch to allow capacity s_nom to be extended",
                    "Unit": "" }, 
                   {"Name": "s_nom_min",
                    "Description": "If s_nom is extendable, set its minimum value",
                    "Unit": "MVA" }, 
                   {"Name": "s_nom_max",
                    "Description": "If s_nom is extendable in OPF, set its maximum value",
                    "Unit": "MVA" }, 
                   {"Name": "capital_cost",
                    "Description": "Capital cost of extending s_nom by 1 MVA",
                    "Unit": "€/MVA" }, 
                   {"Name": "length",
                    "Description": "Length of line",
                    "Unit": "km" }, 
                   {"Name": "cables",
                    "Description": "...",
                    "Unit": "" }, 
                   {"Name": "frequency",
                    "Description": "Frequency of line",
                    "Unit": "" }, 
                   {"Name": "terrain_factor",
                    "Description": "...",
                    "Unit": "" }, 
                   {"Name": "geom",
                    "Description": "geometry that depict the real route of the line",
                    "Unit": "" }, 
                   {"Name": "topo",
                    "Description": "topology that depicts a direct connection between both busses",
                    "Unit": "..." }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_link; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_link (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    link_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    efficiency double precision DEFAULT 1,
    marginal_cost double precision DEFAULT 0,
    p_nom numeric DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    capital_cost double precision,
    length double precision,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: ego_grid_pf_hv_load; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_load (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    load_id bigint NOT NULL,
    bus bigint,
    sign double precision DEFAULT '-1'::integer,
    e_annual double precision
);


--
-- Name: TABLE ego_grid_pf_hv_load; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_load IS '{
"Name": "Load in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Loads considered in hv powerflow calculation"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "load_id",
                    "Description": "unique id",
                    "Unit": "" },                   
                   {"Name": "bus",
                    "Description": "id of associated bus",
                    "Unit": "" },
                   {"Name": "sign",
                    "Description": "power sign",
                    "Unit": "" },
                   {"Name": "e_annual",
                    "Description": "annual electricity consumption",
                    "Unit": "GWh" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_load_pq_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_load_pq_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    load_id bigint NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[]
);


--
-- Name: TABLE ego_grid_pf_hv_load_pq_set; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_load_pq_set IS '{
"Name": "Load time series hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Times series for loads considered in hv powerflow"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "load_id",
                    "Description": "unique load id",
                    "Unit": "" },                   
                   {"Name": "temp_id",
                    "Description": "id of temporal resolution",
                    "Unit": "" },
                   {"Name": "p_set",
                    "Description": "active power set point",
                    "Unit": "MW" },
                   {"Name": "q_set",
                    "Description": "reactive power set point",
                    "Unit": "MVar" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
		    {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_nep2035_bus; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_nep2035_bus (
    scn_name character varying DEFAULT 'Exogene Netzszenarien'::character varying NOT NULL,
    bus_id bigint NOT NULL,
    v_nom double precision,
    current_type text DEFAULT 'AC'::text,
    v_mag_pu_min double precision DEFAULT 0,
    v_mag_pu_max double precision,
    geom public.geometry(Point,4326)
);


--
-- Name: TABLE ego_grid_pf_hv_nep2035_bus; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_nep2035_bus IS '{
"Name": "Exogene Netzszenarien bus",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Spatial resolution": ["Germany"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "bus_id",
                    "Description": " unique id for bus, equivalent to id from osmtgmod",
                    "Unit": "" },
                   {"Name": "v_nom",
                    "Description": "nominal voltage",
                    "Unit": "kV" },
                   {"Name": "current_type",
                    "Description": "current type - AC or DC",
                    "Unit": "" },
                   {"Name": "v_mag_pu_min",
                    "Description": "Minimum desired voltage, per unit of v_nom",
                    "Unit": "per unit" },
                   {"Name": "v_mag_pu_max",
                    "Description": "Maximum desired voltage, per unit of v_nom",
                    "Unit": "per unit" },
                   {"Name": "geom",
                    "Description": "geometry of bus",
                    "Unit": "..." }],

"Instructions for proper use": ["..."]
}';


--
-- Name: COLUMN ego_grid_pf_hv_nep2035_bus.bus_id; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON COLUMN model_draft.ego_grid_pf_hv_nep2035_bus.bus_id IS 'Unit: n/a
Description: Unique name
Status: Input (required)';


--
-- Name: COLUMN ego_grid_pf_hv_nep2035_bus.v_nom; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON COLUMN model_draft.ego_grid_pf_hv_nep2035_bus.v_nom IS 'Unit: kV
Description: Nominal voltage
Status: Input (optional)';


--
-- Name: COLUMN ego_grid_pf_hv_nep2035_bus.current_type; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON COLUMN model_draft.ego_grid_pf_hv_nep2035_bus.current_type IS 'Unit: n/a
Description: Type of current (must be either "AC" or "DC").
Status: Input (optional)';


--
-- Name: COLUMN ego_grid_pf_hv_nep2035_bus.v_mag_pu_min; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON COLUMN model_draft.ego_grid_pf_hv_nep2035_bus.v_mag_pu_min IS 'Unit: per unit
Description: Minimum desired voltage, per unit of v_nom
Status: Input (optional)';


--
-- Name: COLUMN ego_grid_pf_hv_nep2035_bus.v_mag_pu_max; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON COLUMN model_draft.ego_grid_pf_hv_nep2035_bus.v_mag_pu_max IS 'Unit: per unit
Description: Maximum desired voltage, per unit of v_nom
Status: Input (optional)';


--
-- Name: ego_grid_pf_hv_nep2035_link; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_nep2035_link (
    scn_name character varying DEFAULT 'Exogene Netzszenarien'::character varying NOT NULL,
    link_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    efficency bigint DEFAULT 1,
    p_nom numeric DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    capital_cost double precision,
    length double precision,
    terrain_factor double precision DEFAULT 1,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: ego_grid_pf_hv_result_bus; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_bus (
    result_id bigint NOT NULL,
    bus_id bigint NOT NULL,
    x double precision,
    y double precision,
    v_nom double precision,
    current_type text,
    v_mag_pu_min double precision,
    v_mag_pu_max double precision,
    geom public.geometry(Point,4326)
);


--
-- Name: TABLE ego_grid_pf_hv_result_bus; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_bus IS '{
"Name": "hv powerflow bus result",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Results of bus considered in hv powerflow calculation"],
"Column": [
                   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "bus_id",
                    "Description": "unique id for bus, equivalent to id from osmtgmod",
                    "Unit": "" },
				   {"Name": "x",
                    "Description": "longitude of the bus",
                    "Unit": "" },
				   {"Name": "y",
                    "Description": "latitude of the bus",
                    "Unit": "" },
                   {"Name": "v_nom",
                    "Description": "nominal voltage",
                    "Unit": "kV" },
                   {"Name": "current_type",
                    "Description": "current type - AC or DC",
                    "Unit": "" },
                   {"Name": "v_mag_pu_min",
                    "Description": "Minimum desired voltage, per unit of v_nom",
                    "Unit": "per unit" },
                   {"Name": "v_mag_pu_max",
                    "Description": "Maximum desired voltage, per unit of v_nom",
                    "Unit": "per unit" },
                   {"Name": "geom",
                    "Description": "geometry of bus",
                    "Unit": "..." }
					],
					
"Changes":["..."],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_bus_t; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_bus_t (
    result_id bigint NOT NULL,
    bus_id bigint NOT NULL,
    v_mag_pu_set double precision[],
    p double precision[],
    q double precision[],
    v_mag_pu double precision[],
    v_ang double precision[],
    marginal_price double precision[]
);


--
-- Name: TABLE ego_grid_pf_hv_result_bus_t; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_bus_t IS '{
"Name": "hv powerflow bus_t result",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Results of bus_t considered in hv powerflow calculation"],
"Column": [  
				   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "bus_id",
                    "Description": "unique id for bus, equivalent to id from osmtgmod",
                    "Unit": "" },
				   {"Name": "v_mag_pu_set",
                    "Description": "Voltage magnitude set point, per unit of v_nom",
                    "Unit": "per unit" },
				   {"Name": "p",
                    "Description": "active power at bus (positive if net generation at bus)",
                    "Unit": "MW" },
				   {"Name": "q",
                    "Description": "reactive power (positive if net generation at bus)",
                    "Unit": "MVar" },
				   {"Name": "v_mag_pu",
                    "Description": "Voltage magnitude, per unit of v_nom",
                    "Unit": "per unit" },
				   {"Name": "v_ang",
                    "Description": "Voltage angle",
                    "Unit": "radians" },
				   {"Name": "marginal_price",
                    "Description": "Locational marginal price from LOPF from power balance constraint",
                    "Unit": "currency" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_generator; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_generator (
    result_id bigint NOT NULL,
    generator_id bigint NOT NULL,
    bus bigint,
    dispatch text,
    control text,
    p_nom double precision,
    p_nom_extendable boolean,
    p_nom_min double precision,
    p_nom_max double precision,
    p_min_pu_fixed double precision,
    p_max_pu_fixed double precision,
    sign double precision,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision,
    p_nom_opt double precision
);


--
-- Name: TABLE ego_grid_pf_hv_result_generator; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_generator IS '{
"Name": "hv powerflow generator results",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Results of generators considered in hv powerflow"],
"Column": [		   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "generator_id",
                    "Description": "unique id for generators",
                    "Unit": "" },                   
                   {"Name": "bus",
                    "Description": "id of associated bus",
                    "Unit": "" },
                   {"Name": "dispatch",
                    "Description": "Controllability of active power dispatch, must be flexible or variable.",
                    "Unit": "" },
                   {"Name": "control",
                    "Description": "P,Q,V control strategy, must be PQ, PV or Slack.",
                    "Unit": "" },
                   {"Name": "p_nom",
                    "Description": "Nominal power",
                    "Unit": "MW" },
                   {"Name": "p_nom_extendable",
                    "Description": "Switch to allow capacity p_nom to be extended",
                    "Unit": "" },
                   {"Name": "p_nom_min",
                    "Description": "If p_nom is extendable, set its minimum value",
                    "Unit": "" },
                   {"Name": "p_nom_max",
                    "Description": "If p_nom is extendable, set its maximum value (e.g. limited by potential)",
                    "Unit": "" },
                   {"Name": "p_min_pu_fixed",
                    "Description": "If control=flexible this gives the minimum output per unit of p_nom",
                    "Unit": "per unit" },
                   {"Name": "p_max_pu_fixed",
                    "Description": "If control=flexible this gives the maximum output per unit of p_nom, equivalent to a de-rating factor.",
                    "Unit": "per unit" },
                   {"Name": "sign",
                    "Description": "power sign",
                    "Unit": "" },
                   {"Name": "source",
                    "Description": "prime mover energy carrier",
                    "Unit": "" },
                   {"Name": "marginal_cost",
                    "Description": "Marginal cost of production of 1 MWh",
                    "Unit": "€/MWh" },
                   {"Name": "capital_cost",
                    "Description": "Capital cost of extending p_nom by 1 MW",
                    "Unit": "€/MW" },
                   {"Name": "efficiency",
                    "Description": "Ratio between primary energy and electrical energy",
                    "Unit": "per unit" },
				   {"Name": "p_nom_opt",
                    "Description": "Optimised nominal power.",
                    "Unit": "MW" }
                   ],
"Changes":["..."],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_generator_t; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_generator_t (
    result_id bigint NOT NULL,
    generator_id bigint NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[],
    p double precision[],
    q double precision[],
    status bigint[]
);


--
-- Name: TABLE ego_grid_pf_hv_result_generator_t; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_generator_t IS '{
"Name": "hv powerflow generator_t results",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Results of generators_t considered in hv powerflow"],
"Column": [		   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "generator_id",
                    "Description": "unique id for generators",
                    "Unit": "" }, 
				   {"Name": "p_set",
                    "Description": "active power set point",
                    "Unit": "MW" },
                   {"Name": "q_set",
                    "Description": "reactive power set point",
                    "Unit": "MVar" },
                   {"Name": "p_min_pu",
                    "Description": "If control=variable this gives the minimum output for each snapshot per unit of p_nom for the OPF",
                    "Unit": "per unit" },
                   {"Name": "p_max_pu",
                    "Description": "If control=variable this gives the maximum output for each snapshot per unit of p_nom for the OPF, relevant e.g. if for renewables the power output is limited by the weather",
                    "Unit": "per unit" },
				   {"Name": "p",
                    "Description": "active power at bus (positive if net generation at bus)",
                    "Unit": "MW" },
				   {"Name": "q",
                    "Description": "reactive power (positive if net generation at bus)",
                    "Unit": "MVar" },
				   {"Name": "status",
                    "Description": "Status (1 is on, 0 is off). Only outputted if committable is True.",
                    "Unit": "" }],
"Changes":["..."],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_line; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_line (
    result_id bigint NOT NULL,
    line_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric,
    r numeric,
    g numeric,
    b numeric,
    s_nom numeric,
    s_nom_extendable boolean,
    s_nom_min double precision,
    s_nom_max double precision,
    capital_cost double precision,
    length double precision,
    cables integer,
    frequency numeric,
    terrain_factor double precision DEFAULT 1,
    x_pu numeric,
    r_pu numeric,
    g_pu numeric,
    b_pu numeric,
    s_nom_opt numeric,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: TABLE ego_grid_pf_hv_result_line; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_line IS '{
"Name": "Result of lines in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": [" Results of electricity lines considered in hv powerflow calculations"],
"Column": [		   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "line_id",
                    "Description": "unique identifier",
                    "Unit": "" },                   
                   {"Name": "bus0",
                    "Description": "Name of first bus to which branch is attached",
                    "Unit": "" },
                   {"Name": "bus1",
                    "Description": "Name of second bus to which branch is attached",
                    "Unit": "" },
                   {"Name": "x",
                    "Description": "Series reactance",
                    "Unit": "Ohm" },
                   {"Name": "r",
                    "Description": "Series resistance",
                    "Unit": "Ohm" },
                   {"Name": "g",
                    "Description": "Shunt conductivity",
                    "Unit": "Siemens" }, 
                   {"Name": "b",
                    "Description": "Shunt susceptance",
                    "Unit": "Siemens" }, 
                   {"Name": "s_nom",
                    "Description": "Limit of apparent power which can pass through branch",
                    "Unit": "MVA" }, 
                   {"Name": "s_nom_extendable",
                    "Description": "Switch to allow capacity s_nom to be extended",
                    "Unit": "" }, 
                   {"Name": "s_nom_min",
                    "Description": "If s_nom is extendable, set its minimum value",
                    "Unit": "MVA" }, 
                   {"Name": "s_nom_max",
                    "Description": "If s_nom is extendable in OPF, set its maximum value",
                    "Unit": "MVA" }, 
                   {"Name": "capital_cost",
                    "Description": "Capital cost of extending s_nom by 1 MVA",
                    "Unit": "€/MVA" }, 
                   {"Name": "length",
                    "Description": "Length of line",
                    "Unit": "km" }, 
                   {"Name": "cables",
                    "Description": "...",
                    "Unit": "" }, 
                   {"Name": "frequency",
                    "Description": "Frequency of line",
                    "Unit": "" }, 
                   {"Name": "terrain_factor",
                    "Description": "...",
                    "Unit": "" },
                   {"Name": "x_pu",
                    "Description": "Per unit series reactance calculated by PyPSA from x and bus.v_nom.",
                    "Unit": "per unit" },
                   {"Name": "r_pu",
                    "Description": "Per unit series resistance calculated by PyPSA from r and bus.v_nom",
                    "Unit": "per unit" },
                   {"Name": "g_pu",
                    "Description": "Per unit shunt conductivity calculated by PyPSA from g and bus.v_nom",
                    "Unit": "per unit" }, 
                   {"Name": "b_pu",
                    "Description": "Per unit shunt susceptance calculated by PyPSA from b and bus.v_nom",
                    "Unit": "per unit" }, 
                   {"Name": "s_nom_opt",
                    "Description": "Optimised capacity for apparent power.",
                    "Unit": "MVA" }, 
                   {"Name": "geom",
                    "Description": "geometry that depict the real route of the line",
                    "Unit": "" }, 
                   {"Name": "topo",
                    "Description": "topology that depicts a direct connection between both busses",
                    "Unit": "..." }],
"Changes":["..."],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_line_t; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_line_t (
    result_id bigint NOT NULL,
    line_id bigint NOT NULL,
    p0 double precision[],
    q0 double precision[],
    p1 double precision[],
    q1 double precision[]
);


--
-- Name: TABLE ego_grid_pf_hv_result_line_t; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_line_t IS '{
"Name": "Result of lines in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": [" Results of electricity lines considered in hv powerflow calculations"],
"Column": [		   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "line_id",
                    "Description": "unique identifier",
                    "Unit": "" }, 
				   {"Name": "p0",
                    "Description": "active power at bus0 (positive if net generation at bus0)",
                    "Unit": "MW" },
				   {"Name": "q0",
                    "Description": "Reactive power at bus0 (positive if branch is withdrawing power from bus0).",
                    "Unit": "MVar" },	
				   {"Name": "p1",
                    "Description": "active power at bus1 (positive if net generation at bus1)",
                    "Unit": "MW" },
				   {"Name": "q1",
                    "Description": "Reactive power at bus1 (positive if branch is withdrawing power from bus1).",
                    "Unit": "MVar" }],
"Changes":["..."],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_load; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_load (
    result_id bigint NOT NULL,
    load_id bigint NOT NULL,
    bus bigint,
    sign double precision,
    e_annual double precision
);


--
-- Name: TABLE ego_grid_pf_hv_result_load; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_load IS '{
"Name": "Results of load in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Results of loads considered in hv powerflow calculation"],
"Column": [
                   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "load_id",
                    "Description": "unique id",
                    "Unit": "" },                   
                   {"Name": "bus",
                    "Description": "id of associated bus",
                    "Unit": "" },
                   {"Name": "sign",
                    "Description": "power sign",
                    "Unit": "" },
                   {"Name": "e_annual",
                    "Description": "annual electricity consumption",
                    "Unit": "GWh" }],
"Changes":["..."],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_load_t; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_load_t (
    result_id bigint NOT NULL,
    load_id bigint NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p double precision[],
    q double precision[]
);


--
-- Name: TABLE ego_grid_pf_hv_result_load_t; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_load_t IS '{
"Name": "Results of load in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Results of loads considered in hv powerflow calculation"],
"Column": [
                   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "load_id",
                    "Description": "unique id",
                    "Unit": "" },   
				   {"Name": "p_set",
                    "Description": "active power set point",
                    "Unit": "MW" },
                   {"Name": "q_set",
                    "Description": "reactive power set point",
                    "Unit": "MVar" },					
				   {"Name": "p",
                    "Description": "active power at bus (positive if net generation at bus)",
                    "Unit": "MW" },
				   {"Name": "q",
                    "Description": "reactive power (positive if net generation at bus)",
                    "Unit": "MVar" }
					],
"Changes":["..."],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_meta; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_meta (
    result_id bigint NOT NULL,
    scn_name character varying,
    calc_date timestamp without time zone,
    user_name character varying,
    method character varying,
    start_snapshot integer,
    end_snapshot integer,
    snapshots timestamp without time zone[],
    solver character varying,
    settings json,
    safe_results boolean DEFAULT false
);


--
-- Name: TABLE ego_grid_pf_hv_result_meta; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_meta IS '{
"Name": "Results meta data of hv powerflow calculations",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Meta data for results of hv powerflow calculations"],
"Column": [		   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "scn_name",
                    "Description": "Scenario name",
                    "Unit": "" },
                   {"Name": "calc_date",
                    "Description": "Datetime of calculation start",
                    "Unit": "Datetime" },
                   {"Name": "user_name",
                    "Description": "Name of user who uploaded the results",
                    "Unit": "" },
				   {"Name": "method",
                    "Description": "Type of powerflow calculation (pf/lopf/lpf)",
                    "Unit": "" },
				   {"Name": "start_step",
                    "Description": "Start step of calculation range",
                    "Unit": "" },
				   {"Name": "end_step",
                    "Description": "End step of calculation range",
                    "Unit": "" },
				   {"Name": "snapshots",
                    "Description": "PyPSA snapshots",
                    "Unit": "" },
				   {"Name": "solver",
                    "Description": "Name of solver used in calculations",
                    "Unit": "" },
				   {"Name": "settings",
                    "Description": "All other settings used for the calculations",
                    "Unit": ""}
					],
"Changes":["..."],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_storage; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_storage (
    result_id bigint NOT NULL,
    storage_id bigint NOT NULL,
    bus bigint,
    dispatch text,
    control text,
    p_nom double precision,
    p_nom_extendable boolean,
    p_nom_min double precision,
    p_nom_max double precision,
    p_min_pu_fixed double precision,
    p_max_pu_fixed double precision,
    sign double precision,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision,
    soc_initial double precision,
    soc_cyclic boolean DEFAULT false,
    max_hours double precision,
    efficiency_store double precision,
    efficiency_dispatch double precision,
    standing_loss double precision,
    p_nom_opt double precision
);


--
-- Name: TABLE ego_grid_pf_hv_result_storage; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_storage IS '{
"Name": " Result of storage in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["results of storage units considered in hv powerflow calculations"],
"Column": [		   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "storage_id",
                    "Description": "unique id",
                    "Unit": "" },
                   {"Name": "bus",
                    "Description": "id of associated bus",
                    "Unit": "" },
                   {"Name": "dispatch",
                    "Description": "Controllability of active power dispatch, must be flexible or variable",
                    "Unit": "" },
                   {"Name": "control",
                    "Description": "P,Q,V control strategy for PF, must be PQ, PV or Slack",
                    "Unit": "" },
                   {"Name": "p_nom",
                    "Description": "Nominal power",
                    "Unit": "MW" },
                   {"Name": "p_nom_extendable",
                    "Description": "Switch to allow capacity p_nom to be extended",
                    "Unit": "" },
                   {"Name": "p_nom_min",
                    "Description": "If p_nom is extendable in OPF, set its minimum value",
                    "Unit": "MW" },
                   {"Name": "p_nom_max",
                    "Description": "If p_nom is extendable in OPF, set its maximum value (e.g. limited by potential))",
                    "Unit": "MW" },
                   {"Name": "p_min_pu_fixed",
                    "Description": "If control=flexible this gives the minimum output per unit of p_nom for the OPF.",
                    "Unit": "per unit" },
                   {"Name": "p_max_pu_fixed",
                    "Description": "If control=flexible this gives the maximum output per unit of p_nom for the OPF, equivalent to a de-rating factor",
                    "Unit": "per unit" },
                   {"Name": "sign",
                    "Description": "power sign",
                    "Unit": "" },
                   {"Name": "source",
                    "Description": "Prime mover energy carrier",
                    "Unit": "" },
                   {"Name": "marginal_cost",
                    "Description": "Marginal cost of production of 1 MWh",
                    "Unit": "€/MWh" },
                   {"Name": "capital_cost",
                    "Description": "Capital cost of extending p_nom by 1 MW",
                    "Unit": "€/MW" },
                   {"Name": "efficiency",
                    "Description": "Ratio between primary energy and electrical energy",
                    "Unit": "per unit" },
                   {"Name": "soc_initial",
                    "Description": "State of charge before the snapshots in the OPF.",
                    "Unit": "MWh" },
                   {"Name": "soc_cyclic",
                    "Description": "Switch: if True, then state_of_charge_initial is ignored and the initial state of charge is set to the final state of charge for the group of snapshots in the OPF",
                    "Unit": "" },
                   {"Name": "max_hours",
                    "Description": "Maximum state of charge capacity in terms of hours at full output capacity p_nom",
                    "Unit": "hours" },
                   {"Name": "efficiency_store",
                    "Description": "Efficiency of storage on the way into the storage",
                    "Unit": "per unit" },                   
                   {"Name": "efficiency_dispatch",
                    "Description": "Efficiency of storage on the way out of the storage",
                    "Unit": "per unit" },
                   {"Name": "standing_loss",
                    "Description": "Losses per hour to state of charge",
                    "Unit": "per unit" },
				   {"Name": "p_nom_opt",
                    "Description": "Optimised nominal power.",
                    "Unit": "MW" }
                  ],
"Changes":["..."],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_storage_t; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_storage_t (
    result_id bigint NOT NULL,
    storage_id bigint NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[],
    soc_set double precision[],
    inflow double precision[],
    p double precision[],
    q double precision[],
    state_of_charge double precision[],
    spill double precision[]
);


--
-- Name: TABLE ego_grid_pf_hv_result_storage_t; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_storage_t IS '{
"Name": " Result of storage_t in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["results of storage_t units considered in hv powerflow calculations"],
"Column": [		   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "storage_id",
                    "Description": "unique id",
                    "Unit": "" },	
				   {"Name": "p",
                    "Description": "active power at bus (positive if net generation at bus)",
                    "Unit": "MW" },
				   {"Name": "q",
                    "Description": "reactive power (positive if net generation at bus)",
                    "Unit": "MVar" },
				   {"Name": "state_of_charge",
                    "Description": "State of charge as calculated by the OPF.",
                    "Unit": "MWh" },
				   {"Name": "spill",
                    "Description": "Spillage for each snapshot.",
                    "Unit": "MW" }
                  ],
"Changes":["..."],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_transformer; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_transformer (
    result_id bigint NOT NULL,
    trafo_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric,
    r numeric,
    g numeric,
    b numeric,
    s_nom numeric,
    s_nom_extendable boolean,
    s_nom_min double precision,
    s_nom_max double precision,
    tap_ratio double precision,
    phase_shift double precision,
    capital_cost double precision,
    x_pu numeric,
    r_pu numeric,
    g_pu numeric,
    b_pu numeric,
    s_nom_opt numeric,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: TABLE ego_grid_pf_hv_result_transformer; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_transformer IS '{
"Name": "Transformer in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Transformer converts from one AC voltage level to another"],
"Column": [		   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "trafo_id",
                    "Description": "unique id",
                    "Unit": "" },
                   {"Name": "bus0",
                    "Description": "Name of first bus to which branch is attached",
                    "Unit": "" },
                   {"Name": "bus1",
                    "Description": "Name of second bus to which branch is attached",
                    "Unit": "" },
                   {"Name": "x",
                    "Description": "Series reactance",
                    "Unit": "Ohm" },
                   {"Name": "r",
                    "Description": "Series resistance",
                    "Unit": "Ohm" },
                   {"Name": "g",
                    "Description": "Shunt conductivity",
                    "Unit": "Siemens" }, 
                   {"Name": "b",
                    "Description": "Shunt susceptance",
                    "Unit": "Siemens" }, 
                   {"Name": "s_nom",
                    "Description": "Limit of apparent power which can pass through branch",
                    "Unit": "MVA" }, 
                   {"Name": "s_nom_extendable",
                    "Description": "Switch to allow capacity s_nom to be extended",
                    "Unit": "" }, 
                   {"Name": "s_nom_min",
                    "Description": "If s_nom is extendable, set its minimum value",
                    "Unit": "MVA" }, 
                   {"Name": "s_nom_max",
                    "Description": "If s_nom is extendable in OPF, set its maximum value",
                    "Unit": "MVA" }, 
                   {"Name": "tap_ratio",
                    "Description": "Ratio of per unit voltages at each bus",
                    "Unit": "" },
                   {"Name": "phase_shift",
                    "Description": "Voltage phase angle shift",
                    "Unit": "degrees" },
                   {"Name": "capital_cost",
                    "Description": "Capital cost of extending s_nom by 1 MVA",
                    "Unit": "€/MVA" },					
                   {"Name": "x_pu",
                    "Description": "Per unit series reactance calculated by PyPSA from x and bus.v_nom.",
                    "Unit": "per unit" },
                   {"Name": "r_pu",
                    "Description": "Per unit series resistance calculated by PyPSA from r and bus.v_nom",
                    "Unit": "per unit" },
                   {"Name": "g_pu",
                    "Description": "Per unit shunt conductivity calculated by PyPSA from g and bus.v_nom",
                    "Unit": "per unit" }, 
                   {"Name": "b_pu",
                    "Description": "Per unit shunt susceptance calculated by PyPSA from b and bus.v_nom",
                    "Unit": "per unit" }, 
                   {"Name": "s_nom_opt",
                    "Description": "Optimised capacity for apparent power.",
                    "Unit": "MVA" },
                   {"Name": "geom",
                    "Description": "geometry",
                    "Unit": "" },
                   {"Name": "topo",
                    "Description": "topology",
                    "Unit": "" }],
"Changes":["..."],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_result_transformer_t; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_result_transformer_t (
    result_id bigint NOT NULL,
    trafo_id bigint NOT NULL,
    p0 double precision[],
    q0 double precision[],
    p1 double precision[],
    q1 double precision[]
);


--
-- Name: TABLE ego_grid_pf_hv_result_transformer_t; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_result_transformer_t IS '{
"Name": "Transformer in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Transformer converts from one AC voltage level to another"],
"Column": [		   {"Name": "result_id",
                    "Description": "Result ID",
                    "Unit": "" },
                   {"Name": "trafo_id",
                    "Description": "unique id",
                    "Unit": "" },	
                   {"Name": "p0",
                    "Description": "active power at bus0 (positive if net generation at bus0)",
                    "Unit": "MW" },
				   {"Name": "q0",
                    "Description": "Reactive power at bus0 (positive if branch is withdrawing power from bus0).",
                    "Unit": "MVar" },	
				   {"Name": "p1",
                    "Description": "active power at bus1 (positive if net generation at bus1)",
                    "Unit": "MW" },
				   {"Name": "q1",
                    "Description": "Reactive power at bus1 (positive if branch is withdrawing power from bus1).",
                    "Unit": "MVar" }],
"Changes":["..."],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_scenario_settings; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_scenario_settings (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    bus character varying,
    bus_v_mag_set character varying,
    generator character varying,
    generator_pq_set character varying,
    line character varying,
    load character varying,
    load_pq_set character varying,
    storage character varying,
    storage_pq_set character varying,
    temp_resolution character varying,
    transformer character varying
);


--
-- Name: TABLE ego_grid_pf_hv_scenario_settings; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_scenario_settings IS '{
"Name": "Scenario settings hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "2016",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Overview of scenarios for the hv powerflow"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "bus",
                    "Description": "scenario for bus dataset",
                    "Unit": "" },                   
                   {"Name": "bus_v_mag_set",
                    "Description": "scenario for bus dataset",
                    "Unit": "" },
                   {"Name": "generator",
                    "Description": "scenario for generator dataset",
                    "Unit": "" },
                   {"Name": "generator_pq_set",
                    "Description": "scenario for generator dataset",
                    "Unit": "" },
                   {"Name": "line",
                    "Description": "scenario for line dataset",
                    "Unit": "" },
                   {"Name": "load",
                    "Description": "scenario for load dataset",
                    "Unit": "" },
                   {"Name": "load_pq_set",
                    "Description": "scenario for load dataset",
                    "Unit": "" },
                   {"Name": "storage",
                    "Description": "scenario for storage dataset",
                    "Unit": "" },
                   {"Name": "storage_pq_set",
                    "Description": "scenario for storage dataset",
                    "Unit": "" },
                   {"Name": "temp_resolution",
                    "Description": "scenario for temp_resolution",
                    "Unit": "" },
                   {"Name": "transformer",
                    "Description": "scenario for transformer",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 

                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_slack_gen_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_grid_pf_hv_slack_gen_seq
    START WITH 100000
    INCREMENT BY 1
    MINVALUE 100000
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_grid_pf_hv_source; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_source (
    source_id bigint NOT NULL,
    name text,
    co2_emissions double precision,
    commentary text
);


--
-- Name: TABLE ego_grid_pf_hv_source; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_source IS '{
"Name": "Sources hv powerflow ",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Different generation types/sources considered in hv powerflow"],
"Column": [
                   {"Name": "source_id",
                    "Description": "unique source id",
                    "Unit": "" },
                   {"Name": "name",
                    "Description": "source name",
                    "Unit": "" },                   
                   {"Name": "co2_emissions",
                    "Description": "technology specific CO2 emissions ",
                    "Unit": "tonnes/MWh" },
                   {"Name": "commentary",
                    "Description": "...",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." },

                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" } 
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_storage; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_storage (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    storage_id bigint NOT NULL,
    bus bigint,
    dispatch text DEFAULT 'flexible'::text,
    control text DEFAULT 'PQ'::text,
    p_nom double precision DEFAULT 0,
    p_nom_extendable boolean DEFAULT false,
    p_nom_min double precision DEFAULT 0,
    p_nom_max double precision,
    p_min_pu_fixed double precision DEFAULT 0,
    p_max_pu_fixed double precision DEFAULT 1,
    sign double precision DEFAULT 1,
    source bigint,
    marginal_cost double precision,
    capital_cost double precision,
    efficiency double precision,
    soc_initial double precision,
    soc_cyclic boolean DEFAULT false,
    max_hours double precision,
    efficiency_store double precision,
    efficiency_dispatch double precision,
    standing_loss double precision
);


--
-- Name: TABLE ego_grid_pf_hv_storage; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_storage IS '{
"Name": "storage in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["storage units considered in hv powerflow calculations"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "storage_id",
                    "Description": "unique id",
                    "Unit": "" },
                   {"Name": "bus",
                    "Description": "id of associated bus",
                    "Unit": "" },
                   {"Name": "dispatch",
                    "Description": "Controllability of active power dispatch, must be flexible or variable",
                    "Unit": "" },
                   {"Name": "control",
                    "Description": "P,Q,V control strategy for PF, must be PQ, PV or Slack",
                    "Unit": "" },
                   {"Name": "p_nom",
                    "Description": "Nominal power",
                    "Unit": "MW" },
                   {"Name": "p_nom_extendable",
                    "Description": "Switch to allow capacity p_nom to be extended",
                    "Unit": "" },
                   {"Name": "p_nom_min",
                    "Description": "If p_nom is extendable in OPF, set its minimum value",
                    "Unit": "MW" },
                   {"Name": "p_nom_max",
                    "Description": "If p_nom is extendable in OPF, set its maximum value (e.g. limited by potential))",
                    "Unit": "MW" },
                   {"Name": "p_min_pu_fixed",
                    "Description": "If control=flexible this gives the minimum output per unit of p_nom for the OPF.",
                    "Unit": "per unit" },
                   {"Name": "p_max_pu_fixed",
                    "Description": "If control=flexible this gives the maximum output per unit of p_nom for the OPF, equivalent to a de-rating factor",
                    "Unit": "per unit" },
                   {"Name": "sign",
                    "Description": "power sign",
                    "Unit": "" },
                   {"Name": "source",
                    "Description": "Prime mover energy carrier",
                    "Unit": "" },
                   {"Name": "marginal_cost",
                    "Description": "Marginal cost of production of 1 MWh",
                    "Unit": "€/MWh" },
                   {"Name": "capital_cost",
                    "Description": "Capital cost of extending p_nom by 1 MW",
                    "Unit": "€/MW" },
                   {"Name": "efficiency",
                    "Description": "Ratio between primary energy and electrical energy",
                    "Unit": "per unit" },
                   {"Name": "soc_initial",
                    "Description": "State of charge before the snapshots in the OPF.",
                    "Unit": "MWh" },
                   {"Name": "soc_cyclic",
                    "Description": "Switch: if True, then state_of_charge_initial is ignored and the initial state of charge is set to the final state of charge for the group of snapshots in the OPF",
                    "Unit": "" },
                   {"Name": "max_hours",
                    "Description": "Maximum state of charge capacity in terms of hours at full output capacity p_nom",
                    "Unit": "hours" },
                   {"Name": "efficiency_store",
                    "Description": "Efficiency of storage on the way into the storage",
                    "Unit": "per unit" },                   
                   {"Name": "efficiency_dispatch",
                    "Description": "Efficiency of storage on the way out of the storage",
                    "Unit": "per unit" },
                   {"Name": "standing_loss",
                    "Description": "Losses per hour to state of charge",
                    "Unit": "per unit" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "Completed json-string" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_storage_pq_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_storage_pq_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    storage_id bigint NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[],
    soc_set double precision[],
    inflow double precision[]
);


--
-- Name: TABLE ego_grid_pf_hv_storage_pq_set; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_storage_pq_set IS '{
"Name": "Storage time series hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Times series for storage units considered in hv powerflow"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "storage_id",
                    "Description": "unique storage id",
                    "Unit": "" },
                   {"Name": "temp_id",
                    "Description": "id for temporal resolution",
                    "Unit": "" },
                   {"Name": "p_set",
                    "Description": "active power set point",
                    "Unit": "MW" },
                   {"Name": "q_set",
                    "Description": "reactive power set point",
                    "Unit": "MVar" },
                   {"Name": "p_min_pu",
                    "Description": "If control=variable this gives the minimum output for each snapshot per unit of p_nom for the OPF",
                    "Unit": "per unit" },
                   {"Name": "p_max_pu",
                    "Description": "If control=variable this gives the maximum output for each snapshot per unit of p_nom for the OPF",
                    "Unit": "per unit" },
                   {"Name": "soc_set",
                    "Description": "State of charge set points for snapshots in the OPF",
                    "Unit": "MWh" },
                   {"Name": "inflow",
                    "Description": "Inflow to the state of charge, e.g. due to river inflow in hydro reservoir",
                    "Unit": "MW" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                    {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_temp_resolution; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_temp_resolution (
    temp_id bigint NOT NULL,
    timesteps bigint NOT NULL,
    resolution text,
    start_time timestamp without time zone
);


--
-- Name: TABLE ego_grid_pf_hv_temp_resolution; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_temp_resolution IS '{
"Name": "temporal resolution hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Temporal resolution of hv powerflow"],
"Column": [
                   {"Name": "temp_id",
                    "Description": "unique id",
                    "Unit": "" },
                   {"Name": "timesteps",
                    "Description": "timestep",
                    "Unit": "" },
                   {"Name": "resolution",
                    "Description": "temporal resolution",
                    "Unit": "" },
                   {"Name": "start_time",
                    "Description": "start time with style: YYYY-MM-DD HH:MM:SS",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." },
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_hv_transformer; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_hv_transformer (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    trafo_id bigint NOT NULL,
    bus0 bigint,
    bus1 bigint,
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom double precision DEFAULT 0,
    s_nom_extendable boolean DEFAULT false,
    s_nom_min double precision DEFAULT 0,
    s_nom_max double precision,
    tap_ratio double precision,
    phase_shift double precision,
    capital_cost double precision DEFAULT 0,
    geom public.geometry(MultiLineString,4326),
    topo public.geometry(LineString,4326)
);


--
-- Name: TABLE ego_grid_pf_hv_transformer; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_grid_pf_hv_transformer IS '{
"Name": "Transformer in hv powerflow",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "ego_dp_powerflow_hv_setup.sql",
"Spatial resolution": ["Germany"],
"Description": ["Transformer converts from one AC voltage level to another"],
"Column": [
                   {"Name": "scn_name",
                    "Description": "scenario name",
                    "Unit": "" },
                   {"Name": "trafo_id",
                    "Description": "unique id",
                    "Unit": "" },
                   {"Name": "bus0",
                    "Description": "Name of first bus to which branch is attached",
                    "Unit": "" },
                   {"Name": "bus1",
                    "Description": "Name of second bus to which branch is attached",
                    "Unit": "" },
                   {"Name": "x",
                    "Description": "Series reactance",
                    "Unit": "Ohm" },
                   {"Name": "r",
                    "Description": "Series resistance",
                    "Unit": "Ohm" },
                   {"Name": "g",
                    "Description": "Shunt conductivity",
                    "Unit": "Siemens" }, 
                   {"Name": "b",
                    "Description": "Shunt susceptance",
                    "Unit": "Siemens" }, 
                   {"Name": "s_nom",
                    "Description": "Limit of apparent power which can pass through branch",
                    "Unit": "MVA" }, 
                   {"Name": "s_nom_extendable",
                    "Description": "Switch to allow capacity s_nom to be extended",
                    "Unit": "" }, 
                   {"Name": "s_nom_min",
                    "Description": "If s_nom is extendable, set its minimum value",
                    "Unit": "MVA" }, 
                   {"Name": "s_nom_max",
                    "Description": "If s_nom is extendable in OPF, set its maximum value",
                    "Unit": "MVA" }, 
                   {"Name": "tap_ratio",
                    "Description": "Ratio of per unit voltages at each bus",
                    "Unit": "" },
                   {"Name": "phase_shift",
                    "Description": "Voltage phase angle shift",
                    "Unit": "degrees" },
                   {"Name": "capital_cost",
                    "Description": "Capital cost of extending s_nom by 1 MVA",
                    "Unit": "€/MVA" },
                   {"Name": "geom",
                    "Description": "geometry",
                    "Unit": "" },
                   {"Name": "topo",
                    "Description": "topology",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 

                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_grid_pf_mv_bus; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_bus (
    bus_id character varying(25) NOT NULL,
    v_nom double precision,
    v_mag_pu_min double precision DEFAULT 0,
    v_mag_pu_max double precision,
    geom public.geometry(Point,4326),
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    grid_id integer
);


--
-- Name: ego_grid_pf_mv_bus_v_mag_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_bus_v_mag_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    bus_id character varying(25) NOT NULL,
    temp_id integer NOT NULL,
    v_mag_pu_set double precision[],
    grid_id integer
);


--
-- Name: ego_grid_pf_mv_generator; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_generator (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    generator_id character varying(25) NOT NULL,
    bus character varying(25),
    control text DEFAULT 'PQ'::text,
    p_nom double precision DEFAULT 0,
    p_min_pu_fixed double precision DEFAULT 0,
    p_max_pu_fixed double precision DEFAULT 1,
    sign double precision DEFAULT 1,
    grid_id integer
);


--
-- Name: ego_grid_pf_mv_generator_pq_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_generator_pq_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    generator_id character varying(25) NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[],
    p_min_pu double precision[],
    p_max_pu double precision[],
    grid_id integer
);


--
-- Name: ego_grid_pf_mv_line; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_line (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    line_id character varying(25) NOT NULL,
    bus0 character varying(25),
    bus1 character varying(25),
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom numeric DEFAULT 0,
    length double precision,
    cables integer,
    geom public.geometry(LineString,4326),
    grid_id integer
);


--
-- Name: ego_grid_pf_mv_load; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_load (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    load_id character varying(25) NOT NULL,
    bus character varying(25),
    sign double precision DEFAULT '-1'::integer,
    grid_id integer
);


--
-- Name: ego_grid_pf_mv_load_pq_set; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_load_pq_set (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    load_id character varying(25) NOT NULL,
    temp_id integer NOT NULL,
    p_set double precision[],
    q_set double precision[],
    grid_id integer
);


--
-- Name: ego_grid_pf_mv_res_bus; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_res_bus (
    bus_id character varying(25) NOT NULL,
    v_mag_pu double precision[]
);


--
-- Name: ego_grid_pf_mv_res_line; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_res_line (
    line_id character varying(25) NOT NULL,
    p0 double precision[],
    p1 double precision[],
    q0 double precision[],
    q1 double precision[]
);


--
-- Name: ego_grid_pf_mv_res_transformer; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_res_transformer (
    trafo_id character varying(25) NOT NULL,
    p0 double precision[],
    p1 double precision[],
    q0 double precision[],
    q1 double precision[]
);


--
-- Name: ego_grid_pf_mv_scenario_settings; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_scenario_settings (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    bus character varying,
    bus_v_mag_set character varying,
    generator character varying,
    generator_pq_set character varying,
    line character varying,
    load character varying,
    load_pq_set character varying,
    storage character varying,
    storage_pq_set character varying,
    temp_resolution character varying,
    transformer character varying
);


--
-- Name: ego_grid_pf_mv_source; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_source (
    source_id character varying(25) NOT NULL,
    name text,
    co2_emissions double precision,
    commentary text
);


--
-- Name: ego_grid_pf_mv_temp_resolution; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_temp_resolution (
    temp_id bigint NOT NULL,
    timesteps bigint NOT NULL,
    resolution text,
    start_time timestamp without time zone,
    grid_id integer
);


--
-- Name: ego_grid_pf_mv_transformer; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_grid_pf_mv_transformer (
    scn_name character varying DEFAULT 'Status Quo'::character varying NOT NULL,
    trafo_id character varying(25) NOT NULL,
    bus0 character varying(25),
    bus1 character varying(25),
    x numeric DEFAULT 0,
    r numeric DEFAULT 0,
    g numeric DEFAULT 0,
    b numeric DEFAULT 0,
    s_nom double precision DEFAULT 0,
    tap_ratio double precision,
    geom public.geometry(Point,4326),
    grid_id integer
);


--
-- Name: ego_hvmv_substation; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_hvmv_substation (
    version text NOT NULL,
    subst_id smallint NOT NULL,
    subst_name text,
    ags_0 text,
    voltage text,
    power_type text,
    substation text,
    osm_id text,
    osm_www text,
    frequency text,
    ref text,
    operator text,
    dbahn text,
    status smallint,
    otg_id bigint,
    lat double precision,
    lon double precision,
    point public.geometry(Point,4326),
    polygon public.geometry,
    geom public.geometry(Point,3035)
);


--
-- Name: TABLE ego_hvmv_substation; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_hvmv_substation IS '{
	"title": "eGo HVMV Substation",
	"description": "Abstracted substations between high- and medium voltage (transition points)",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "OSM","description": "OSM","url": "https://www.openstreetmap.de"},
		{"name": "eGoDataProcessing","description": "","url": "https://github.com/openego/data_processing"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": ""} ],
	"license": [
		{"id": "tba",
		"name": "tba",
		"version": "tba",
		"url": "tba",
		"instruction": "tba"} ],
	"contributors": [
		{"name": "Lukas Wienholt", "email": "lukas.wienholt@next-energy.de",
		"date":  "20.10.2016", "comment": "create substation" },
		{"name": "Ludwig Hülk", "email": "ludwig.huelk@rl-institut.de",
		"date": "15.01.2017", "comment": "updated metadata"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", "description": "version id", "unit": "" },
				{"name": "subst_id", "description": "unique identifier", "unit": "" },
				{"name": "subst_name", "description": "name of substation", "unit": "" },
				{"name": "ags_0", "description": "Geimeindeschlüssel, municipality key", "unit": "" },
				{"name": "voltage", "description": "(all) voltage levels contained in substation", "unit": "" },
				{"name": "power_type", "description": "value of osm key power", "unit": "" },
				{"name": "substation", "description": "value of osm key substation", "unit": "" },
				{"name": "osm_id", "description": "osm id of substation, begins with prefix n(node) or w(way)", "unit": "" },
				{"name": "osm_www", "description": "hyperlink to osm source", "unit": "" },
				{"name": "frequency", "description": "frequency of substation", "unit": "" },
				{"name": "ref", "description": "reference tag of substation", "unit": "" },
				{"name": "operator", "description": "operator(s) of substation", "unit": "" },
				{"name": "dbahn", "description": "states if substation is connected to railway grid and if yes the indicator", "unit": "" },
				{"name": "status", "description": "states the osm source of substation (1=way, 2=way intersected by 110kV-line, 3=node)", "unit": "" },
				{"name": "otg_id", "description": "states the id of respective bus in osmtgmod", "unit": "" },
				{"name": "lat", "description": "latitude of substation", "unit": "" },
				{"name": "lon", "description": "longitude of substation", "unit": "" },
				{"name": "point", "description": "point geometry of substation", "unit": "" },
				{"name": "polygon", "description": "original geometry of substation", "unit": "" },
				{"name": "geom", "description": "geometry", "unit": "" } ]},
		"meta_version": "1.0"}] }';


--
-- Name: ego_landuse_industry; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_landuse_industry (
    gid integer NOT NULL,
    osm_id integer,
    name text,
    sector integer,
    area_ha double precision,
    tags public.hstore,
    vg250 text,
    geom public.geometry(MultiPolygon,3035),
    geom_centroid public.geometry(Point,3035),
    geom_surfacepoint public.geometry(Point,3035),
    geom_centre public.geometry(Point,3035),
    nuts character varying(5),
    consumption numeric,
    peak_load numeric
);


--
-- Name: TABLE ego_landuse_industry; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_landuse_industry IS '{
"Name": "Industrial landuse area",
"Source": [{
                  "Name": "open_eGo data_processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "October 2016",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Collection of osm polygons with a tag landuse=industrial"],
"Column": [
                   {"Name": "gid",
                    "Description": "unique id",
                    "Unit": "" },
                   {"Name": "osm_id",
                    "Description": "osm-id",
                    "Unit": "" },
                   {"Name": "name",
                    "Description": "name",
                    "Unit": "" },
                   {"Name": "sector",
                    "Description": "Integer to identify the landuse sector",
                    "Unit": "" },
                   {"Name": "area_ha",
                    "Description": "landuse area",
                    "Unit": "ha" },
                   {"Name": "tags",
                    "Description": "osm-tags",
                    "Unit": "" },
                   {"Name": "vg250",
                    "Description": "check if landuse are is inside the german vg250-polygon",
                    "Unit": "" },
                   {"Name": "geom",
                    "Description": "geometry polygon",
                    "Unit": "" },
                   {"Name": "geom_centroid",
                    "Description": "centroid of polygon",
                    "Unit": "" },
                   {"Name": "geom_surfacepoint",
                    "Description": "Surfacepoint of polygon",
                    "Unit": "" },
                   {"Name": "geom_centre",
                    "Description": "centre of polygon",
                    "Unit": "" },
                   {"Name": "nuts",
                    "Description": "nuts code for corresponding administrative district",
                    "Unit": "" },
                   {"Name": "consumption",
                    "Description": "electricity consumption associated with polygon",
                    "Unit": "GWh" },
                   {"Name": "peak_load",
                    "Description": "peak load associated with polygon",
                    "Unit": "MW" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "25.10.2016",
                    "Comment": "Completed json-string" }
                  ],
"ToDo": ["Add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_lattice_360m_lv; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_lattice_360m_lv (
    id integer NOT NULL,
    la_id integer,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_lattice_360m_lv_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_lattice_360m_lv_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_lattice_360m_lv_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_lattice_360m_lv_id_seq OWNED BY model_draft.ego_lattice_360m_lv.id;


--
-- Name: ego_lattice_500m; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_lattice_500m (
    id integer NOT NULL,
    subst_id integer,
    area_type text,
    geom_box public.geometry(Polygon,3035),
    geom public.geometry(Point,3035)
);


--
-- Name: TABLE ego_lattice_500m; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_lattice_500m IS '{
	"title": "eGoDP - lattice on bbox of Germany with 500m",
	"description": "lattice (regular point grid)",
	"language": [ "eng" ],
	"reference_date": "",
	"sources": [
		{"name": "political_boundary.bkg_vg250_1_sta_union_mview","description": "","url": ""} ],
	"spatial": [
		{"extend": "Germany",
		"resolution": "500m"} ],
	"license": [
		{"id": "tba",
		"name": "tba",
		"version": "tba",
		"url": "tba",
		"instruction": "tba"} ],
	"contributors": [
		{"name": "Ludwig HÃ¼lk",	"email": "ludwig.huelk@rl-institut.de",
		"date": "01.10.2016", "comment": "create table"},
		{"name": "Ludwig HÃ¼lk", "email": "ludwig.huelk@rl-institut.de",
		"date": "12.10.2016", "comment": "create metadata"},
		{"name": "Ludwig HÃ¼lk", "email": "ludwig.huelk@rl-institut.de",
		"date": "25.12.2016", "comment": "update to v0.2"},
		{"name": "Ludwig HÃ¼lk", "email": "ludwig.huelk@rl-institut.de",
		"date": "10.01.2016", "comment": "update centroid"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "id", "description": "unique identifier", "unit": "" },
				{"name": "subst_id", "description": "hvmv-substation", "unit": "" },
				{"name": "area_type", "description": "type of area (wpa, la, x)", "unit": "" },
				{"name": "geom_box", "description": "Geometry polygon", "unit": "" },
				{"name": "geom", "description": "Geometry point", "unit": "" } ]},
		"meta_version": "1.0"}] }';


--
-- Name: ego_lattice_500m_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_lattice_500m_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_lattice_500m_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_lattice_500m_id_seq OWNED BY model_draft.ego_lattice_500m.id;


--
-- Name: ego_lattice_50m; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_lattice_50m (
    id integer NOT NULL,
    subst_id integer,
    area_type text,
    geom_box public.geometry(Polygon,3035),
    geom public.geometry(Point,3035)
);


--
-- Name: TABLE ego_lattice_50m; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_lattice_50m IS '{
	"title": "eGoDP - lattice on loadarea with 50m",
	"description": "lattice (regular point grid)",
	"language": [ "eng" ],
	"reference_date": "",
	"sources": [
		{"name": "political_boundary.bkg_vg250_1_sta_union_mview","description": "","url": ""} ],
	"spatial": [
		{"extend": "Germany",
		"resolution": "50m"} ],
	"license": [
		{"id": "tba",
		"name": "tba",
		"version": "tba",
		"url": "tba",
		"instruction": "tba"} ],
	"contributors": [
		{"name": "Ludwig HÃ¼lk",	"email": "ludwig.huelk@rl-institut.de",
		"date": "01.10.2016", "comment": "create table"},
		{"name": "Ludwig HÃ¼lk", "email": "ludwig.huelk@rl-institut.de",
		"date": "12.10.2016", "comment": "create metadata"},
		{"name": "Ludwig HÃ¼lk", "email": "ludwig.huelk@rl-institut.de",
		"date": "25.12.2016", "comment": "update to v0.2"},
		{"name": "Ludwig HÃ¼lk", "email": "ludwig.huelk@rl-institut.de",
		"date": "10.01.2016", "comment": "update centroid"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "id", "description": "unique identifier", "unit": "" },
				{"name": "subst_id", "description": "hvmv-substation", "unit": "" },
				{"name": "area_type", "description": "type of area (wpa, la, x)", "unit": "" },
				{"name": "geom_box", "description": "Geometry polygon", "unit": "" },
				{"name": "geom", "description": "Geometry point", "unit": "" } ]},
		"meta_version": "1.0"}] }';


--
-- Name: ego_lattice_50m_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_lattice_50m_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_lattice_50m_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_lattice_50m_id_seq OWNED BY model_draft.ego_lattice_50m.id;


--
-- Name: ego_loadarea; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_loadarea (
    version text NOT NULL,
    id integer NOT NULL,
    subst_id integer,
    area_ha numeric,
    nuts character varying(5),
    rs_0 character varying(12),
    ags_0 character varying(12),
    otg_id integer,
    un_id integer,
    zensus_sum integer,
    zensus_count integer,
    zensus_density numeric,
    ioer_sum numeric,
    ioer_count integer,
    ioer_density numeric,
    sector_area_residential numeric,
    sector_area_retail numeric,
    sector_area_industrial numeric,
    sector_area_agricultural numeric,
    sector_area_sum numeric,
    sector_share_residential numeric,
    sector_share_retail numeric,
    sector_share_industrial numeric,
    sector_share_agricultural numeric,
    sector_share_sum numeric,
    sector_count_residential integer,
    sector_count_retail integer,
    sector_count_industrial integer,
    sector_count_agricultural integer,
    sector_count_sum integer,
    sector_consumption_residential numeric,
    sector_consumption_retail numeric,
    sector_consumption_industrial numeric,
    sector_consumption_agricultural numeric,
    sector_consumption_sum numeric,
    geom_centroid public.geometry(Point,3035),
    geom_surfacepoint public.geometry(Point,3035),
    geom_centre public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_loadarea; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_loadarea IS '{
	"title": "eGo Load Area",
	"description": "Load Area with electrical consumption",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "OSM","description": "OSM","url": "https://www.openstreetmap.de"},
		{"name": "BKG vg250","description": "borders","url": ""},
		{"name": "Statistisches Bundesamt (Destatis)","description": "Population raster","url": "https://www.destatis.de/DE/Methoden/Zensus_/Zensus.html"},
		{"name": "eGoDataProcessing","description": "","url": "https://github.com/openego/data_processing"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": ""} ],
	"license": [
		{"id": "tba",
		"name": "tba",
		"version": "tba",
		"url": "tba",
		"instruction": "tba"} ],
	"contributors": [
		{"name": "Ludwig Hülk", "email": "ludwig.huelk@rl-institut.de",
		"date":  "02.10.2016", "comment": "create loadareas" },
		{"name": "Ilka Cussmann", "email": "ilka.cussmann@hs-flensburg.de",
		"date":  "25.10.2016", "comment": "create metadata" },
		{"name": "Ludwig Hülk", "email": "ludwig.huelk@rl-institut.de",
		"date": "15.01.2017", "comment": "updated metadata"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", 	"description": "version id", "unit": "" },
				{"name": "id", 		"description": "unique identifier", "unit": "" },
				{"name": "subst_id", 	"description": "substation id", "unit": "" },
				{"name": "area_ha", 	"description": "area in hectar", "unit": "ha" },
				{"name": "nuts", 	"description": "nuts id", "unit": "" },
				{"name": "rs_0", 	"description": "Geimeindeschlüssel, municipality key", "unit": "" },
				{"name": "ags_0", 	"description": "Geimeindeschlüssel, municipality key", "unit": "" },
				{"name": "otg_id", 	"description": "states the id of respective bus in osmtgmod", "unit": "" },
				{"name": "zensus_sum", 		"description": "population", "unit": "" },
				{"name": "zensus_count", 	"description": "number of population rasters", "unit": "" },
				{"name": "zensus_density", 	"description": "average population per raster (zensus_sum/zensus_count)", "unit": "" },
				{"name": "sector_area_residential", 	"description": "aggregated residential area", "unit": "ha" },
				{"name": "sector_area_retail", 		"description": "aggregated retail area", "unit": "ha" },
				{"name": "sector_area_industrial", 	"description": "aggregated industrial area", "unit": "ha" },
				{"name": "sector_area_agricultural", 	"description": "aggregated agricultural area", "unit": "ha" },
				{"name": "sector_area_sum", 		"description": "aggregated sector area", "unit": "ha" },
				{"name": "sector_share_residential", 	"description": "percentage of residential area per load area", "unit":"" },
				{"name": "sector_share_retail", 	"description": "percentage of retail area per load area", "unit": ""},
				{"name": "sector_share_industrial", 	"description": "percentage of industrial area per load area", "unit": ""},
				{"name": "sector_share_agricultural", 	"description": "percentage of agricultural area per load area", "unit": "" },
				{"name": "sector_share_sum", 		"description": "percentage of sector area per load area", "unit": "" },
				{"name": "sector_count_residential", 	"description": "number of residential areas per load area", "unit": "" },
				{"name": "sector_count_retail", 	"description": "number of retail areas per load area", "unit": "" },
				{"name": "sector_count_industrial", 	"description": "number of industrial areas per load area", "unit": "" },
				{"name": "sector_count_agricultural", 	"description": "number of agricultural areas per load area", "unit": "" },
				{"name": "sector_count_sum", 		"description": "number of sector areas per load area", "unit": "" },
				{"name": "sector_consumption_residential", 	"description": "electricity consumption of residential sector", "unit": "GWh" },
				{"name": "sector_consumption_retail", 		"description": "electricity consumption of retail sector", "unit": "GWh" },
				{"name": "sector_consumption_industrial", 	"description": "electricity consumption of industrial sector", "unit": "GWh" },
				{"name": "sector_consumption_agricultural", 	"description": "electricity consumption of agricultural sector", "unit": "GWh" },
				{"name": "sector_consumption_sum", 		"description": "", "unit": "" },
				{"name": "geom_centroid", 	"description": "centroid (can be outside the polygon)", "unit": "" },
				{"name": "geom_surfacepoint", 	"description": "point on surface", "unit": "" },
				{"name": "geom_centre", 	"description": "centroid and point on surface when centroid outside the polygon", "unit": "" },
				{"name": "geom", 		"description": "geometry", "unit": "" } ]},
		"meta_version": "1.0"}] }';


--
-- Name: ego_mv_griddistrict; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_mv_griddistrict (
    version text NOT NULL,
    subst_id integer NOT NULL,
    subst_sum text,
    area_ha numeric,
    geom_type text,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_mv_griddistrict; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_mv_griddistrict IS '{
	"title": "eGo MV Grid Districts",
	"description": "Area associated with each transition point",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "BKG vg250","description": "borders","url": ""},
		{"name": "OSM","description": "OSM","url": "https://www.openstreetmap.de"},
		{"name": "eGoDataProcessing","description": "","url": "https://github.com/openego/data_processing"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": ""} ],
	"license": [
		{"id": "tba",
		"name": "tba",
		"version": "tba",
		"url": "tba",
		"instruction": "tba"} ],
	"contributors": [
		{"name": "Ludwig Hülk", "email": "ludwig.huelk@rl-institut.de",
		"date": "02.09.2016", "comment": "create table"},
		{"name": "Ludwig Hülk", "email": "ludwig.huelk@rl-institut.de",
		"date": "15.01.2017", "comment": "updated metadata"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", "description": "version id", "unit": "" },
				{"name": "subst_id", "description": "unique identifier", "unit": "" },
				{"name": "subst_sum", "description": "number of substation per MV griddistrict", "unit": "" },
				{"name": "area_ha", "description": "area in hectar", "unit": "ha" },
				{"name": "geom_type", "description": "polygon type (polygon, multipolygon)", "unit": "" },
				{"name": "geom", "description": "geometry", "unit": "" } ]},
		"meta_version": "1.0"}] }';


--
-- Name: ego_mv_griddistrict_subst_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_mv_griddistrict_subst_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_mv_griddistrict_subst_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_mv_griddistrict_subst_id_seq OWNED BY model_draft.ego_mv_griddistrict.subst_id;


--
-- Name: ego_osm_agriculture_per_mvgd; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_agriculture_per_mvgd (
    id integer NOT NULL,
    subst_id integer,
    area_ha numeric,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_osm_agriculture_per_mvgd_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_agriculture_per_mvgd_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_agriculture_per_mvgd_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_agriculture_per_mvgd_id_seq OWNED BY model_draft.ego_osm_agriculture_per_mvgd.id;


--
-- Name: ego_osm_deu_street_streetcrossing; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_deu_street_streetcrossing (
    geom public.geometry,
    id integer NOT NULL
);


--
-- Name: ego_osm_deu_street_streetcrossing_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_deu_street_streetcrossing_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_deu_street_streetcrossing_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_deu_street_streetcrossing_id_seq OWNED BY model_draft.ego_osm_deu_street_streetcrossing.id;


--
-- Name: ego_osm_sector_per_griddistrict_1_residential; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_sector_per_griddistrict_1_residential (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_osm_sector_per_griddistrict_1_residential_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_sector_per_griddistrict_1_residential_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_sector_per_griddistrict_1_residential_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_sector_per_griddistrict_1_residential_id_seq OWNED BY model_draft.ego_osm_sector_per_griddistrict_1_residential.id;


--
-- Name: ego_osm_sector_per_griddistrict_2_retail; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_sector_per_griddistrict_2_retail (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_osm_sector_per_griddistrict_2_retail_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_sector_per_griddistrict_2_retail_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_sector_per_griddistrict_2_retail_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_sector_per_griddistrict_2_retail_id_seq OWNED BY model_draft.ego_osm_sector_per_griddistrict_2_retail.id;


--
-- Name: ego_osm_sector_per_griddistrict_3_industrial; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_sector_per_griddistrict_3_industrial (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_osm_sector_per_griddistrict_3_industrial_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_sector_per_griddistrict_3_industrial_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_sector_per_griddistrict_3_industrial_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_sector_per_griddistrict_3_industrial_id_seq OWNED BY model_draft.ego_osm_sector_per_griddistrict_3_industrial.id;


--
-- Name: ego_osm_sector_per_griddistrict_4_agricultural; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_sector_per_griddistrict_4_agricultural (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035),
    subst_id integer,
    area_ha double precision
);


--
-- Name: ego_osm_sector_per_griddistrict_4_agricultural_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_sector_per_griddistrict_4_agricultural_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_sector_per_griddistrict_4_agricultural_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_sector_per_griddistrict_4_agricultural_id_seq OWNED BY model_draft.ego_osm_sector_per_griddistrict_4_agricultural.id;


--
-- Name: ego_osm_sector_per_lvgd_1_residential; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_sector_per_lvgd_1_residential (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_osm_sector_per_lvgd_1_residential_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_sector_per_lvgd_1_residential_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_sector_per_lvgd_1_residential_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_sector_per_lvgd_1_residential_id_seq OWNED BY model_draft.ego_osm_sector_per_lvgd_1_residential.id;


--
-- Name: ego_osm_sector_per_lvgd_2_retail; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_sector_per_lvgd_2_retail (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_osm_sector_per_lvgd_2_retail_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_sector_per_lvgd_2_retail_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_sector_per_lvgd_2_retail_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_sector_per_lvgd_2_retail_id_seq OWNED BY model_draft.ego_osm_sector_per_lvgd_2_retail.id;


--
-- Name: ego_osm_sector_per_lvgd_3_industrial; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_sector_per_lvgd_3_industrial (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_osm_sector_per_lvgd_3_industrial_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_sector_per_lvgd_3_industrial_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_sector_per_lvgd_3_industrial_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_sector_per_lvgd_3_industrial_id_seq OWNED BY model_draft.ego_osm_sector_per_lvgd_3_industrial.id;


--
-- Name: ego_osm_sector_per_lvgd_4_agricultural; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_osm_sector_per_lvgd_4_agricultural (
    id integer NOT NULL,
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_osm_sector_per_lvgd_4_agricultural_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_osm_sector_per_lvgd_4_agricultural_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_osm_sector_per_lvgd_4_agricultural_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_osm_sector_per_lvgd_4_agricultural_id_seq OWNED BY model_draft.ego_osm_sector_per_lvgd_4_agricultural.id;


--
-- Name: ego_political_boundary_bkg_vg250_6_gem_clean; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_political_boundary_bkg_vg250_6_gem_clean (
    id integer NOT NULL,
    old_id integer,
    gen text,
    bez text,
    bem text,
    nuts character varying(5),
    rs_0 character varying(12),
    ags_0 character varying(12),
    area_ha numeric,
    count_hole integer,
    path integer[],
    is_hole boolean,
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_political_boundary_bkg_vg250_6_gem_clean; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_political_boundary_bkg_vg250_6_gem_clean IS '{
    "Name": "ego municipality clean",
    "Source":   [{
	"Name": "open_eGo",
	"URL": "https://github.com/openego/data_processing"}],
    "Reference date": "2016",
    "Date of collection": "02.09.2016",
    "Original file": ["political_boundary.bkg_vg250_6_gem"],
    "Spatial": [{
	"Resolution": "1:250.000",
	"Extend": "Germany; Gemeinde (gem) - municipality (mun)" }],
    "Description": ["Municipality without holes"],
    "Column":[
        {"Name": "id", "Description": "Unique identifier", "Unit": " " },
	{"Name": "old_id", "Description": "vg250 identifier", "Unit": " " },
        {"Name": "gen", "Description": "Geografischer Name", "Unit": " " },
	{"Name": "bez", "Description": "Bezeichnung der Verwaltungseinheit", "Unit": " " },
	{"Name": "bem", "Description": "Bemerkung", "Unit": " " },
	{"Name": "nuts", "Description": "EuropÃ¤ischer StatistikschlÃ¼ssel", "Unit": " " },
	{"Name": "rs_0", "Description": "AufgefÃ¼llter RegionalschlÃ¼ssel", "Unit": " " },
	{"Name": "ags_0", "Description": "Amtlicher GemeindeschlÃ¼ssel", "Unit": " " },
	{"Name": "area_ha", "Description": "Area in ha", "Unit": "ha" },
	{"Name": "count_hole", "Description": "Number of holes", "Unit": " " },
	{"Name": "path", "Description": "Path number", "Unit": " " },
	{"Name": "hole", "Description": "True if hole", "Unit": " " },
	{"Name": "geom", "Description": "Geometry", "Unit": " " } ],
    "Changes":	[
        {"Name": "Ludee", "Mail": "",
	"Date":  "02.09.2015", "Comment": "Created mview" },
	{"Name": "Ludee", "Mail": "",
	"Date":  "16.11.2016", "Comment": "Added metadata" } ],
    "Notes": [""],
    "Licence": [{
	"Name": "Geodatenzugangsgesetz (GeoZG) Â© GeoBasis-DE / BKG 2016 (Daten verÃ¤ndert)", 
	"URL": "http://www.geodatenzentrum.de/auftrag/pdf/geodatenzugangsgesetz.pdf" }],
    "Instructions for proper use": ["Dieser Datenbestand steht Ã¼ber Geodatendienste gemÃ¤ÃŸ Geodatenzugangsgesetz (GeoZG) (http://www.geodatenzentrum.de/auftrag/pdf/geodatenzugangsgesetz.pdf) fÃ¼r die kommerzielle und nicht kommerzielle Nutzung geldleistungsfrei zum Download und zur Online-Nutzung zur VerfÃ¼gung. Die Nutzung der Geodaten und Geodatendienste wird durch die Verordnung zur Festlegung der Nutzungsbestimmungen fÃ¼r die Bereitstellung von Geodaten des Bundes (GeoNutzV) (http://www.geodatenzentrum.de/auftrag/pdf/geonutz.pdf) geregelt. Insbesondere hat jeder Nutzer den Quellenvermerk zu allen Geodaten, Metadaten und Geodatendiensten erkennbar und in optischem Zusammenhang zu platzieren. VerÃ¤nderungen, Bearbeitungen, neue Gestaltungen oder sonstige Abwandlungen sind mit einem VerÃ¤nderungshinweis im Quellenvermerk zu versehen. Quellenvermerk und VerÃ¤nderungshinweis sind wie folgt zu gestalten. Bei der Darstellung auf einer Webseite ist der Quellenvermerk mit der URL http://www.bkg.bund.de zu verlinken. Â© GeoBasis-DE / BKG <Jahr des letzten Datenbezugs> Â© GeoBasis-DE / BKG <Jahr des letzten Datenbezugs> (Daten verÃ¤ndert) Beispiel: Â© GeoBasis-DE / BKG 2013"]
    }';


--
-- Name: ego_political_boundary_bkg_vg250_6_gem_clean_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_political_boundary_bkg_vg250_6_gem_clean_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_political_boundary_bkg_vg250_6_gem_clean_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_political_boundary_bkg_vg250_6_gem_clean_id_seq OWNED BY model_draft.ego_political_boundary_bkg_vg250_6_gem_clean.id;


--
-- Name: ego_political_boundary_hvmv_subst_per_gem; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_political_boundary_hvmv_subst_per_gem (
    id integer NOT NULL,
    old_id integer,
    gen text,
    bez text,
    bem text,
    nuts character varying(5),
    rs_0 character varying(12),
    ags_0 character varying(12),
    area_ha numeric,
    count_hole integer,
    path integer[],
    is_hole boolean,
    geom public.geometry(Polygon,3035),
    subst_sum integer,
    subst_type integer
);


--
-- Name: TABLE ego_political_boundary_hvmv_subst_per_gem; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_political_boundary_hvmv_subst_per_gem IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_political_boundary_hvmv_subst_per_gem_3_nn; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_political_boundary_hvmv_subst_per_gem_3_nn (
    mun_id integer NOT NULL,
    mun_ags_0 character varying(12),
    subst_ags_0 text,
    subst_id integer,
    subst_type integer,
    geom_sub public.geometry(Point,3035),
    distance double precision,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: TABLE ego_political_boundary_hvmv_subst_per_gem_3_nn; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_political_boundary_hvmv_subst_per_gem_3_nn IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.9" }';


--
-- Name: ego_scenario; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_scenario (
    version text NOT NULL,
    version_name text,
    release boolean,
    comment text,
    "timestamp" timestamp without time zone
);


--
-- Name: TABLE ego_scenario; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_scenario IS '{
	"title": "eGo dataprocessing - Scenario list",
	"description": "Version info",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ",
		"url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "copyright": "© Reiner Lemoine Institut"} ],
	"spatial": [
		{"extend": "",
		"resolution": ""} ],
	"license": [
		{"id": 	"ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "© Reiner Lemoine Institut"} ],
	"contributors": [
		{"name": "Ludee", "email": "", "date": "01.10.2016", "comment": "Create table" },
		{"name": "Ludee", "email": "", "date": "16.11.2016", "comment": "Add metadata" },
		{"name": "Ludee", "email": " ", "date": "21.03.2017", "comment": "Update metadata to 1.1"},
		{"name": "Ludee", "email": "", "date": "2017-04-06", "comment": "Update metadata to 1.2"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", "description": "scenario version number", "unit": "" },
				{"name": "version_name", "description": "version name", "unit": "" },
				{"name": "release", "description": "external release", "unit": "" },
				{"name": "comment", "description": "additional information and comments", "unit": "" },
				{"name": "timestamp", "description": "timestamp (Berlin)", "unit": "" } ]},
		"meta_version": "1.2"}] }';


--
-- Name: ego_scenario_log; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_scenario_log (
    id integer NOT NULL,
    version text,
    io text,
    schema_name text,
    table_name text,
    script_name text,
    entries integer,
    status text,
    user_name text,
    "timestamp" timestamp without time zone,
    metadata text
);


--
-- Name: TABLE ego_scenario_log; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_scenario_log IS '{
	"title": "eGo dataprocessing - Scenario log",
	"description": "Versioning and table info",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ", "url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "copyright": "© Reiner Lemoine Institut"} ],
	"spatial": [
		{"extend": "",
		"resolution": ""} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "© Reiner Lemoine Institut"} ],
	"contributors": [
		{"name": "Ludee", "email": "", "date": "01.10.2016", "comment": "Create table" },
		{"name": "Ludee", "email": "", "date": "12.10.2016", "comment": "Add user_name" },
		{"name": "Ludee", "email": "", "date": "16.11.2016", "comment": "Add io" },
		{"name": "Ludee", "email": "", "date": "16.11.2016", "comment": "Add metadata" },
		{"name": "Ludee", "email": "", "date": "15.01.2017", "comment": "Update metadata"},
		{"name": "Ludee", "email": "", "date": "21.03.2017", "comment": "Update metadata to 1.1"},
		{"name": "Ludee", "email": "", "date": "2017-04-06", "comment": "Update metadata to 1.2"} ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "id", "description": "unique identifier", "unit": "" },
				{"name": "version", "description": "scenario version", "unit": "" },
				{"name": "io", "description": "input or output", "unit": "" },
				{"name": "schema_name", "description": "Schema name", "unit": "" },
				{"name": "table_name", "description": "Table name", "unit": "" },
				{"name": "script_name", "description": "Script name", "unit": "" },
				{"name": "entries", "description": "Number of rows", "unit": "" },
				{"name": "status", "description": "Current status and comments", "unit": "" },
				{"name": "user_name", "description": "Author (session user)", "unit": "" },
				{"name": "metadata", "description": "Copy of the input metadta", "unit": "" },
				{"name": "timestamp", "description": "Timestamp (Berlin)", "unit": "" },
				{"name": "metadata", "description": "Metadata of table", "unit": "" } ]},
		"meta_version": "1.2"}] }';


--
-- Name: ego_scenario_log_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_scenario_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_scenario_log_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_scenario_log_id_seq OWNED BY model_draft.ego_scenario_log.id;


--
-- Name: ego_scenario_overview; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_scenario_overview (
    id integer NOT NULL,
    name text,
    version text,
    cnt integer
);


--
-- Name: ego_scenario_overview_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_scenario_overview_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_scenario_overview_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_scenario_overview_id_seq OWNED BY model_draft.ego_scenario_overview.id;


--
-- Name: ego_small_chp_plant_germany; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_small_chp_plant_germany (
    id bigint NOT NULL,
    start_up_date timestamp without time zone,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    thermal_capacity numeric,
    city character varying,
    postcode character varying,
    address character varying,
    lon numeric,
    lat numeric,
    gps_accuracy character varying,
    validation character varying,
    notification_reason character varying,
    eeg_id character varying,
    tso double precision,
    tso_eic character varying,
    dso_id character varying,
    dso character varying,
    voltage_level character varying,
    network_node character varying,
    power_plant_id character varying,
    source character varying,
    comment character varying,
    geom public.geometry(Point,4326)
);


--
-- Name: TABLE ego_small_chp_plant_germany; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_small_chp_plant_germany IS '{"Name": "Small chp power plants in Germany",

"Source": [{
                     "Name": "EnergyMap",
                      "URL": "www.energymap.info" },
                     {
                     "Name": "Bundesnetzagentur (BNetzA)",
                      "URL": "www.bundesnetzagentur.de" },
                      {
                     "Name": "ego chp development",
                      "URL": "www.github.com/openego" }

                      
],

"Reference date": ["31.12.2015"],

"Retrieved": ["16.03.2016"],

"Date of collection": ["31.12.2015"],

"Original file": ["eeg_anlagenregister_2015.08.utf8.csv.zip,Meldungen_Aug-Dez2015.xls, 2016_01_Veroeff_AnlReg.xls"],

"Spatial resolution": ["Germany"],

"Description": ["This table contains a list of renewable energy power plants in Germany. This data join two sources: energymap.info, a data platform of the ''''Deutsche Gesellschaft für Sonnenenergie e.V.'''' and Bundesnetzagentur, the regularor together."], 

"Regional level": ["minimum postcode level"],

"Column":[

	{"Name": "id",
	"Description": "Primary Key",
	"Unit": "" },

	{"Name": "start_up_date",
	"Description": "start-up date",
	"Unit": "" },

	{"Name": "electrical_capacity",
	"Description": "electrical capacity",
	"Unit": "kW" },

	{"Name": "generation_type",
	"Description": "generation_type or main fuel type",
	"Unit": "" },

	{"Name": "generation_subtype",
	"Description": "generation subtype",
	"Unit": "" },

	{"Name": "thermal_capacity",
	"Description": "thermal capacity",
	"Unit": "kW" },

	{"Name": "city",
	"Description": "Name of city or location",
	"Unit": "" },

	{"Name": "postcode",
	"Description": "postcode",
	"Unit": "" },

	{"Name": "address",
	"Description": "address",
	"Unit": "" },

	{"Name": "lon",
	"Description": "longitude",
	"Unit": "" },

	{"Name": "lat",
	"Description": "latitude",
	"Unit": "" },

	{"Name": "gps_accuracy",
	"Description": "gps accuracy in meter",
	"Unit": "meter" },

	{"Name": "validation",
	"Description": "validation comments",
	"Unit": "" },

	{"Name":"notification_reason",
	"Description":"notification reason from BNetzA sources",
	"Unit":"" },

	{"Name":"eeg_id",
	"Description":"EEG id of Unit",
	"Unit":"" },

	{"Name":"tso",
	"Description":"Name of Transmission system operator",
	"Unit":"" },

	{"Name":"tso_eic",
	"Description":"Name of Transmission system operator",
	"Unit":"" },

	{"Name":"dso_id",
	"Description":"Name of District system operator",
	"Unit":"" },

	{"Name":"dso",
	"Description":"Name of District system operator",
	"Unit":"" },

	{"Name":"voltage_level",
	"Description":"voltage level",
	"Unit":"" },

	{"Name":"network_node",
	"Description":"Name or code of network node",
	"Unit":"" },

	{"Name":"power_plant_id",
	"Description":"power plant id from BNetzA",
	"Unit":"" },

	{"Name":"source",
	"Description":"short Name of source: energymap or bnetza",
	"Unit":"" },

	{"Name":"comment",
	"Description":"Further comment of changes",
	"Unit":"" },

	{"Name":"geom",
	"Description":"Geometry",
	"Unit":"" }
],

"Changes":[
  { "Name":"Wolf-Dieter Bunke", 
    "Mail":"wolf-dieter.bunke@uni-flensburg.de", 
    "Date":"16.03.2016", 
    "Comment":"Created table" }],

"ToDo": ["ckeck licence"],

"Licence": [{"Name": "unspecified Licence",
                          "URL": " "}],

"Instructions for proper use": ["Always state licence"]}';


--
-- Name: ego_social_zensus_load; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_social_zensus_load (
    id integer NOT NULL,
    gid integer,
    population integer,
    inside_la boolean,
    geom_point public.geometry(Point,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_social_zensus_load; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_social_zensus_load IS '{
    "Name": "ego zensus loads",
    "Source":   [{
	"Name": "open_eGo",
	"URL": "https://github.com/openego/data_processing"}],
    "Reference date": "2016",
    "Date of collection": "02.09.2016",
    "Original file": ["ego_grid_hvmv_substation"],
    "Spatial": [{
	"Resolution": "",
	"Extend": "Germany" }],
    "Description": ["osm laods"],
    "Column":[
        {"Name": "id", "Description": "Unique identifier", "Unit": " " },
        {"Name": "area_ha", "Description": "Area", "Unit": "ha" },
	{"Name": "geom", "Description": "Geometry", "Unit": " " } ],
    "Changes":	[
        {"Name": "Ludwig Hülk", "Mail": "ludwig.huelk@rl-institut.de",
	"Date":  "02.09.2015", "Comment": "Created mview" },
	{"Name": "Ludwig Hülk", "Mail": "ludwig.huelk@rl-institut.de",
	"Date":  "17.12.2016", "Comment": "Added metadata" } ],
    "Notes": [""],
    "Licence": [{
	"Name": "", 
	"URL": "" }],
    "Instructions for proper use": [" "]
    }';


--
-- Name: ego_social_zensus_load_cluster; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_social_zensus_load_cluster (
    cid integer NOT NULL,
    zensus_sum integer,
    area_ha integer,
    geom public.geometry(Polygon,3035),
    geom_buffer public.geometry(Polygon,3035),
    geom_centroid public.geometry(Point,3035),
    geom_surfacepoint public.geometry(Point,3035)
);


--
-- Name: TABLE ego_social_zensus_load_cluster; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_social_zensus_load_cluster IS '{
    "Name": "ego zensus loads cluster",
    "Source":   [{
	"Name": "open_eGo",
	"URL": "https://github.com/openego/data_processing"}],
    "Reference date": "2016",
    "Date of collection": "02.09.2016",
    "Original file": ["ego_grid_hvmv_substation"],
    "Spatial": [{
	"Resolution": "",
	"Extend": "Germany" }],
    "Description": ["osm laods"],
    "Column":[
        {"Name": "id", "Description": "Unique identifier", "Unit": " " },
        {"Name": "area_ha", "Description": "Area", "Unit": "ha" },
	{"Name": "geom", "Description": "Geometry", "Unit": " " } ],
    "Changes":	[
        {"Name": "Ludwig Hülk", "Mail": "ludwig.huelk@rl-institut.de",
	"Date":  "02.09.2015", "Comment": "Created mview" },
	{"Name": "Ludwig Hülk", "Mail": "ludwig.huelk@rl-institut.de",
	"Date":  "17.12.2016", "Comment": "Added metadata" } ],
    "Notes": [""],
    "Licence": [{
	"Name": "", 
	"URL": "" }],
    "Instructions for proper use": [" "]
    }';


--
-- Name: ego_social_zensus_load_cluster_cid_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_social_zensus_load_cluster_cid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_social_zensus_load_cluster_cid_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_social_zensus_load_cluster_cid_seq OWNED BY model_draft.ego_social_zensus_load_cluster.cid;


--
-- Name: ego_social_zensus_load_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_social_zensus_load_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_social_zensus_load_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_social_zensus_load_id_seq OWNED BY model_draft.ego_social_zensus_load.id;


--
-- Name: ego_supply_conv_powerplant; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_conv_powerplant (
    gid integer NOT NULL,
    bnetza_id text,
    company text,
    name text,
    postcode text,
    city text,
    street text,
    state text,
    block text,
    commissioned_original text,
    commissioned double precision,
    retrofit double precision,
    shutdown double precision,
    status text,
    fuel text,
    technology text,
    type text,
    eeg text,
    chp text,
    capacity double precision,
    capacity_uba double precision,
    chp_capacity_uba double precision,
    efficiency_data double precision,
    efficiency_estimate double precision,
    network_node text,
    voltage text,
    network_operator text,
    name_uba text,
    lat double precision,
    lon double precision,
    comment text,
    geom public.geometry(Point,4326),
    voltage_level smallint,
    subst_id bigint,
    otg_id bigint,
    un_id bigint
);


--
-- Name: TABLE ego_supply_conv_powerplant; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_supply_conv_powerplant IS '{
	"comment": "eGoDP - Temporary table",
	"version": "v0.2.8" }';


--
-- Name: ego_supply_conv_powerplant_2035; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_conv_powerplant_2035 (
    bnetza_id character varying,
    tso character varying,
    power_plant_name character varying,
    unit_name character varying,
    postcode character varying,
    state character varying,
    commissioning integer,
    chp character varying,
    fuel character varying,
    rated_power numeric,
    rated_power_a2025 numeric,
    rated_power_b2025 numeric,
    rated_power_b2035 numeric,
    rated_power_c2025 numeric,
    lat double precision,
    lon double precision,
    location_checked text,
    geom public.geometry(Point,4326),
    gid integer,
    voltage_level smallint,
    subst_id bigint,
    otg_id bigint,
    un_id bigint
);


--
-- Name: ego_supply_generator; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_generator (
    un_id integer NOT NULL,
    re_id integer,
    conv_id integer,
    aggr_id_pf integer,
    aggr_id_ms integer,
    geom public.geometry(Point,4326)
);


--
-- Name: TABLE ego_supply_generator; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_supply_generator IS '{
"Name": "eGo generators merged",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["ego_dp_powerflow_assignment_generator.sql"],
"Column": [
                   {"Name": "un_id",
                    "Description": "unique id for unified generators (res and conv)",
                    "Unit": "" },  
                   {"Name": "re_id",
                    "Description": "id for res-generators",
                    "Unit": "" },     
                   {"Name": "conv_id",
                    "Description": "id for conventional generators",
                    "Unit": "" }, 
                   {"Name": "aggr_id_pf",
                    "Description": "aggregate id for hv powerflow",
                    "Unit": "" },
                   {"Name": "aggr_id_ms",
                    "Description": "aggregate id for mv powerflow",
                    "Unit": "" },                        
                   {"Name": "geom",
                    "Description": "geometry",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "05.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "27.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_supply_generator_nep2035; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_generator_nep2035 (
    un_id integer NOT NULL,
    re_id bigint,
    conv_id bigint,
    aggr_id_pf bigint,
    aggr_id_ms bigint,
    geom public.geometry(Point,4326)
);


--
-- Name: ego_supply_generator_nep2035_un_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_supply_generator_nep2035_un_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_supply_generator_nep2035_un_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_supply_generator_nep2035_un_id_seq OWNED BY model_draft.ego_supply_generator_nep2035.un_id;


--
-- Name: ego_supply_generator_test; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_generator_test (
    un_id integer NOT NULL,
    re_id integer,
    conv_id integer,
    aggr_id_pf integer,
    aggr_id_ms integer,
    geom public.geometry(Point,4326)
);


--
-- Name: TABLE ego_supply_generator_test; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_supply_generator_test IS '{
"Name": "eGo generators merged",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["assignment_generator_bus.sql"],
"Column": [
                   {"Name": "un_id",
                    "Description": "unique id for unified generators (res and conv)",
                    "Unit": "" },  
                   {"Name": "re_id",
                    "Description": "id for res-generators",
                    "Unit": "" },     
                   {"Name": "conv_id",
                    "Description": "id for conventional generators",
                    "Unit": "" }, 
                   {"Name": "aggr_id_pf",
                    "Description": "aggregate id for hv powerflow",
                    "Unit": "" },
                   {"Name": "aggr_id_ms",
                    "Description": "aggregate id for mv powerflow",
                    "Unit": "" },                        
                   {"Name": "geom",
                    "Description": "geometry",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "05.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "ilka.cussmann@hs-flensburg.de",
                    "Date":  "27.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: ego_supply_generator_test_un_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_supply_generator_test_un_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_supply_generator_test_un_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_supply_generator_test_un_id_seq OWNED BY model_draft.ego_supply_generator_test.un_id;


--
-- Name: ego_supply_generator_un_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_supply_generator_un_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_supply_generator_un_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_supply_generator_un_id_seq OWNED BY model_draft.ego_supply_generator.un_id;


--
-- Name: ego_supply_rea; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_rea (
    id bigint NOT NULL,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    voltage_level smallint,
    postcode character varying,
    source character varying,
    subst_id bigint,
    la_id integer,
    sort integer,
    flag character varying,
    geom public.geometry(Point,3035),
    geom_line public.geometry(LineString,3035),
    geom_new public.geometry(Point,3035)
);


--
-- Name: ego_supply_rea_2035; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_rea_2035 (
    id bigint NOT NULL,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    voltage_level smallint,
    postcode character varying,
    source character varying,
    subst_id bigint,
    la_id integer,
    sort integer,
    flag character varying,
    geom public.geometry(Point,3035),
    geom_line public.geometry(LineString,3035),
    geom_new public.geometry(Point,3035),
    otg_id bigint,
    un_id bigint
);


--
-- Name: ego_supply_rea_2050; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_rea_2050 (
    id bigint NOT NULL,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    voltage_level smallint,
    postcode character varying,
    source character varying,
    subst_id bigint,
    la_id integer,
    sort integer,
    flag character varying,
    geom public.geometry(Point,3035),
    geom_line public.geometry(LineString,3035),
    geom_new public.geometry(Point,3035)
);


--
-- Name: ego_supply_rea_2050_out_nn; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_rea_2050_out_nn (
    dea_id bigint NOT NULL,
    generation_type text,
    subst_id integer,
    geom_sub public.geometry(Point,3035),
    distance double precision,
    geom public.geometry(Point,3035)
);


--
-- Name: ego_supply_rea_m2_windfarm; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_rea_m2_windfarm (
    farm_id integer NOT NULL,
    subst_id integer,
    area_ha numeric,
    dea_cnt integer,
    electrical_capacity_sum numeric,
    rea_geom_new public.geometry(Polygon,3035),
    rea_geom_line public.geometry(LineString,3035),
    geom public.geometry(Polygon,3035)
);


--
-- Name: ego_supply_rea_m2_windfarm_farm_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_supply_rea_m2_windfarm_farm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_supply_rea_m2_windfarm_farm_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_supply_rea_m2_windfarm_farm_id_seq OWNED BY model_draft.ego_supply_rea_m2_windfarm.farm_id;


--
-- Name: ego_supply_rea_per_gentype_and_voltlevel; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_rea_per_gentype_and_voltlevel (
    id bigint NOT NULL,
    generation_type text,
    generation_subtype character varying,
    voltage_level smallint,
    capacity numeric,
    count bigint
);


--
-- Name: ego_supply_rea_per_loadarea; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_rea_per_loadarea (
    id integer NOT NULL,
    subst_id integer,
    lv_dea_cnt integer,
    lv_dea_capacity numeric
);


--
-- Name: ego_supply_rea_per_method; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_rea_per_method (
    name text NOT NULL,
    capacity numeric,
    count bigint
);


--
-- Name: ego_supply_rea_per_mvgd; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_rea_per_mvgd (
    subst_id integer NOT NULL,
    dea_cnt integer,
    dea_capacity numeric,
    lv_dea_cnt integer,
    lv_dea_capacity numeric,
    mv_dea_cnt integer,
    mv_dea_capacity numeric,
    geom public.geometry(MultiPolygon,3035)
);


--
-- Name: ego_supply_res_powerplant; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_res_powerplant (
    id bigint NOT NULL,
    start_up_date timestamp without time zone,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    thermal_capacity numeric,
    city character varying,
    postcode character varying,
    address character varying,
    lon numeric,
    lat numeric,
    gps_accuracy character varying,
    validation character varying,
    notification_reason character varying,
    eeg_id character varying,
    tso double precision,
    tso_eic character varying,
    dso_id character varying,
    dso character varying,
    voltage_level_var character varying,
    network_node character varying,
    power_plant_id character varying,
    source character varying,
    comment character varying,
    geom public.geometry(Point,4326),
    subst_id bigint,
    otg_id bigint,
    un_id bigint,
    voltage_level smallint,
    la_id integer,
    mvlv_subst_id integer,
    rea_sort integer,
    rea_flag character varying,
    rea_geom_line public.geometry(LineString,3035),
    rea_geom_new public.geometry(Point,3035)
);


--
-- Name: TABLE ego_supply_res_powerplant; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_supply_res_powerplant IS '{"Name": "Renewable power plants in Germany -Status quo",
"Source": [{
                     "Name": "EnergyMap",
                      "URL": "www.energymap.info" },
                     {
                     "Name": "Bundesnetzagentur (BNetzA)",
                      "URL": "www.bundesnetzagentur.de" },
                     {
                     "Name": "open_eGo data-processing",
                      "URL":  "https://github.com/openego/data_processing" }
],
"Reference date": ["31.12.2015"],
"Retrieved": ["16.03.2016"],
"Date of collection": ["31.12.2015"],
"Original file": ["eeg_anlagenregister_2015.08.utf8.csv.zip,Meldungen_Aug-Dez2015.xls, 2016_01_Veroeff_AnlReg.xls"],
"Spatial resolution": ["Germany"],
"Description": ["This table contains a list of renewable energy power plants in Germany. This data join two sources: energymap.info, a data platform of the ''''Deutsche Gesellschaft fÃ¼r Sonnenenergie e.V.'''' and Bundesnetzagentur, the regularor together."], 
"Regional level": ["minimum postcode level"],
"Column":[
	{"Name": "id",
	"Description": "Primary Key",
	"Unit": "" },
	{"Name": "start_up_date",
	"Description": "start-up date",
	"Unit": "" },
	{"Name": "electrical_capacity",
	"Description": "electrical capacity",
	"Unit": "kW" },
	{"Name": "generation_type",
	"Description": "generation_type or main fuel type",
	"Unit": "" },
	{"Name": "generation_subtype",
	"Description": "generation subtype",
	"Unit": "" },
	{"Name": "thermal_capacity",
	"Description": "thermal capacity",
	"Unit": "kW" },
	{"Name": "city",
	"Description": "Name of city or location",
	"Unit": "" },
	{"Name": "postcode",
	"Description": "postcode",
	"Unit": "" },
	{"Name": "address",
	"Description": "address",
	"Unit": "" },
	{"Name": "lon",
	"Description": "longitude",
	"Unit": "" },
	{"Name": "lat",
	"Description": "latitude",
	"Unit": "" },
	{"Name": "gps_accuracy",
	"Description": "gps accuracy in meter",
	"Unit": "meter" },
	{"Name": "validation",
	"Description": "validation comments",
	"Unit": "" },
	{"Name":"notification_reason",
	"Description":"notification reason from BNetzA sources",
	"Unit":"" },
	{"Name":"eeg_id",
	"Description":"EEG id of Unit",
	"Unit":"" },
	{"Name":"tso",
	"Description":"Name of Transmission system operator",
	"Unit":"" },
	{"Name":"tso_eic",
	"Description":"Name of Transmission system operator",
	"Unit":"" },
	{"Name":"dso_id",
	"Description":"Name of District system operator",
	"Unit":"" },
	{"Name":"dso",
	"Description":"Name of District system operator",
	"Unit":"" },
	{"Name":"voltage_level",
	"Description":"voltage level",
	"Unit":"" },
	{"Name":"network_node",
	"Description":"Name or code of network node",
	"Unit":"" },
	{"Name":"power_plant_id",
	"Description":"power plant id from BNetzA",
	"Unit":"" },
	{"Name":"source",
	"Description":"short Name of source: energymap or bnetza",
	"Unit":"" },
	{"Name":"comment",
	"Description":"Further comment of changes",
	"Unit":"" },
	{"Name":"geom",
	"Description":"Geometry",
	"Unit":"" },
	{"Name":"subst_id",
	"Description":"ID of related substation",
	"Unit":"" },
	{"Name":"otg_id",
	"Description":"ID od related substation from osmTGmod",
	"Unit":"" },
	{"Name":"un_id",
	"Description":"unified ID of RES and CONV power plants",
	"Unit":"" }
],
"Changes":[
  { "Name":"Wolf-Dieter Bunke", 
    "Mail":"wolf-dieter.bunke@uni-flensburg.de", 
    "Date":"16.03.2016", 
    "Comment":"Created table" },
  { "Name":"Wolf-Dieter Bunke", 
    "Mail":"wolf-dieter.bunke@uni-flensburg.de", 
    "Date":"02.02.2017", 
    "Comment":"change meta data" }
    
    
    ],
"Notes": ["..."],
"Licence": [{
            "Name": "Open Database License (ODbL) v1.0",
	    "URL": "http://opendatacommons.org/licenses/odbl/1.0/",
	    "Copyright": "ZNES EUF"
	    }
],
"Instructions for proper use": ["..."]}';


--
-- Name: ego_supply_res_powerplant_2035; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_res_powerplant_2035 (
    id bigint NOT NULL,
    scenario_year integer,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    thermal_capacity numeric,
    nuts character varying,
    lon numeric,
    lat numeric,
    voltage_level smallint,
    network_node character varying,
    source character varying,
    comment character varying,
    geom public.geometry(Point,4326),
    voltage character varying,
    subst_id bigint,
    otg_id bigint,
    un_id bigint
);


--
-- Name: TABLE ego_supply_res_powerplant_2035; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_supply_res_powerplant_2035 IS '{
"Name": "eGo renewable power plants in Germany developed by NEP 2035 scenario data",
"Source": [{
                  "Name": "Open_eGo",
                  "URL":  "https://github.com/openego/data_processing" },
             {    "Name": "NEP 2015, erster Entwurf p. 45",
                  "URL":  "https://www.netzentwicklungsplan.de/sites/default/files/paragraphs-files/NEP_2025_1_Entwurf_Teil1.pdf" },
              {   "Name": "(Fl)ensburg (En)ergy (S)cenarios - NEP Scenarios for 2014/2025/2035",
                  "URL":  "https://osf.io/rz7fq/" }
                  ],
"Reference date": "2035",
"Date of collection": "21-11-2016",
"Original file": "https://github.com/openego/data_processing/blob/refactor/oedb-restructuring_v0.2/calc_geo_powerplants/development_res_ProxToNow_2035.sql",
"Spatial resolution": ["Germany"],
"Description": ["This data set includes a 2.8 M units of renewable power plants with a high geographical resolution. The development of renewable units is done by a proportional to the amount of renewable units per German federal state by scenario data from the “Netzentwicklungsplan Strom, Version 2015, erster Entwurf” page 45, table “Installierte Leistungen je Bundesland im Szenario B1 2035/B2 2035”. The Script for this “proxToNow” Method and the allocation of units by spatial aspects can be found under: https://github.com/openego/data_processing/blob/refactor/oedb-restructuring_v0.2/calc_geo_powerplants/development_res_ProxToNow_2035.sql"],
"Column": [
                   {"Name": "id",
                    "Description": "Primary ID",
                    "Unit": "" }, 
                   {"Name": "scenario_year",
                    "Description": "Scenario date",
                    "Unit": "Year" }, 
                   {"Name": "electrical_capacity",
                    "Description": "Electrical Capacity",
                    "Unit": "KW" }, 
                   {"Name": "generation_type",
                    "Description": "Generation type as wind, solar, biomass, etc.",
                    "Unit": "" }, 
                   {"Name": "generation_subtype",
                    "Description": "Generation type as wind onshore, wind offshore, solar_roof_mounted, etc.",
                    "Unit": "" }, 
                   {"Name": "thermal_capacity",
                    "Description": "Thermal capacity of CHP units",
                    "Unit": "KW" }, 
                   {"Name": "nuts",
                    "Description": "NUTS Region Code of NUTS 3",
                    "Unit": "" }, 
                   {"Name": "lon",
                    "Description": "Longitude",
                    "Unit": "" }, 
                   {"Name": "lat",
                    "Description": "Latitude",
                    "Unit": "" }, 
                   {"Name": "voltage_level",
                    "Description": "voltage level to which generator is connected (partly calculated based on installed capacity) Voltage level of Germany form 1 (Extra-high voltage) to 7 (Low voltage)",
                    "Unit": "" }, 
                   {"Name": "network_node",
                    "Description": "Connection point to the electricity grid based on BNetzA data",
                    "Unit": "" }, 
                   {"Name": "source",
                    "Description": "Name of source or abbreviation of source name",
                    "Unit": "" }, 
                   {"Name": "comment",
                    "Description": "Comment and description of e.g. methods, corrections, etc.",
                    "Unit": "" }, 
                   {"Name": "geom",
                    "Description": "Geometry Point",
                    "Unit": "" }, 
                   {"Name": "voltage",
                    "Description": "Calculated voltage level",
                    "Unit": "KV" }, 
		   {"Name": "subst_id",
                    "Description": "id of associated substation",
                    "Unit": "" }, 
                   {"Name": "otg_id",
                    "Description": "otg_id of associated substation",
                    "Unit": "" }, 
                   {"Name": "un_id",
                    "Description": "unified id for res and conv powerplants",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Wolf-Dieter Bunke",
                    "Mail": "wolf-dieter.bunke@uni-flensburg.de",
                    "Date":  "21.11.2016",
                    "Comment": "Creat Tabel and implement development method" },
                   {"Name": "Wolf-Dieter Bunke",
                    "Mail": "wolf-dieter.bunke@uni-flensburg.de",
                    "Date":  "07.02.2017",
                    "Comment": "Change of DB version, new allocation" }
                  ],
"Notes": ["..."],
"Licence":      [{
                    "Name":       "Open Database License (ODbL) v1.0",
		    "URL":        "http://opendatacommons.org/licenses/odbl/1.0/",
	            "Copyright":  "Europa-Universität Flensburg, Centre for Sustainable Energy Systems"}],
"Instructions for proper use": ["..."]       
}';


--
-- Name: ego_supply_res_powerplant_2050; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_res_powerplant_2050 (
    id bigint NOT NULL,
    scenario_year integer,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    thermal_capacity numeric,
    nuts character varying,
    lon numeric,
    lat numeric,
    voltage_level smallint,
    network_node character varying,
    source character varying,
    comment character varying,
    geom public.geometry(Point,4326),
    voltage character varying,
    subst_id bigint,
    otg_id bigint,
    un_id bigint
);


--
-- Name: TABLE ego_supply_res_powerplant_2050; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_supply_res_powerplant_2050 IS '{
"Name": "eGo renewable power plants in Germany developed by 100% RES 2050 scenario data",
"Source": [	{
                  "Name": "Open_eGo",
                  "URL":  "https://github.com/openego/data_processing" },
		{ "Name": "(Fl)ensburg (En)ergy (S)cenarios - NEP Scenarios for 2014/2025/2035",
                  "URL":  "https://osf.io/rz7fq/" }
                  ],
"Reference date": "2050",
"Date of collection": "21-11-2016",
"Original file": "https://github.com/openego/data_processing/blob/refactor/oedb-restructuring_v0.2/calc_geo_powerplants/development_res_ProxToNow_2050.sql",
"Spatial resolution": ["Germany"],
"Description": ["This data set includes units of renewable power plants with a high geographical resolution. The development of renewable units is done by a proportional to the amount of renewable units per Germany as state by scenario data RES 100% in 2050 (“ego-100-2050”). The Script for this “proxToNow” Method and the allocation of units by spatial aspects can be found under: https://github.com/openego/data_processing/blob/refactor/oedb-restructuring_v0.2/calc_geo_powerplants/development_res_ProxToNow_2050.sql"],
"Column": [
                   {"Name": "id",
                    "Description": "Primary ID",
                    "Unit": "" }, 
                   {"Name": "scenario_year",
                    "Description": "Scenario date",
                    "Unit": "Year" }, 
                   {"Name": "electrical_capacity",
                    "Description": "Electrical Capacity",
                    "Unit": "KW" }, 
                   {"Name": "generation_type",
                    "Description": "Generation type as wind, solar, biomass, etc.",
                    "Unit": "" }, 
                   {"Name": "generation_subtype",
                    "Description": "Generation type as wind onshore, wind offshore, solar_roof_mounted, etc.",
                    "Unit": "" }, 
                   {"Name": "thermal_capacity",
                    "Description": "Thermal capacity of CHP units",
                    "Unit": "KW" }, 
                   {"Name": "nuts",
                    "Description": "NUTS Region Code of NUTS 3",
                    "Unit": "" }, 
                   {"Name": "lon",
                    "Description": "Longitude",
                    "Unit": "" }, 
                   {"Name": "lat",
                    "Description": "Latitude",
                    "Unit": "" }, 
                   {"Name": "voltage_level",
                    "Description": "voltage level to which generator is connected (partly calculated based on installed capacity) Voltage level of Germany form 1 (Extra-high voltage) to 7 (Low voltage)",
                    "Unit": "" }, 
                   {"Name": "network_node",
                    "Description": "Connection point to the electricity grid based on BNetzA data",
                    "Unit": "" }, 
                   {"Name": "source",
                    "Description": "Name of source or abbreviation of source name",
                    "Unit": "" }, 
                   {"Name": "comment",
                    "Description": "Comment and description of e.g. methods, corrections, etc.",
                    "Unit": "" }, 
                   {"Name": "geom",
                    "Description": "Geometry Point",
                    "Unit": "" }, 
                   {"Name": "voltage",
                    "Description": "Calculated voltage level",
                    "Unit": "KV" }, 
                   {"Name": "subst_id",
                    "Description": "id of associated substation",
                    "Unit": "" }, 
                   {"Name": "otg_id",
                    "Description": "otg_id of associated substation",
                    "Unit": "" }, 
                   {"Name": "un_id",
                    "Description": "unified id for res and conv powerplants",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Wolf-Dieter Bunke",
                    "Mail": "wolf-dieter.bunke@uni-flensburg.de",
                    "Date":  "21.11.2016",
                    "Comment": "Creat Tabel and implement development method" },
                   {"Name": "Wolf-Dieter Bunke",
                    "Mail": "wolf-dieter.bunke@uni-flensburg.de",
                    "Date":  "07.02.2017",
                    "Comment": "Change of DB version, new allocation" }
                  ],
"Notes": ["Check licence, meta style V 0.01"],
"Licence":      [{
                    "Name":       "Open Database License (ODbL) v1.0",
		    "URL":        "http://opendatacommons.org/licenses/odbl/1.0/",
	            "Copyright":  "Europa-Universität Flensburg, Centre for Sustainable Energy Systems"}],
"Instructions for proper use": ["..."] 
}';


--
-- Name: ego_supply_res_powerplant_germany_to_region; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_res_powerplant_germany_to_region (
    re_id bigint NOT NULL,
    subst_id bigint,
    otg_id bigint,
    un_id bigint,
    nuts character varying(5),
    rs_0 character varying(12),
    id_vg250 bigint
);


--
-- Name: ego_supply_res_powerplant_germany_to_region_2050; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_res_powerplant_germany_to_region_2050 (
    re_id bigint NOT NULL,
    subst_id bigint,
    otg_id bigint,
    un_id bigint,
    nuts character varying(5),
    rs_0 character varying(12),
    id_vg250 bigint
);


--
-- Name: ego_supply_wpa_per_mvgd; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ego_supply_wpa_per_mvgd (
    id integer NOT NULL,
    subst_id integer,
    area_ha double precision,
    geom public.geometry(Polygon,3035)
);


--
-- Name: TABLE ego_supply_wpa_per_mvgd; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.ego_supply_wpa_per_mvgd IS '{
	"title": "eGo dataprocessing - WPA per MV Griddistrict",
	"description": "Potential areas for wind power plants - Wind Potential Area (wpa)",
	"language": [ "eng" ],
	"reference_date": "",
	"sources": [
		{"name": "eGo dataprocessing", "description": "v0.2.6", "url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "copyright": " " },
		{"name": "VerNetzen - Wind potential Area", "description": " ", "url": "http://oep.iks.cs.ovgu.de/dataedit/view/supply/vernetzen_wind_potential_area", "license": "ODbL-1.0", "copyright": "Â© VerNetzen"} ],
	"spatial": [
		{"extend": "Germany",
		"resolution": "50m"} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "Â© Reiner Lemoine Institut" } ],
	"contributors": [
		{"name": "Ludwig HÃ¼lk",	"email": "ludwig.huelk@rl-institut.de",
		"date": "01.10.2016", "comment": "Create table"},
		{"name": "Ludwig HÃ¼lk", "email": "ludwig.huelk@rl-institut.de",
		"date": "25.12.2016", "comment": "Add metadata"},
		{"name": "Ludwig HÃ¼lk", "email": "ludwig.huelk@rl-institut.de",
		"date": "25.12.2016", "comment": "Update to v0.2"},
		{"name": "Ludwig HÃ¼lk", "email": "ludwig.huelk@rl-institut.de",
		"date": "28.03.2017", "comment": "Update to v0.2.6"}],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "id", "description": "Unique identifier", "unit": "" },
				{"name": "subst_id", "description": "HVMV substation", "unit": "" },
				{"name": "area_ha", "description": "Area", "unit": "ha" },
				{"name": "geom", "description": "Geometry", "unit": "" }]},
		"meta_version": "1.2"}] }';


--
-- Name: ego_supply_wpa_per_mvgd_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ego_supply_wpa_per_mvgd_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ego_supply_wpa_per_mvgd_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ego_supply_wpa_per_mvgd_id_seq OWNED BY model_draft.ego_supply_wpa_per_mvgd.id;


--
-- Name: ioer_urban_share_industrial_centroid; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.ioer_urban_share_industrial_centroid (
    id integer NOT NULL,
    rid integer,
    ioer_share numeric,
    geom public.geometry(Point,3035)
);


--
-- Name: ioer_urban_share_industrial_centroid_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.ioer_urban_share_industrial_centroid_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ioer_urban_share_industrial_centroid_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.ioer_urban_share_industrial_centroid_id_seq OWNED BY model_draft.ioer_urban_share_industrial_centroid.id;


--
-- Name: landuse_calc; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.landuse_calc (
    id integer NOT NULL,
    source text,
    attribute text,
    count_int integer,
    area_ha numeric(15,1)
);


--
-- Name: manual_test; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.manual_test (
    id integer NOT NULL
);


--
-- Name: renpassgis_economic_weatherpoint_voronoi; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.renpassgis_economic_weatherpoint_voronoi (
    geom public.geometry(Polygon,4326),
    id integer NOT NULL
);


--
-- Name: TABLE renpassgis_economic_weatherpoint_voronoi; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.renpassgis_economic_weatherpoint_voronoi IS '{
"Name": "Voronoi weatherpoints",
"Source": [{
                  "Name": "open_eGo data-processing",
                  "URL":  "https://github.com/openego/data_processing" }],
"Reference date": "...",
"Date of collection": "...",
"Original file": "...",
"Spatial resolution": ["Germany"],
"Description": ["Voronoi cells calculated on the basis of weatherpoints from renpassGIS"],
"Column": [
                   {"Name": "geom",
                    "Description": "geometry",
                    "Unit": "" },
                   {"Name": "id",
                    "Description": "unique id",
                    "Unit": "" }],
"Changes":[
                   {"Name": "Mario Kropshofer",
                    "Mail": "mario.kropshofer2@stud.fh-flensburg.de",
                    "Date":  "04.10.2016",
                    "Comment": "..." }, 
                   {"Name": "Ilka Cussmann",
                    "Mail": "",
                    "Date":  "26.10.2016",
                    "Comment": "completed json-string" }
                  ],
"ToDo": ["add licence"],
"Licence": ["..."],
"Instructions for proper use": ["..."]
}';


--
-- Name: template_table; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.template_table (
    id integer NOT NULL,
    base_id integer,
    area_type text,
    geom_poly public.geometry(Polygon,3035),
    geom public.geometry(Point,3035)
);


--
-- Name: TABLE template_table; Type: COMMENT; Schema: model_draft; Owner: -
--

COMMENT ON TABLE model_draft.template_table IS '{
	"Name": "Template table for sql snippets",
	"Source": [{
					  "Name": "open_eGo",
					  "URL":  "https://github.com/openego/data_processing" }],
	"Reference date": "2016",
	"Date of collection": "2016-10-15",
	"Original file": "sql_templates.sql",
	"Spatial resolution": ["Germany"],
	"Description": ["The script collects useful sql templates for PostgreSQL and PostGIS"],
	"Column": 	[
					{"Name": "id", "Description": "Unique identifier", "Unit": "" },
					{"Name": "base_id", "Description": "ID of the base layer", "Unit": "" },
					{"Name": "area_type", "Description": "Classify lattice points (in, out)", "Unit": "" },
					{"Name": "geom_poly", "Description": "Geometry polygon", "Unit": "" },
					{"Name": "geom", "Description": "Geometry point", "Unit": "" }
				],
	"Changes":	[
					{"Name": "Ludwig Hülk", "Mail": "ludwig.huelk@rl-institut.de",
					"Date":  "15.10.2016", "Comment": "Created script" },
					{"Name": "Ludwig Hülk", "Mail": "ludwig.huelk@rl-institut.de",
					"Date":  "15.10.2016", "Comment": "Added metadata" }
				],
	"ToDo": ["Add more examples, "],
	"Licence": ["tba"],
	"Instructions for proper use": [""]
	}';


--
-- Name: template_table_id_seq; Type: SEQUENCE; Schema: model_draft; Owner: -
--

CREATE SEQUENCE model_draft.template_table_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: template_table_id_seq; Type: SEQUENCE OWNED BY; Schema: model_draft; Owner: -
--

ALTER SEQUENCE model_draft.template_table_id_seq OWNED BY model_draft.template_table.id;


--
-- Name: test; Type: TABLE; Schema: model_draft; Owner: -
--

CREATE TABLE model_draft.test (
    id integer NOT NULL
);


--
-- Name: _edit_base__id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public._edit_base__id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: _edit_base__id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public._edit_base__id_seq OWNED BY public._edit_base._id;


--
-- Name: _edit_new_base; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public._edit_new_base (
    _id bigint NOT NULL
);


--
-- Name: _edit_new_base__id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public._edit_new_base__id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: _edit_new_base__id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public._edit_new_base__id_seq OWNED BY public._edit_new_base._id;


--
-- Name: _insert_base__id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public._insert_base__id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: _insert_base__id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public._insert_base__id_seq OWNED BY public._insert_base._id;


--
-- Name: alembic_version; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.alembic_version (
    version_num character varying(32) NOT NULL
);


--
-- Name: api_columns_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.api_columns_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: api_columns; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.api_columns (
    column_name character varying(50),
    not_null boolean,
    data_type character varying(50),
    new_name character varying(50),
    reviewed boolean DEFAULT false,
    changed boolean DEFAULT false,
    id bigint DEFAULT nextval('public.api_columns_id_seq'::regclass) NOT NULL,
    c_schema character varying(50),
    c_table character varying(50)
);


--
-- Name: api_constraints_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.api_constraints_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: api_constraints; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.api_constraints (
    id bigint DEFAULT nextval('public.api_constraints_id_seq'::regclass) NOT NULL,
    action character varying(10),
    constraint_type character varying(30),
    constraint_name character varying(50),
    constraint_parameter character varying(50),
    reference_table character varying(50),
    reference_column character varying(50),
    c_schema character varying(50),
    c_table character varying(50),
    reviewed boolean DEFAULT false,
    changed boolean DEFAULT false
);


--
-- Name: ckan_datastore; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.ckan_datastore (
    id integer NOT NULL,
    schema character varying(30),
    "table" character varying(30),
    resource character varying(40),
    dataset character varying(30)
);


--
-- Name: ckan_datastore_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.ckan_datastore_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ckan_datastore_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.ckan_datastore_id_seq OWNED BY public.ckan_datastore.id;


--
-- Name: entries_entries_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.entries_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: entry_group_entries_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.entry_group_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: entry_types_entry_types_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.entry_types_entry_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: group_types_group_types_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.group_types_group_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: groups_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.groups_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: jabref_database_database_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.jabref_database_database_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: meta_search; Type: MATERIALIZED VIEW; Schema: public; Owner: -
--

CREATE MATERIALIZED VIEW public.meta_search AS
 SELECT pg_namespace.nspname AS schema,
    pg_class.relname AS "table",
    to_tsvector('english'::regconfig, ((pg_class.relname)::text || obj_description(pg_class.oid))) AS comment
   FROM (pg_class
     JOIN pg_namespace ON ((pg_namespace.oid = pg_class.relnamespace)))
  WHERE ((pg_class.relkind = ANY (ARRAY['r'::"char", 'v'::"char"])) AND has_table_privilege("current_user"(), pg_class.oid, 'SELECT'::text) AND (NOT ((pg_namespace.nspname ~ '^pg_'::text) OR (pg_namespace.nspname = 'information_schema'::name))) AND (NOT (pg_namespace.nspname ~ '^_'::text)))
  ORDER BY pg_namespace.nspname
  WITH NO DATA;


--
-- Name: model_tags; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.model_tags (
    tag bigint NOT NULL,
    model bigint NOT NULL
);


--
-- Name: reference_to_entries; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.reference_to_entries (
    ref_id bigint NOT NULL,
    ref_data_json json,
    schema_name character varying NOT NULL,
    tbl_name character varying NOT NULL,
    changed_by character varying(20) DEFAULT "current_user"(),
    lastmodified timestamp without time zone DEFAULT now()
);


--
-- Name: search_query; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.search_query (
    id bigint NOT NULL,
    query text
);


--
-- Name: search_query_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.search_query_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: search_query_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.search_query_id_seq OWNED BY public.search_query.id;


--
-- Name: strings_strings_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.strings_strings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: table_tags; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.table_tags (
    tag bigint,
    schema_name character varying(100),
    table_name character varying(100)
);


--
-- Name: tag_query; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.tag_query (
    id bigint NOT NULL,
    tag bigint NOT NULL,
    query_id bigint NOT NULL
);


--
-- Name: tag_query_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.tag_query_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tag_query_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.tag_query_id_seq OWNED BY public.tag_query.id;


--
-- Name: tags; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.tags (
    id bigint NOT NULL,
    name character varying(40),
    color integer
);


--
-- Name: tags_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: tags_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.tags_id_seq OWNED BY public.tags.id;


--
-- Name: test_cor; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.test_cor (
    id bigint NOT NULL,
    origin character varying(2000),
    method character varying(3000),
    assumption json
);


--
-- Name: entries_entries_id_seq; Type: SEQUENCE; Schema: reference; Owner: -
--

CREATE SEQUENCE reference.entries_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: entries_entries_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: -
--

ALTER SEQUENCE reference.entries_entries_id_seq OWNED BY reference.entries.entries_id;


--
-- Name: entry_group_entries_id_seq; Type: SEQUENCE; Schema: reference; Owner: -
--

CREATE SEQUENCE reference.entry_group_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: entry_group_entries_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: -
--

ALTER SEQUENCE reference.entry_group_entries_id_seq OWNED BY reference.entry_group.entries_id;


--
-- Name: entry_types; Type: TABLE; Schema: reference; Owner: -
--

CREATE TABLE reference.entry_types (
    entry_types_id integer NOT NULL,
    label text,
    abstract character varying(3) DEFAULT NULL::character varying,
    address character varying(3) DEFAULT NULL::character varying,
    annote character varying(3) DEFAULT NULL::character varying,
    author character varying(3) DEFAULT NULL::character varying,
    booktitle character varying(3) DEFAULT NULL::character varying,
    chapter character varying(3) DEFAULT NULL::character varying,
    comment character varying(3) DEFAULT NULL::character varying,
    crossref character varying(3) DEFAULT NULL::character varying,
    doi character varying(3) DEFAULT NULL::character varying,
    edition character varying(3) DEFAULT NULL::character varying,
    editor character varying(3) DEFAULT NULL::character varying,
    eid character varying(3) DEFAULT NULL::character varying,
    file character varying(3) DEFAULT NULL::character varying,
    howpublished character varying(3) DEFAULT NULL::character varying,
    institution character varying(3) DEFAULT NULL::character varying,
    journal character varying(3) DEFAULT NULL::character varying,
    key_ character varying(3) DEFAULT NULL::character varying,
    keywords character varying(3) DEFAULT NULL::character varying,
    language character varying(3) DEFAULT NULL::character varying,
    location character varying(3) DEFAULT NULL::character varying,
    month character varying(3) DEFAULT NULL::character varying,
    note character varying(3) DEFAULT NULL::character varying,
    number character varying(3) DEFAULT NULL::character varying,
    organization character varying(3) DEFAULT NULL::character varying,
    pages character varying(3) DEFAULT NULL::character varying,
    pdf character varying(3) DEFAULT NULL::character varying,
    pmid character varying(3) DEFAULT NULL::character varying,
    priority character varying(3) DEFAULT NULL::character varying,
    ps character varying(3) DEFAULT NULL::character varying,
    publisher character varying(3) DEFAULT NULL::character varying,
    qualityassured character varying(3) DEFAULT NULL::character varying,
    ranking character varying(3) DEFAULT NULL::character varying,
    relevance character varying(3) DEFAULT NULL::character varying,
    school character varying(3) DEFAULT NULL::character varying,
    search character varying(3) DEFAULT NULL::character varying,
    series character varying(3) DEFAULT NULL::character varying,
    title character varying(3) DEFAULT NULL::character varying,
    type character varying(3) DEFAULT NULL::character varying,
    url character varying(3) DEFAULT NULL::character varying,
    volume character varying(3) DEFAULT NULL::character varying,
    year character varying(3) DEFAULT NULL::character varying
);


--
-- Name: entry_types_entry_types_id_seq; Type: SEQUENCE; Schema: reference; Owner: -
--

CREATE SEQUENCE reference.entry_types_entry_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: entry_types_entry_types_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: -
--

ALTER SEQUENCE reference.entry_types_entry_types_id_seq OWNED BY reference.entry_types.entry_types_id;


--
-- Name: group_types; Type: TABLE; Schema: reference; Owner: -
--

CREATE TABLE reference.group_types (
    group_types_id integer NOT NULL,
    label character varying(100) DEFAULT NULL::character varying
);


--
-- Name: group_types_group_types_id_seq; Type: SEQUENCE; Schema: reference; Owner: -
--

CREATE SEQUENCE reference.group_types_group_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: group_types_group_types_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: -
--

ALTER SEQUENCE reference.group_types_group_types_id_seq OWNED BY reference.group_types.group_types_id;


--
-- Name: groups; Type: TABLE; Schema: reference; Owner: -
--

CREATE TABLE reference.groups (
    groups_id integer NOT NULL,
    group_types_id integer,
    label character varying(100) DEFAULT NULL::character varying,
    database_id integer,
    parent_id integer,
    search_field character varying(100) DEFAULT NULL::character varying,
    search_expression character varying(200) DEFAULT NULL::character varying,
    case_sensitive boolean,
    reg_exp boolean,
    hierarchical_context integer
);


--
-- Name: groups_groups_id_seq; Type: SEQUENCE; Schema: reference; Owner: -
--

CREATE SEQUENCE reference.groups_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: groups_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: -
--

ALTER SEQUENCE reference.groups_groups_id_seq OWNED BY reference.groups.groups_id;


--
-- Name: jabref_database; Type: TABLE; Schema: reference; Owner: -
--

CREATE TABLE reference.jabref_database (
    database_id integer NOT NULL,
    database_name character varying(64) NOT NULL,
    md5_path character varying(32) NOT NULL
);


--
-- Name: jabref_database_database_id_seq; Type: SEQUENCE; Schema: reference; Owner: -
--

CREATE SEQUENCE reference.jabref_database_database_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: jabref_database_database_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: -
--

ALTER SEQUENCE reference.jabref_database_database_id_seq OWNED BY reference.jabref_database.database_id;


--
-- Name: reference_to_entries; Type: TABLE; Schema: reference; Owner: -
--

CREATE TABLE reference.reference_to_entries (
    ref_id bigint NOT NULL,
    ref_data_json json,
    schema_name character varying NOT NULL,
    tbl_name character varying NOT NULL,
    changed_by character varying(20) DEFAULT "current_user"(),
    lastmodified timestamp without time zone DEFAULT now()
);


--
-- Name: strings; Type: TABLE; Schema: reference; Owner: -
--

CREATE TABLE reference.strings (
    strings_id integer NOT NULL,
    label character varying(100) DEFAULT NULL::character varying,
    content character varying(200) DEFAULT NULL::character varying,
    database_id integer
);


--
-- Name: strings_strings_id_seq; Type: SEQUENCE; Schema: reference; Owner: -
--

CREATE SEQUENCE reference.strings_strings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: strings_strings_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: -
--

ALTER SEQUENCE reference.strings_strings_id_seq OWNED BY reference.strings.strings_id;


--
-- Name: comment_test; Type: TABLE; Schema: sandbox; Owner: -
--

CREATE TABLE sandbox.comment_test (
    id integer NOT NULL,
    data character varying(20),
    d2 character varying(20)
);


--
-- Name: comment_test_id_seq; Type: SEQUENCE; Schema: sandbox; Owner: -
--

CREATE SEQUENCE sandbox.comment_test_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: comment_test_id_seq; Type: SEQUENCE OWNED BY; Schema: sandbox; Owner: -
--

ALTER SEQUENCE sandbox.comment_test_id_seq OWNED BY sandbox.comment_test.id;


--
-- Name: manual_pk; Type: TABLE; Schema: sandbox; Owner: -
--

CREATE TABLE sandbox.manual_pk (
    id integer NOT NULL,
    data character varying(50)
);


--
-- Name: user_id_seq; Type: SEQUENCE; Schema: sandbox; Owner: -
--

CREATE SEQUENCE sandbox.user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: user_tmp; Type: TABLE; Schema: sandbox; Owner: -
--

CREATE TABLE sandbox.user_tmp (
    id integer NOT NULL,
    name character varying(50),
    foo integer
);


--
-- Name: user_tmp_id_seq; Type: SEQUENCE; Schema: sandbox; Owner: -
--

CREATE SEQUENCE sandbox.user_tmp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: user_tmp_id_seq; Type: SEQUENCE OWNED BY; Schema: sandbox; Owner: -
--

ALTER SEQUENCE sandbox.user_tmp_id_seq OWNED BY sandbox.user_tmp.id;


--
-- Name: users; Type: TABLE; Schema: sandbox; Owner: -
--

CREATE TABLE sandbox.users (
    user_id integer NOT NULL,
    test1 character(5),
    test2 numeric(5,0),
    parent_user_id integer
);


--
-- Name: users_user_id_seq; Type: SEQUENCE; Schema: sandbox; Owner: -
--

CREATE SEQUENCE sandbox.users_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: users_user_id_seq; Type: SEQUENCE OWNED BY; Schema: sandbox; Owner: -
--

ALTER SEQUENCE sandbox.users_user_id_seq OWNED BY sandbox.users.user_id;


--
-- Name: population2; Type: TABLE; Schema: schema1; Owner: -
--

CREATE TABLE schema1.population2 (
    id integer NOT NULL,
    name character varying(50),
    address character varying(150)
);


--
-- Name: table_all_columns; Type: TABLE; Schema: schema1; Owner: -
--

CREATE TABLE schema1.table_all_columns (
    id integer NOT NULL,
    col_varchar123 character varying(123),
    col_intarr integer[],
    col_bigint_true bigint,
    col_bigint_false bigint NOT NULL,
    col_bit_true bit(1),
    col_bit_false bit(1) NOT NULL,
    col_boolean_true boolean,
    col_boolean_false boolean NOT NULL,
    col_char_true character(1),
    col_char_false character(1) NOT NULL,
    col_date_true date,
    col_date_false date NOT NULL,
    col_decimal_true numeric,
    col_decimal_false numeric NOT NULL,
    col_float_true double precision,
    col_float_false double precision NOT NULL,
    col_integer_true integer,
    col_integer_false integer NOT NULL,
    col_interval_true interval,
    col_interval_false interval NOT NULL,
    col_json_true json,
    col_json_false json NOT NULL,
    col_nchar_true character(1),
    col_nchar_false character(1) NOT NULL,
    col_numeric_true numeric,
    col_numeric_false numeric NOT NULL,
    col_real_true real,
    col_real_false real NOT NULL,
    col_smallint_true smallint,
    col_smallint_false smallint NOT NULL,
    col_timestamp_true timestamp without time zone,
    col_timestamp_false timestamp without time zone NOT NULL,
    col_text_true text,
    col_text_false text NOT NULL,
    col_time_true time without time zone,
    col_time_false time without time zone NOT NULL,
    col_varchar_true character varying,
    col_varchar_false character varying NOT NULL,
    col_character_varying_true character varying,
    col_character_varying_false character varying NOT NULL
);


--
-- Name: table_defaults; Type: TABLE; Schema: schema1; Owner: -
--

CREATE TABLE schema1.table_defaults (
    id integer NOT NULL,
    id2 integer,
    text character varying
);


--
-- Name: ego_dp_res_powerplant; Type: TABLE; Schema: supply; Owner: -
--

CREATE TABLE supply.ego_dp_res_powerplant (
    version text NOT NULL,
    id bigint NOT NULL,
    start_up_date timestamp without time zone,
    electrical_capacity numeric,
    generation_type text,
    generation_subtype character varying,
    thermal_capacity numeric,
    city character varying,
    postcode character varying,
    address character varying,
    lon numeric,
    lat numeric,
    gps_accuracy character varying,
    validation character varying,
    notification_reason character varying,
    eeg_id character varying,
    tso double precision,
    tso_eic character varying,
    dso_id character varying,
    dso character varying,
    voltage_level_var character varying,
    network_node character varying,
    power_plant_id character varying,
    source character varying,
    comment character varying,
    geom public.geometry(Point,4326),
    subst_id bigint,
    otg_id bigint,
    un_id bigint,
    voltage_level smallint,
    la_id integer,
    mvlv_subst_id integer,
    rea_sort integer,
    rea_flag character varying,
    rea_geom_line public.geometry(LineString,3035),
    rea_geom_new public.geometry(Point,3035)
);


--
-- Name: TABLE ego_dp_res_powerplant; Type: COMMENT; Schema: supply; Owner: -
--

COMMENT ON TABLE supply.ego_dp_res_powerplant IS '{
	"title": "eGo dataprocessing - Renewable powerlants",
	"description": "",
	"language": [ "eng", "ger" ],
	"reference_date": " ",
	"sources": [
		{"name": "eGo dataprocessing", "description": " ", "url": "https://github.com/openego/data_processing", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "copyright": "© Reiner Lemoine Institut"},
		{"name": "OpenStreetMap", "description": " ", "url": "http://www.openstreetmap.org/", "license": "Open Database License (ODbL) v1.0", "copyright": "© OpenStreetMap contributors"},
		{"name": "BKG - Verwaltungsgebiete 1:250.000 (vg250)", "description": " ", "url": "http://www.geodatenzentrum.de/", "license": "Geodatenzugangsgesetz (GeoZG)", "copyright": "© GeoBasis-DE / BKG 2016 (data changed)"},
		{"name": "Statistisches Bundesamt (Destatis) - Zensus2011", "description": " ", "url": "https://www.destatis.de/DE/Methoden/Zensus_/Zensus.html", "license": "Datenlizenz Deutschland – Namensnennung – Version 2.0", "copyright": "© Statistisches Bundesamt, Wiesbaden, Genesis-Online, 2016; Datenlizenz by-2-0"} ],
	"spatial": [
		{"extend": "Gemany",
		"resolution": " "} ],
	"license": [
		{"id": "ODbL-1.0",
		"name": "Open Data Commons Open Database License 1.0",
		"version": "1.0",
		"url": "https://opendatacommons.org/licenses/odbl/1.0/",
		"instruction": "You are free: To Share, To Create, To Adapt; As long as you: Attribute, Share-Alike, Keep open!",
		"copyright": "© Reiner Lemoine Institut"} ],
	"contributors": [
		{"name": "Ludee", "email": " ", "date": "2017-04-13", "comment": "Create table" } ],
	"resources": [{
		"schema": {
			"fields": [
				{"name": "version", 	"description": "Version id", "unit": "" },
				{"name": "id", 		"description": "Unique identifier", "unit": "" }
				 ]},
		"meta_version": "1.2"}] }';


--
-- Name: forwind_oeko_renewable_capacity_per_federalstate_id_seq; Type: SEQUENCE; Schema: supply; Owner: -
--

CREATE SEQUENCE supply.forwind_oeko_renewable_capacity_per_federalstate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: forwind_oeko_renewable_capacity_per_federalstate_id_seq; Type: SEQUENCE OWNED BY; Schema: supply; Owner: -
--

ALTER SEQUENCE supply.forwind_oeko_renewable_capacity_per_federalstate_id_seq OWNED BY supply.forwind_oeko_renewable_capacity_per_federalstate.id;


--
-- Name: table_all_columns; Type: TABLE; Schema: test; Owner: -
--

CREATE TABLE test.table_all_columns (
    id bigint NOT NULL,
    col_varchar123 character varying(123),
    col_intarr integer[],
    col_bigint_true bigint,
    col_bigint_false bigint,
    col_bit_true bytea,
    col_bit_false bytea,
    col_boolean_true boolean,
    col_boolean_false boolean,
    col_char_true character(1),
    col_char_false character(1),
    col_date_true date,
    col_date_false date,
    col_decimal_true numeric,
    col_decimal_false numeric,
    col_float_true numeric,
    col_float_false numeric,
    col_integer_true integer,
    col_integer_false integer,
    col_interval_true interval,
    col_interval_false interval,
    col_json_true json,
    col_json_false json,
    col_nchar_true character(1),
    col_nchar_false character(1),
    col_numeric_true numeric,
    col_numeric_false numeric,
    col_real_true real,
    col_real_false real,
    col_smallint_true smallint,
    col_smallint_false smallint,
    col_timestamp_true timestamp without time zone,
    col_timestamp_false timestamp without time zone,
    col_text_true text,
    col_text_false text,
    col_time_true time without time zone,
    col_time_false time without time zone,
    col_varchar_true character varying,
    col_varchar_false character varying,
    col_character_varying_true character varying,
    col_character_varying_false character varying
);


--
-- Name: table_all_columns_id_seq; Type: SEQUENCE; Schema: test; Owner: -
--

CREATE SEQUENCE test.table_all_columns_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: table_all_columns_id_seq; Type: SEQUENCE OWNED BY; Schema: test; Owner: -
--

ALTER SEQUENCE test.table_all_columns_id_seq OWNED BY test.table_all_columns.id;


--
-- Name: table_defaults; Type: TABLE; Schema: test; Owner: -
--

CREATE TABLE test.table_defaults (
    id bigint NOT NULL,
    id2 integer,
    text character varying
);


--
-- Name: table_defaults_id_seq; Type: SEQUENCE; Schema: test; Owner: -
--

CREATE SEQUENCE test.table_defaults_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: table_defaults_id_seq; Type: SEQUENCE OWNED BY; Schema: test; Owner: -
--

ALTER SEQUENCE test.table_defaults_id_seq OWNED BY test.table_defaults.id;


--
-- Name: _id; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: assumption; Type: DEFAULT; Schema: _demand; Owner: -
--

ALTER TABLE ONLY _demand._ego_dp_loadarea_cor ALTER COLUMN assumption SET DEFAULT '[]'::json;


--
-- Name: assumption; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_cor ALTER COLUMN assumption SET DEFAULT '[]'::json;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_ehv_griddistrict_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_ehv_griddistrict_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_ehv_griddistrict_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_ehv_griddistrict_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_ehv_griddistrict_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_lv_griddistrict_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_lv_griddistrict_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_lv_griddistrict_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_lv_griddistrict_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._ego_dp_lv_griddistrict_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_deu_voronoi_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_deu_voronoi_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_deu_voronoi_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_deu_voronoi_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_deu_voronoi_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_dummy_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_dummy_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_dummy_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_dummy_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._substations_dummy_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._voronoi_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._voronoi_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._voronoi_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._voronoi_insert ALTER COLUMN id SET DEFAULT nextval('grid.voronoi_id_seq'::regclass);


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._voronoi_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._voronoi_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_gridcells_qgis_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_gridcells_qgis_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_gridcells_qgis_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_gridcells_qgis_insert ALTER COLUMN id SET DEFAULT nextval('grid.znes_deu_gridcells_qgis_id_seq'::regclass);


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_gridcells_qgis_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_gridcells_qgis_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_filtered_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_filtered_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_filtered_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: subst_id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_filtered_insert ALTER COLUMN subst_id SET DEFAULT nextval('grid.znes_deu_substations_filtered_subst_id_seq'::regclass);


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_filtered_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_filtered_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_insert ALTER COLUMN id SET DEFAULT nextval('grid.uw_id_seq'::regclass);


--
-- Name: _applied; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._znes_deu_substations_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20150101_1_sta_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20150101_1_sta_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20150101_1_sta_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20150101_1_sta_insert ALTER COLUMN id SET DEFAULT nextval('model_draft.bkg_vg250_20150101_1_sta_id_seq'::regclass);


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20150101_1_sta_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20150101_1_sta_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20160101_1_sta_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20160101_1_sta_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20160101_1_sta_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20160101_1_sta_insert ALTER COLUMN id SET DEFAULT nextval('model_draft.bkg_vg250_20160101_1_sta_id_seq'::regclass);


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20160101_1_sta_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._bkg_vg250_20160101_1_sta_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._dea_germany_per_load_area_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._dea_germany_per_load_area_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._dea_germany_per_load_area_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._dea_germany_per_load_area_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._dea_germany_per_load_area_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_per_method_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_per_method_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_per_method_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_per_method_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_per_method_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_hv_largescaleconsumer_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_hv_largescaleconsumer_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_hv_largescaleconsumer_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_hv_largescaleconsumer_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_hv_largescaleconsumer_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _submitted; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_insert ALTER COLUMN id SET DEFAULT nextval('model_draft.example_table_id_seq'::regclass);


--
-- Name: _id; Type: DEFAULT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entries_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entries_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entries_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: entries_id; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entries_insert ALTER COLUMN entries_id SET DEFAULT nextval('reference.entries_entries_id_seq'::regclass);


--
-- Name: jabref_eid; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entries_insert ALTER COLUMN jabref_eid SET DEFAULT NULL::character varying;


--
-- Name: cite_key; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entries_insert ALTER COLUMN cite_key SET DEFAULT NULL::character varying;


--
-- Name: _applied; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entries_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entries_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entry_group_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entry_group_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entry_group_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: entries_id; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entry_group_insert ALTER COLUMN entries_id SET DEFAULT nextval('reference.entry_group_entries_id_seq'::regclass);


--
-- Name: _applied; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entry_group_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _reference; Owner: -
--

ALTER TABLE ONLY _reference._entry_group_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_delete ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_delete ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_delete ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_delete ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_delete ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_delete ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_delete ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_delete ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_delete ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_delete ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_delete ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_delete ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_delete ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_delete ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_delete ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_delete ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_delete ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_delete ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_delete ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_delete ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_edit ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_edit ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_edit ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_edit ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_edit ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_insert ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _submitted; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_conventional_powerplant_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_conventional_powerplant_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_conventional_powerplant_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_conventional_powerplant_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_conventional_powerplant_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_dp_conv_powerplant_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_dp_conv_powerplant_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_dp_conv_powerplant_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: _applied; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_dp_conv_powerplant_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._ego_dp_conv_powerplant_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: _submitted; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._forwind_oeko_renewable_capacity_per_federalstate_insert ALTER COLUMN _submitted SET DEFAULT now();


--
-- Name: _autocheck; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._forwind_oeko_renewable_capacity_per_federalstate_insert ALTER COLUMN _autocheck SET DEFAULT false;


--
-- Name: _humancheck; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._forwind_oeko_renewable_capacity_per_federalstate_insert ALTER COLUMN _humancheck SET DEFAULT false;


--
-- Name: id; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._forwind_oeko_renewable_capacity_per_federalstate_insert ALTER COLUMN id SET DEFAULT nextval('supply.forwind_oeko_renewable_capacity_per_federalstate_id_seq'::regclass);


--
-- Name: _applied; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._forwind_oeko_renewable_capacity_per_federalstate_insert ALTER COLUMN _applied SET DEFAULT false;


--
-- Name: _id; Type: DEFAULT; Schema: _supply; Owner: -
--

ALTER TABLE ONLY _supply._forwind_oeko_renewable_capacity_per_federalstate_insert ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: boundaries; Owner: -
--

ALTER TABLE ONLY boundaries.bkg_gn250_b ALTER COLUMN id SET DEFAULT nextval('boundaries.bkg_gn250_b_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.voronoi ALTER COLUMN id SET DEFAULT nextval('grid.voronoi_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.znes_deu_gridcells_qgis ALTER COLUMN id SET DEFAULT nextval('grid.znes_deu_gridcells_qgis_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.znes_deu_substations ALTER COLUMN id SET DEFAULT nextval('grid.uw_id_seq'::regclass);


--
-- Name: subst_id; Type: DEFAULT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.znes_deu_substations_filtered ALTER COLUMN subst_id SET DEFAULT nextval('grid.znes_deu_substations_filtered_subst_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.bkg_vg250_20150101_1_sta ALTER COLUMN id SET DEFAULT nextval('model_draft.bkg_vg250_20150101_1_sta_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.bkg_vg250_20160101_1_sta ALTER COLUMN id SET DEFAULT nextval('model_draft.bkg_vg250_20160101_1_sta_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_data_processing_clean_run ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_data_processing_clean_run_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_data_processing_results ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_data_processing_results_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_dea_agricultural_sector_per_grid_district ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_dea_agricultural_sector_per_grid_district_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_hvmv_demand ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_demand_hvmv_demand_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_la_osm ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_demand_la_osm_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_la_zensus ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_demand_la_zensus_id_seq'::regclass);


--
-- Name: cid; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_la_zensus_cluster ALTER COLUMN cid SET DEFAULT nextval('model_draft.ego_demand_la_zensus_cluster_cid_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_load_collect ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_demand_load_collect_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_load_collect_buffer100 ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_demand_load_collect_buffer100_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_load_melt ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_demand_load_melt_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_loadarea ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_demand_loadarea_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_loadarea_peak_load ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_demand_loadarea_peak_load_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_loadarea_voi ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_demand_loadarea_voi_id_seq'::regclass);


--
-- Name: un_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_loads ALTER COLUMN un_id SET DEFAULT nextval('model_draft.ego_demand_loads_un_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_deu_loads_osm ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_deu_loads_osm_id_seq'::regclass);


--
-- Name: subst_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_ehv_substation ALTER COLUMN subst_id SET DEFAULT nextval('model_draft.ego_ehv_substation_subst_id_seq'::regclass);


--
-- Name: subst_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_ehv_substation ALTER COLUMN subst_id SET DEFAULT nextval('model_draft.ego_grid_ehv_substation_subst_id_seq'::regclass);


--
-- Name: subst_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hvmv_substation ALTER COLUMN subst_id SET DEFAULT nextval('model_draft.ego_grid_hvmv_substation_subst_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hvmv_substation_voronoi ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_hvmv_substation_voronoi_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hvmv_substation_voronoi_cut ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_hvmv_substation_voronoi_cut_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hvmv_substation_voronoi_cut_nn_collect ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_hvmv_substation_voronoi_cut_nn_collect_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict_cut ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_lv_griddistrict_cut_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict_cut_nn ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_lv_griddistrict_cut_nn_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_loadarea_rest ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_lv_loadarea_rest_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_collect ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_mv_griddistrict_collect_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_mv_griddistrict_dump_id_seq1'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_0sub ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_mv_griddistrict_dump_0sub_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_1sub ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_mv_griddistrict_dump_1sub_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_nn_collect ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_mv_griddistrict_dump_nn_collect_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_nn_line ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_mv_griddistrict_dump_nn_line_id_seq'::regclass);


--
-- Name: grid_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_visualization_bunch ALTER COLUMN grid_id SET DEFAULT nextval('model_draft.ego_grid_mv_visualization_bunch_grid_id_seq'::regclass);


--
-- Name: grid_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_visualization_bunch_paper1 ALTER COLUMN grid_id SET DEFAULT nextval('model_draft.ego_grid_mv_visualization_bunch_paper1_grid_id_seq'::regclass);


--
-- Name: mvlv_subst_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mvlv_substation ALTER COLUMN mvlv_subst_id SET DEFAULT nextval('model_draft.ego_grid_mvlv_substation_mvlv_subst_id_seq'::regclass);


--
-- Name: mvlv_subst_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mvlv_substation_paper ALTER COLUMN mvlv_subst_id SET DEFAULT nextval('model_draft.ego_grid_mvlv_substation_paper_mvlv_subst_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mvlv_substation_voronoi ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_grid_mvlv_substation_voronoi_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_lattice_360m_lv ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_lattice_360m_lv_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_lattice_500m ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_lattice_500m_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_lattice_50m ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_lattice_50m_id_seq'::regclass);


--
-- Name: subst_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_mv_griddistrict ALTER COLUMN subst_id SET DEFAULT nextval('model_draft.ego_mv_griddistrict_subst_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_agriculture_per_mvgd ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_agriculture_per_mvgd_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_deu_street_streetcrossing ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_deu_street_streetcrossing_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_griddistrict_1_residential ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_sector_per_griddistrict_1_residential_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_griddistrict_2_retail ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_sector_per_griddistrict_2_retail_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_griddistrict_3_industrial ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_sector_per_griddistrict_3_industrial_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_griddistrict_4_agricultural ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_sector_per_griddistrict_4_agricultural_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_lvgd_1_residential ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_sector_per_lvgd_1_residential_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_lvgd_2_retail ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_sector_per_lvgd_2_retail_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_lvgd_3_industrial ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_sector_per_lvgd_3_industrial_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_lvgd_4_agricultural ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_osm_sector_per_lvgd_4_agricultural_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_political_boundary_bkg_vg250_6_gem_clean ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_political_boundary_bkg_vg250_6_gem_clean_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_scenario_log ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_scenario_log_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_scenario_overview ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_scenario_overview_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_social_zensus_load ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_social_zensus_load_id_seq'::regclass);


--
-- Name: cid; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_social_zensus_load_cluster ALTER COLUMN cid SET DEFAULT nextval('model_draft.ego_social_zensus_load_cluster_cid_seq'::regclass);


--
-- Name: un_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_generator ALTER COLUMN un_id SET DEFAULT nextval('model_draft.ego_supply_generator_un_id_seq'::regclass);


--
-- Name: un_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_generator_nep2035 ALTER COLUMN un_id SET DEFAULT nextval('model_draft.ego_supply_generator_nep2035_un_id_seq'::regclass);


--
-- Name: un_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_generator_test ALTER COLUMN un_id SET DEFAULT nextval('model_draft.ego_supply_generator_test_un_id_seq'::regclass);


--
-- Name: farm_id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea_m2_windfarm ALTER COLUMN farm_id SET DEFAULT nextval('model_draft.ego_supply_rea_m2_windfarm_farm_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_wpa_per_mvgd ALTER COLUMN id SET DEFAULT nextval('model_draft.ego_supply_wpa_per_mvgd_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.example_table ALTER COLUMN id SET DEFAULT nextval('model_draft.example_table_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ioer_urban_share_industrial_centroid ALTER COLUMN id SET DEFAULT nextval('model_draft.ioer_urban_share_industrial_centroid_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.template_table ALTER COLUMN id SET DEFAULT nextval('model_draft.template_table_id_seq'::regclass);


--
-- Name: _id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public._edit_base ALTER COLUMN _id SET DEFAULT nextval('public._edit_base__id_seq'::regclass);


--
-- Name: _id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public._edit_new_base ALTER COLUMN _id SET DEFAULT nextval('public._edit_new_base__id_seq'::regclass);


--
-- Name: _id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public._insert_base ALTER COLUMN _id SET DEFAULT nextval('public._insert_base__id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ckan_datastore ALTER COLUMN id SET DEFAULT nextval('public.ckan_datastore_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.search_query ALTER COLUMN id SET DEFAULT nextval('public.search_query_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tag_query ALTER COLUMN id SET DEFAULT nextval('public.tag_query_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tags ALTER COLUMN id SET DEFAULT nextval('public.tags_id_seq'::regclass);


--
-- Name: entries_id; Type: DEFAULT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entries ALTER COLUMN entries_id SET DEFAULT nextval('reference.entries_entries_id_seq'::regclass);


--
-- Name: entries_id; Type: DEFAULT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entry_group ALTER COLUMN entries_id SET DEFAULT nextval('reference.entry_group_entries_id_seq'::regclass);


--
-- Name: entry_types_id; Type: DEFAULT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entry_types ALTER COLUMN entry_types_id SET DEFAULT nextval('reference.entry_types_entry_types_id_seq'::regclass);


--
-- Name: group_types_id; Type: DEFAULT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.group_types ALTER COLUMN group_types_id SET DEFAULT nextval('reference.group_types_group_types_id_seq'::regclass);


--
-- Name: groups_id; Type: DEFAULT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.groups ALTER COLUMN groups_id SET DEFAULT nextval('reference.groups_groups_id_seq'::regclass);


--
-- Name: database_id; Type: DEFAULT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.jabref_database ALTER COLUMN database_id SET DEFAULT nextval('reference.jabref_database_database_id_seq'::regclass);


--
-- Name: strings_id; Type: DEFAULT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.strings ALTER COLUMN strings_id SET DEFAULT nextval('reference.strings_strings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.autoinc_pk ALTER COLUMN id SET DEFAULT nextval('sandbox.autoinc_pk_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.comment_test ALTER COLUMN id SET DEFAULT nextval('sandbox.comment_test_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.includes_defaults ALTER COLUMN id SET DEFAULT nextval('sandbox.includes_defaults_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.unicode_table ALTER COLUMN id SET DEFAULT nextval('sandbox.unicode_table_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.user_tmp ALTER COLUMN id SET DEFAULT nextval('sandbox.user_tmp_id_seq'::regclass);


--
-- Name: user_id; Type: DEFAULT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.users ALTER COLUMN user_id SET DEFAULT nextval('sandbox.users_user_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: supply; Owner: -
--

ALTER TABLE ONLY supply.forwind_oeko_renewable_capacity_per_federalstate ALTER COLUMN id SET DEFAULT nextval('supply.forwind_oeko_renewable_capacity_per_federalstate_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: test; Owner: -
--

ALTER TABLE ONLY test.table_all_columns ALTER COLUMN id SET DEFAULT nextval('test.table_all_columns_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: test; Owner: -
--

ALTER TABLE ONLY test.table_defaults ALTER COLUMN id SET DEFAULT nextval('test.table_defaults_id_seq'::regclass);


--
-- Name: _bkg_gn250_b_edit_pkey; Type: CONSTRAINT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_edit
    ADD CONSTRAINT _bkg_gn250_b_edit_pkey PRIMARY KEY (_id);


--
-- Name: _bkg_gn250_b_insert_pkey; Type: CONSTRAINT; Schema: _boundaries; Owner: -
--

ALTER TABLE ONLY _boundaries._bkg_gn250_b_insert
    ADD CONSTRAINT _bkg_gn250_b_insert_pkey PRIMARY KEY (_id);


--
-- Name: _ego_dp_loadarea_cor_pkey; Type: CONSTRAINT; Schema: _demand; Owner: -
--

ALTER TABLE ONLY _demand._ego_dp_loadarea_cor
    ADD CONSTRAINT _ego_dp_loadarea_cor_pkey PRIMARY KEY (_id);


--
-- Name: _deu_voronoi_cor_pkey; Type: CONSTRAINT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_cor
    ADD CONSTRAINT _deu_voronoi_cor_pkey PRIMARY KEY (_id);


--
-- Name: _deu_voronoi_edit_pkey; Type: CONSTRAINT; Schema: _grid; Owner: -
--

ALTER TABLE ONLY _grid._deu_voronoi_edit
    ADD CONSTRAINT _deu_voronoi_edit_pkey PRIMARY KEY (_id);


--
-- Name: _destatis_zensus_population_per_ha_inside_edit_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_edit
    ADD CONSTRAINT _destatis_zensus_population_per_ha_inside_edit_pkey PRIMARY KEY (_id);


--
-- Name: _destatis_zensus_population_per_ha_inside_insert_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._destatis_zensus_population_per_ha_inside_insert
    ADD CONSTRAINT _destatis_zensus_population_per_ha_inside_insert_pkey PRIMARY KEY (_id);


--
-- Name: _ego_dea_allocation_edit_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_edit
    ADD CONSTRAINT _ego_dea_allocation_edit_pkey PRIMARY KEY (_id);


--
-- Name: _ego_dea_allocation_insert_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_dea_allocation_insert
    ADD CONSTRAINT _ego_dea_allocation_insert_pkey PRIMARY KEY (_id);


--
-- Name: _ego_demand_load_collect_edit_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_edit
    ADD CONSTRAINT _ego_demand_load_collect_edit_pkey PRIMARY KEY (_id);


--
-- Name: _ego_demand_load_collect_insert_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_demand_load_collect_insert
    ADD CONSTRAINT _ego_demand_load_collect_insert_pkey PRIMARY KEY (_id);


--
-- Name: _ego_grid_hvmv_substation_edit_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_edit
    ADD CONSTRAINT _ego_grid_hvmv_substation_edit_pkey PRIMARY KEY (_id);


--
-- Name: _ego_grid_hvmv_substation_insert_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_hvmv_substation_insert
    ADD CONSTRAINT _ego_grid_hvmv_substation_insert_pkey PRIMARY KEY (_id);


--
-- Name: _ego_grid_pf_hv_line_edit_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_edit
    ADD CONSTRAINT _ego_grid_pf_hv_line_edit_pkey PRIMARY KEY (_id);


--
-- Name: _ego_grid_pf_hv_line_insert_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._ego_grid_pf_hv_line_insert
    ADD CONSTRAINT _ego_grid_pf_hv_line_insert_pkey PRIMARY KEY (_id);


--
-- Name: _example_table_edit_pkey; Type: CONSTRAINT; Schema: _model_draft; Owner: -
--

ALTER TABLE ONLY _model_draft._example_table_edit
    ADD CONSTRAINT _example_table_edit_pkey PRIMARY KEY (_id);


--
-- Name: _autoinc_pk_edit_pkey; Type: CONSTRAINT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_edit
    ADD CONSTRAINT _autoinc_pk_edit_pkey PRIMARY KEY (_id);


--
-- Name: _autoinc_pk_insert_pkey; Type: CONSTRAINT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._autoinc_pk_insert
    ADD CONSTRAINT _autoinc_pk_insert_pkey PRIMARY KEY (_id);


--
-- Name: _includes_defaults_edit_pkey; Type: CONSTRAINT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_edit
    ADD CONSTRAINT _includes_defaults_edit_pkey PRIMARY KEY (_id);


--
-- Name: _includes_defaults_insert_pkey; Type: CONSTRAINT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._includes_defaults_insert
    ADD CONSTRAINT _includes_defaults_insert_pkey PRIMARY KEY (_id);


--
-- Name: _manual_pk_edit_pkey; Type: CONSTRAINT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_edit
    ADD CONSTRAINT _manual_pk_edit_pkey PRIMARY KEY (_id);


--
-- Name: _manual_pk_insert_pkey; Type: CONSTRAINT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._manual_pk_insert
    ADD CONSTRAINT _manual_pk_insert_pkey PRIMARY KEY (_id);


--
-- Name: _unicode_table_edit_pkey; Type: CONSTRAINT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_edit
    ADD CONSTRAINT _unicode_table_edit_pkey PRIMARY KEY (_id);


--
-- Name: _unicode_table_insert_pkey; Type: CONSTRAINT; Schema: _sandbox; Owner: -
--

ALTER TABLE ONLY _sandbox._unicode_table_insert
    ADD CONSTRAINT _unicode_table_insert_pkey PRIMARY KEY (_id);


--
-- Name: bkg_gn250_b_pkey; Type: CONSTRAINT; Schema: boundaries; Owner: -
--

ALTER TABLE ONLY boundaries.bkg_gn250_b
    ADD CONSTRAINT bkg_gn250_b_pkey PRIMARY KEY (reference_date, id);


--
-- Name: renpass_gis_results_pkey; Type: CONSTRAINT; Schema: calc_renpass_gis; Owner: -
--

ALTER TABLE ONLY calc_renpass_gis.renpass_gis_results
    ADD CONSTRAINT renpass_gis_results_pkey PRIMARY KEY (id);


--
-- Name: renpass_gis_scenario_pkey; Type: CONSTRAINT; Schema: calc_renpass_gis; Owner: -
--

ALTER TABLE ONLY calc_renpass_gis.renpass_gis_scenario
    ADD CONSTRAINT renpass_gis_scenario_pkey PRIMARY KEY (id);


--
-- Name: ego_dp_loadarea_pkey; Type: CONSTRAINT; Schema: demand; Owner: -
--

ALTER TABLE ONLY demand.ego_dp_loadarea
    ADD CONSTRAINT ego_dp_loadarea_pkey PRIMARY KEY (version, id);


--
-- Name: Netzinsel_110kV_open_eGo_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.znes_deu_substations
    ADD CONSTRAINT "Netzinsel_110kV_open_eGo_pkey" PRIMARY KEY (id);


--
-- Name: bus_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_bus
    ADD CONSTRAINT bus_pkey PRIMARY KEY (bus_id, scn_name, version);


--
-- Name: deu_voronoi_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.deu_voronoi
    ADD CONSTRAINT deu_voronoi_pkey PRIMARY KEY (id);


--
-- Name: ego_dp_ehv_griddistrict_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_dp_ehv_griddistrict
    ADD CONSTRAINT ego_dp_ehv_griddistrict_pkey PRIMARY KEY (version, subst_id);


--
-- Name: ego_dp_hvmv_substation_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_dp_hvmv_substation
    ADD CONSTRAINT ego_dp_hvmv_substation_pkey PRIMARY KEY (version, subst_id);


--
-- Name: ego_dp_lv_griddistrict_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_dp_lv_griddistrict
    ADD CONSTRAINT ego_dp_lv_griddistrict_pkey PRIMARY KEY (version, id);


--
-- Name: ego_dp_mv_griddistrict_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_dp_mv_griddistrict
    ADD CONSTRAINT ego_dp_mv_griddistrict_pkey PRIMARY KEY (version, subst_id);


--
-- Name: ego_dp_mvlv_substation_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_dp_mvlv_substation
    ADD CONSTRAINT ego_dp_mvlv_substation_pkey PRIMARY KEY (version, mvlv_subst_id);


--
-- Name: ego_pf_hv_result_bus_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_bus
    ADD CONSTRAINT ego_pf_hv_result_bus_pkey PRIMARY KEY (bus_id, result_id);


--
-- Name: ego_pf_hv_result_bus_t_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_bus_t
    ADD CONSTRAINT ego_pf_hv_result_bus_t_pkey PRIMARY KEY (result_id, bus_id);


--
-- Name: ego_pf_hv_result_generator_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_generator
    ADD CONSTRAINT ego_pf_hv_result_generator_pkey PRIMARY KEY (result_id, generator_id);


--
-- Name: ego_pf_hv_result_generator_t_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_generator_t
    ADD CONSTRAINT ego_pf_hv_result_generator_t_pkey PRIMARY KEY (result_id, generator_id);


--
-- Name: ego_pf_hv_result_line_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_line
    ADD CONSTRAINT ego_pf_hv_result_line_pkey PRIMARY KEY (result_id, line_id);


--
-- Name: ego_pf_hv_result_line_t_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_line_t
    ADD CONSTRAINT ego_pf_hv_result_line_t_pkey PRIMARY KEY (result_id, line_id);


--
-- Name: ego_pf_hv_result_load_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_load
    ADD CONSTRAINT ego_pf_hv_result_load_pkey PRIMARY KEY (load_id, result_id);


--
-- Name: ego_pf_hv_result_load_t_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_load_t
    ADD CONSTRAINT ego_pf_hv_result_load_t_pkey PRIMARY KEY (load_id, result_id);


--
-- Name: ego_pf_hv_result_meta_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_meta
    ADD CONSTRAINT ego_pf_hv_result_meta_pkey PRIMARY KEY (result_id);


--
-- Name: ego_pf_hv_result_storage_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_storage
    ADD CONSTRAINT ego_pf_hv_result_storage_pkey PRIMARY KEY (result_id, storage_id);


--
-- Name: ego_pf_hv_result_storage_t_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_storage_t
    ADD CONSTRAINT ego_pf_hv_result_storage_t_pkey PRIMARY KEY (result_id, storage_id);


--
-- Name: ego_pf_hv_result_transformer_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_transformer
    ADD CONSTRAINT ego_pf_hv_result_transformer_pkey PRIMARY KEY (result_id, trafo_id);


--
-- Name: ego_pf_hv_result_transformer_t_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_transformer_t
    ADD CONSTRAINT ego_pf_hv_result_transformer_t_pkey PRIMARY KEY (result_id, trafo_id);


--
-- Name: generator_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_generator
    ADD CONSTRAINT generator_pkey PRIMARY KEY (generator_id, scn_name, version);


--
-- Name: generator_pq_set_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_generator_pq_set
    ADD CONSTRAINT generator_pq_set_pkey PRIMARY KEY (generator_id, temp_id, scn_name, version);


--
-- Name: line_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_line
    ADD CONSTRAINT line_pkey PRIMARY KEY (line_id, scn_name, version);


--
-- Name: load_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_load
    ADD CONSTRAINT load_pkey PRIMARY KEY (load_id, scn_name, version);


--
-- Name: load_pq_set_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_load_pq_set
    ADD CONSTRAINT load_pq_set_pkey PRIMARY KEY (load_id, scn_name, version);


--
-- Name: source_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_source
    ADD CONSTRAINT source_pkey PRIMARY KEY (source_id, version);


--
-- Name: storage_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_storage
    ADD CONSTRAINT storage_pkey PRIMARY KEY (storage_id, scn_name, version);


--
-- Name: storage_pq_set__pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_storage_pq_set
    ADD CONSTRAINT storage_pq_set__pkey PRIMARY KEY (version, scn_name, storage_id, temp_id);


--
-- Name: substations_dummy_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.substations_dummy
    ADD CONSTRAINT substations_dummy_pkey PRIMARY KEY (subst_id);


--
-- Name: temp_resolution_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_temp_resolution
    ADD CONSTRAINT temp_resolution_pkey PRIMARY KEY (temp_id, version);


--
-- Name: transformer_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_transformer
    ADD CONSTRAINT transformer_pkey PRIMARY KEY (trafo_id, scn_name, version);


--
-- Name: voronoi_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.voronoi
    ADD CONSTRAINT voronoi_pkey PRIMARY KEY (id);


--
-- Name: znes_deu_gridcells_qgis_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.znes_deu_gridcells_qgis
    ADD CONSTRAINT znes_deu_gridcells_qgis_pkey PRIMARY KEY (id);


--
-- Name: znes_deu_substations_filtered_pkey; Type: CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.znes_deu_substations_filtered
    ADD CONSTRAINT znes_deu_substations_filtered_pkey PRIMARY KEY (subst_id);


--
-- Name: bkg_vg250_20150101_1_sta_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.bkg_vg250_20150101_1_sta
    ADD CONSTRAINT bkg_vg250_20150101_1_sta_pkey PRIMARY KEY (id);


--
-- Name: bkg_vg250_20160101_1_sta_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.bkg_vg250_20160101_1_sta
    ADD CONSTRAINT bkg_vg250_20160101_1_sta_pkey PRIMARY KEY (id);


--
-- Name: bus_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_bus
    ADD CONSTRAINT bus_data_pkey PRIMARY KEY (bus_id, scn_name);


--
-- Name: bus_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_bus
    ADD CONSTRAINT bus_data_result_pkey PRIMARY KEY (result_id, bus_id);


--
-- Name: bus_t_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_bus_t
    ADD CONSTRAINT bus_t_data_result_pkey PRIMARY KEY (result_id, bus_id);


--
-- Name: bus_v_mag_set_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_bus_v_mag_set
    ADD CONSTRAINT bus_v_mag_set_pkey PRIMARY KEY (bus_id, temp_id, scn_name);


--
-- Name: dea_germany_per_load_area_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.dea_germany_per_load_area
    ADD CONSTRAINT dea_germany_per_load_area_pkey PRIMARY KEY (id);


--
-- Name: destatis_zensus_population_per_ha_inside_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.destatis_zensus_population_per_ha_inside
    ADD CONSTRAINT destatis_zensus_population_per_ha_inside_pkey PRIMARY KEY (gid);


--
-- Name: ego_data_processing_clean_run_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_data_processing_clean_run
    ADD CONSTRAINT ego_data_processing_clean_run_pkey PRIMARY KEY (id);


--
-- Name: ego_data_processing_results_mvgd_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_data_processing_results_mvgd
    ADD CONSTRAINT ego_data_processing_results_mvgd_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_data_processing_results_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_data_processing_results
    ADD CONSTRAINT ego_data_processing_results_pkey PRIMARY KEY (id);


--
-- Name: ego_dea_agricultural_sector_per_grid_district_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_dea_agricultural_sector_per_grid_district
    ADD CONSTRAINT ego_dea_agricultural_sector_per_grid_district_pkey PRIMARY KEY (id);


--
-- Name: ego_dea_allocation_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_dea_allocation
    ADD CONSTRAINT ego_dea_allocation_pkey PRIMARY KEY (id);


--
-- Name: ego_dea_per_generation_type_and_voltage_level_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_dea_per_generation_type_and_voltage_level
    ADD CONSTRAINT ego_dea_per_generation_type_and_voltage_level_pkey PRIMARY KEY (id);


--
-- Name: ego_dea_per_grid_district_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_dea_per_grid_district
    ADD CONSTRAINT ego_dea_per_grid_district_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_dea_per_load_area_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_dea_per_load_area
    ADD CONSTRAINT ego_dea_per_load_area_pkey PRIMARY KEY (id);


--
-- Name: ego_dea_per_method_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_dea_per_method
    ADD CONSTRAINT ego_dea_per_method_pkey PRIMARY KEY (name);


--
-- Name: ego_demand_hv_largescaleconsumer_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_hv_largescaleconsumer
    ADD CONSTRAINT ego_demand_hv_largescaleconsumer_pkey PRIMARY KEY (polygon_id);


--
-- Name: ego_demand_hvmv_demand_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_hvmv_demand
    ADD CONSTRAINT ego_demand_hvmv_demand_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_la_osm_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_la_osm
    ADD CONSTRAINT ego_demand_la_osm_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_la_zensus_cluster_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_la_zensus_cluster
    ADD CONSTRAINT ego_demand_la_zensus_cluster_pkey PRIMARY KEY (cid);


--
-- Name: ego_demand_la_zensus_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_la_zensus
    ADD CONSTRAINT ego_demand_la_zensus_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_load_collect_buffer100_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_load_collect_buffer100
    ADD CONSTRAINT ego_demand_load_collect_buffer100_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_load_collect_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_load_collect
    ADD CONSTRAINT ego_demand_load_collect_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_load_melt_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_load_melt
    ADD CONSTRAINT ego_demand_load_melt_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_loadarea_peak_load_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_loadarea_peak_load
    ADD CONSTRAINT ego_demand_loadarea_peak_load_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_loadarea_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_loadarea
    ADD CONSTRAINT ego_demand_loadarea_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_loadarea_temp_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_loadarea_temp
    ADD CONSTRAINT ego_demand_loadarea_temp_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_loadarea_voi_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_loadarea_voi
    ADD CONSTRAINT ego_demand_loadarea_voi_pkey PRIMARY KEY (id);


--
-- Name: ego_demand_per_district_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_per_district
    ADD CONSTRAINT ego_demand_per_district_pkey PRIMARY KEY (eu_code);


--
-- Name: ego_demand_per_gva_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_per_gva
    ADD CONSTRAINT ego_demand_per_gva_pkey PRIMARY KEY (eu_code);


--
-- Name: ego_deu_loads_osm_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_deu_loads_osm
    ADD CONSTRAINT ego_deu_loads_osm_pkey PRIMARY KEY (id);


--
-- Name: ego_deu_substations_voronoi_cut_nn_collect_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hvmv_substation_voronoi_cut_nn_collect
    ADD CONSTRAINT ego_deu_substations_voronoi_cut_nn_collect_pkey PRIMARY KEY (id);


--
-- Name: ego_ehv_substation_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_ehv_substation
    ADD CONSTRAINT ego_ehv_substation_pkey PRIMARY KEY (version, subst_id);


--
-- Name: ego_grid_ehv_substation_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_ehv_substation
    ADD CONSTRAINT ego_grid_ehv_substation_pkey PRIMARY KEY (osm_id);


--
-- Name: ego_grid_ehv_substation_voronoi_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_ehv_substation_voronoi
    ADD CONSTRAINT ego_grid_ehv_substation_voronoi_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_hvmv_substation_dummy_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hvmv_substation_dummy
    ADD CONSTRAINT ego_grid_hvmv_substation_dummy_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_hvmv_substation_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hvmv_substation
    ADD CONSTRAINT ego_grid_hvmv_substation_pkey PRIMARY KEY (osm_id);


--
-- Name: ego_grid_hvmv_substation_voronoi_cut_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hvmv_substation_voronoi_cut
    ADD CONSTRAINT ego_grid_hvmv_substation_voronoi_cut_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_hvmv_substation_voronoi_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hvmv_substation_voronoi
    ADD CONSTRAINT ego_grid_hvmv_substation_voronoi_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_lv_griddistrict_cut_0subst_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict_cut_0subst
    ADD CONSTRAINT ego_grid_lv_griddistrict_cut_0subst_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_lv_griddistrict_cut_1subst_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict_cut_1subst
    ADD CONSTRAINT ego_grid_lv_griddistrict_cut_1subst_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_lv_griddistrict_cut_nn_collect_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict_cut_nn_collect
    ADD CONSTRAINT ego_grid_lv_griddistrict_cut_nn_collect_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_lv_griddistrict_cut_nn_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict_cut_nn
    ADD CONSTRAINT ego_grid_lv_griddistrict_cut_nn_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_lv_griddistrict_cut_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict_cut
    ADD CONSTRAINT ego_grid_lv_griddistrict_cut_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_lv_griddistrict_cut_xsubst_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict_cut_xsubst
    ADD CONSTRAINT ego_grid_lv_griddistrict_cut_xsubst_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_lv_griddistrict_paper_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict_paper
    ADD CONSTRAINT ego_grid_lv_griddistrict_paper_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_lv_griddistrict_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_griddistrict
    ADD CONSTRAINT ego_grid_lv_griddistrict_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_lv_loadarea_rest_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_lv_loadarea_rest
    ADD CONSTRAINT ego_grid_lv_loadarea_rest_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_mv_griddistrict_dump_0sub_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_0sub
    ADD CONSTRAINT ego_grid_mv_griddistrict_dump_0sub_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_mv_griddistrict_dump_1sub_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_1sub
    ADD CONSTRAINT ego_grid_mv_griddistrict_dump_1sub_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_collect_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_nn_collect
    ADD CONSTRAINT ego_grid_mv_griddistrict_dump_nn_collect_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_collect_union_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_nn_collect_union
    ADD CONSTRAINT ego_grid_mv_griddistrict_dump_nn_collect_union_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_line_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_nn_line
    ADD CONSTRAINT ego_grid_mv_griddistrict_dump_nn_line_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_nn
    ADD CONSTRAINT ego_grid_mv_griddistrict_dump_nn_pkey PRIMARY KEY (a_id);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_union_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump_nn_union
    ADD CONSTRAINT ego_grid_mv_griddistrict_dump_nn_union_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_mv_griddistrict_dump_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_dump
    ADD CONSTRAINT ego_grid_mv_griddistrict_dump_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_mv_griddistrict_new_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_new
    ADD CONSTRAINT ego_grid_mv_griddistrict_new_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_mv_griddistrict_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict
    ADD CONSTRAINT ego_grid_mv_griddistrict_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_mv_griddistrict_type1_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_type1
    ADD CONSTRAINT ego_grid_mv_griddistrict_type1_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_mv_griddistrict_type2_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_type2
    ADD CONSTRAINT ego_grid_mv_griddistrict_type2_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_mv_griddistrict_type3_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_type3
    ADD CONSTRAINT ego_grid_mv_griddistrict_type3_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_mv_griddistrict_union_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_union
    ADD CONSTRAINT ego_grid_mv_griddistrict_union_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_grid_mv_visualization_branches_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_visualization_branches
    ADD CONSTRAINT ego_grid_mv_visualization_branches_pkey PRIMARY KEY (branch_id);


--
-- Name: ego_grid_mv_visualization_bunch_paper1_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_visualization_bunch_paper1
    ADD CONSTRAINT ego_grid_mv_visualization_bunch_paper1_pkey PRIMARY KEY (grid_id);


--
-- Name: ego_grid_mv_visualization_bunch_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_visualization_bunch
    ADD CONSTRAINT ego_grid_mv_visualization_bunch_pkey PRIMARY KEY (grid_id);


--
-- Name: ego_grid_mv_visualization_nodes_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_visualization_nodes
    ADD CONSTRAINT ego_grid_mv_visualization_nodes_pkey PRIMARY KEY (node_id);


--
-- Name: ego_grid_mvlv_substation_paper_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mvlv_substation_paper
    ADD CONSTRAINT ego_grid_mvlv_substation_paper_pkey PRIMARY KEY (mvlv_subst_id);


--
-- Name: ego_grid_mvlv_substation_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mvlv_substation
    ADD CONSTRAINT ego_grid_mvlv_substation_pkey PRIMARY KEY (mvlv_subst_id);


--
-- Name: ego_grid_mvlv_substation_voronoi_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mvlv_substation_voronoi
    ADD CONSTRAINT ego_grid_mvlv_substation_voronoi_pkey PRIMARY KEY (id);


--
-- Name: ego_grid_pf_hv_busmap_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_busmap
    ADD CONSTRAINT ego_grid_pf_hv_busmap_pkey PRIMARY KEY (scn_name, bus0, bus1);


--
-- Name: ego_grid_pf_mv_bus_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_bus
    ADD CONSTRAINT ego_grid_pf_mv_bus_pkey PRIMARY KEY (bus_id, scn_name);


--
-- Name: ego_grid_pf_mv_bus_v_mag_set_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_bus_v_mag_set
    ADD CONSTRAINT ego_grid_pf_mv_bus_v_mag_set_pkey PRIMARY KEY (bus_id, temp_id, scn_name);


--
-- Name: ego_grid_pf_mv_generator_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_generator
    ADD CONSTRAINT ego_grid_pf_mv_generator_pkey PRIMARY KEY (generator_id, scn_name);


--
-- Name: ego_grid_pf_mv_generator_pq_set_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_generator_pq_set
    ADD CONSTRAINT ego_grid_pf_mv_generator_pq_set_pkey PRIMARY KEY (generator_id, temp_id, scn_name);


--
-- Name: ego_grid_pf_mv_line_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_line
    ADD CONSTRAINT ego_grid_pf_mv_line_pkey PRIMARY KEY (line_id, scn_name);


--
-- Name: ego_grid_pf_mv_load_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_load
    ADD CONSTRAINT ego_grid_pf_mv_load_pkey PRIMARY KEY (load_id, scn_name);


--
-- Name: ego_grid_pf_mv_load_pq_set_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_load_pq_set
    ADD CONSTRAINT ego_grid_pf_mv_load_pq_set_pkey PRIMARY KEY (load_id, temp_id, scn_name);


--
-- Name: ego_grid_pf_mv_res_bus_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_res_bus
    ADD CONSTRAINT ego_grid_pf_mv_res_bus_pkey PRIMARY KEY (bus_id);


--
-- Name: ego_grid_pf_mv_res_line_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_res_line
    ADD CONSTRAINT ego_grid_pf_mv_res_line_pkey PRIMARY KEY (line_id);


--
-- Name: ego_grid_pf_mv_res_transformer_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_res_transformer
    ADD CONSTRAINT ego_grid_pf_mv_res_transformer_pkey PRIMARY KEY (trafo_id);


--
-- Name: ego_grid_pf_mv_scenario_settings_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_scenario_settings
    ADD CONSTRAINT ego_grid_pf_mv_scenario_settings_pkey PRIMARY KEY (scn_name);


--
-- Name: ego_grid_pf_mv_source_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_source
    ADD CONSTRAINT ego_grid_pf_mv_source_pkey PRIMARY KEY (source_id);


--
-- Name: ego_grid_pf_mv_temp_resolution_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_temp_resolution
    ADD CONSTRAINT ego_grid_pf_mv_temp_resolution_pkey PRIMARY KEY (temp_id);


--
-- Name: ego_grid_pf_mv_transformer_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_mv_transformer
    ADD CONSTRAINT ego_grid_pf_mv_transformer_pkey PRIMARY KEY (trafo_id, scn_name);


--
-- Name: ego_hvmv_substation_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_hvmv_substation
    ADD CONSTRAINT ego_hvmv_substation_pkey PRIMARY KEY (version, subst_id);


--
-- Name: ego_landuse_industry_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_landuse_industry
    ADD CONSTRAINT ego_landuse_industry_pkey PRIMARY KEY (gid);


--
-- Name: ego_lattice_360m_lv_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_lattice_360m_lv
    ADD CONSTRAINT ego_lattice_360m_lv_pkey PRIMARY KEY (id);


--
-- Name: ego_lattice_500m_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_lattice_500m
    ADD CONSTRAINT ego_lattice_500m_pkey PRIMARY KEY (id);


--
-- Name: ego_lattice_50m_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_lattice_50m
    ADD CONSTRAINT ego_lattice_50m_pkey PRIMARY KEY (id);


--
-- Name: ego_loadarea_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_loadarea
    ADD CONSTRAINT ego_loadarea_pkey PRIMARY KEY (version, id);


--
-- Name: ego_mv_griddistrict_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_mv_griddistrict
    ADD CONSTRAINT ego_mv_griddistrict_pkey PRIMARY KEY (version, subst_id);


--
-- Name: ego_osm_agriculture_per_mvgd_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_agriculture_per_mvgd
    ADD CONSTRAINT ego_osm_agriculture_per_mvgd_pkey PRIMARY KEY (id);


--
-- Name: ego_osm_deu_street_streetcrossing_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_deu_street_streetcrossing
    ADD CONSTRAINT ego_osm_deu_street_streetcrossing_pkey PRIMARY KEY (id);


--
-- Name: ego_osm_sector_per_lvgd_1_residential_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_lvgd_1_residential
    ADD CONSTRAINT ego_osm_sector_per_lvgd_1_residential_pkey PRIMARY KEY (id);


--
-- Name: ego_osm_sector_per_lvgd_2_retail_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_lvgd_2_retail
    ADD CONSTRAINT ego_osm_sector_per_lvgd_2_retail_pkey PRIMARY KEY (id);


--
-- Name: ego_osm_sector_per_lvgd_3_industrial_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_lvgd_3_industrial
    ADD CONSTRAINT ego_osm_sector_per_lvgd_3_industrial_pkey PRIMARY KEY (id);


--
-- Name: ego_osm_sector_per_lvgd_4_agricultural_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_lvgd_4_agricultural
    ADD CONSTRAINT ego_osm_sector_per_lvgd_4_agricultural_pkey PRIMARY KEY (id);


--
-- Name: ego_political_boundary_bkg_vg250_6_gem_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_political_boundary_bkg_vg250_6_gem_clean
    ADD CONSTRAINT ego_political_boundary_bkg_vg250_6_gem_pkey PRIMARY KEY (id);


--
-- Name: ego_political_boundary_hvmv_subst_per_gem_3_nn_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_political_boundary_hvmv_subst_per_gem_3_nn
    ADD CONSTRAINT ego_political_boundary_hvmv_subst_per_gem_3_nn_pkey PRIMARY KEY (mun_id);


--
-- Name: ego_political_boundary_hvmv_subst_per_gem_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_political_boundary_hvmv_subst_per_gem
    ADD CONSTRAINT ego_political_boundary_hvmv_subst_per_gem_pkey PRIMARY KEY (id);


--
-- Name: ego_scenario_log_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_scenario_log
    ADD CONSTRAINT ego_scenario_log_pkey PRIMARY KEY (id);


--
-- Name: ego_scenario_overview_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_scenario_overview
    ADD CONSTRAINT ego_scenario_overview_pkey PRIMARY KEY (id);


--
-- Name: ego_scenario_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_scenario
    ADD CONSTRAINT ego_scenario_pkey PRIMARY KEY (version);


--
-- Name: ego_small_chp_plant_germany_pk; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_small_chp_plant_germany
    ADD CONSTRAINT ego_small_chp_plant_germany_pk PRIMARY KEY (id);


--
-- Name: ego_social_zensus_load_cluster_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_social_zensus_load_cluster
    ADD CONSTRAINT ego_social_zensus_load_cluster_pkey PRIMARY KEY (cid);


--
-- Name: ego_social_zensus_load_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_social_zensus_load
    ADD CONSTRAINT ego_social_zensus_load_pkey PRIMARY KEY (id);


--
-- Name: ego_supply_conv_powerplant_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_conv_powerplant
    ADD CONSTRAINT ego_supply_conv_powerplant_pkey PRIMARY KEY (gid);


--
-- Name: ego_supply_generator_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_generator
    ADD CONSTRAINT ego_supply_generator_pkey PRIMARY KEY (un_id);


--
-- Name: ego_supply_generator_test_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_generator_test
    ADD CONSTRAINT ego_supply_generator_test_pkey PRIMARY KEY (un_id);


--
-- Name: ego_supply_rea_2035_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea_2035
    ADD CONSTRAINT ego_supply_rea_2035_pkey PRIMARY KEY (id);


--
-- Name: ego_supply_rea_2050_out_nn_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea_2050_out_nn
    ADD CONSTRAINT ego_supply_rea_2050_out_nn_pkey PRIMARY KEY (dea_id);


--
-- Name: ego_supply_rea_2050_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea_2050
    ADD CONSTRAINT ego_supply_rea_2050_pkey PRIMARY KEY (id);


--
-- Name: ego_supply_rea_m2_windfarm_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea_m2_windfarm
    ADD CONSTRAINT ego_supply_rea_m2_windfarm_pkey PRIMARY KEY (farm_id);


--
-- Name: ego_supply_rea_per_gentype_and_voltlevel_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea_per_gentype_and_voltlevel
    ADD CONSTRAINT ego_supply_rea_per_gentype_and_voltlevel_pkey PRIMARY KEY (id);


--
-- Name: ego_supply_rea_per_loadarea_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea_per_loadarea
    ADD CONSTRAINT ego_supply_rea_per_loadarea_pkey PRIMARY KEY (id);


--
-- Name: ego_supply_rea_per_method_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea_per_method
    ADD CONSTRAINT ego_supply_rea_per_method_pkey PRIMARY KEY (name);


--
-- Name: ego_supply_rea_per_mvgd_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea_per_mvgd
    ADD CONSTRAINT ego_supply_rea_per_mvgd_pkey PRIMARY KEY (subst_id);


--
-- Name: ego_supply_rea_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_rea
    ADD CONSTRAINT ego_supply_rea_pkey PRIMARY KEY (id);


--
-- Name: ego_supply_res_powerplant_2035_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_res_powerplant_2035
    ADD CONSTRAINT ego_supply_res_powerplant_2035_pkey PRIMARY KEY (id);


--
-- Name: ego_supply_res_powerplant_2050_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_res_powerplant_2050
    ADD CONSTRAINT ego_supply_res_powerplant_2050_pkey PRIMARY KEY (id);


--
-- Name: ego_supply_res_powerplant_germany_to_region_2050_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_res_powerplant_germany_to_region_2050
    ADD CONSTRAINT ego_supply_res_powerplant_germany_to_region_2050_pkey PRIMARY KEY (re_id);


--
-- Name: ego_supply_res_powerplant_germany_to_region_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_res_powerplant_germany_to_region
    ADD CONSTRAINT ego_supply_res_powerplant_germany_to_region_pkey PRIMARY KEY (re_id);


--
-- Name: ego_supply_res_powerplant_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_res_powerplant
    ADD CONSTRAINT ego_supply_res_powerplant_pkey PRIMARY KEY (id);


--
-- Name: ego_supply_wpa_per_mvgd_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_wpa_per_mvgd
    ADD CONSTRAINT ego_supply_wpa_per_mvgd_pkey PRIMARY KEY (id);


--
-- Name: example_table_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.example_table
    ADD CONSTRAINT example_table_pkey PRIMARY KEY (id);


--
-- Name: ext_load_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_extension_load
    ADD CONSTRAINT ext_load_data_pkey PRIMARY KEY (load_id, scn_name);


--
-- Name: extension_load_pq_set_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_extension_load_pq_set
    ADD CONSTRAINT extension_load_pq_set_pkey PRIMARY KEY (load_id, temp_id, scn_name);


--
-- Name: extension_storage_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_extension_storage
    ADD CONSTRAINT extension_storage_data_pkey PRIMARY KEY (storage_id, scn_name);


--
-- Name: extension_storage_pq_set_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_extension_storage_pq_set
    ADD CONSTRAINT extension_storage_pq_set_pkey PRIMARY KEY (storage_id, temp_id, scn_name);


--
-- Name: generator_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_generator
    ADD CONSTRAINT generator_data_pkey PRIMARY KEY (generator_id, scn_name);


--
-- Name: generator_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_generator
    ADD CONSTRAINT generator_data_result_pkey PRIMARY KEY (result_id, generator_id);


--
-- Name: generator_pq_set_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_generator_pq_set
    ADD CONSTRAINT generator_pq_set_pkey PRIMARY KEY (generator_id, temp_id, scn_name);


--
-- Name: generator_single_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_pf_generator_single
    ADD CONSTRAINT generator_single_data_pkey PRIMARY KEY (scn_name, generator_id);


--
-- Name: generator_t_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_generator_t
    ADD CONSTRAINT generator_t_data_result_pkey PRIMARY KEY (result_id, generator_id);


--
-- Name: generators_total_nep2035_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_generator_nep2035
    ADD CONSTRAINT generators_total_nep2035_pkey PRIMARY KEY (un_id);


--
-- Name: grid_district_collect_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_mv_griddistrict_collect
    ADD CONSTRAINT grid_district_collect_pkey PRIMARY KEY (id);


--
-- Name: ioer_urban_share_industrial_centroid_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ioer_urban_share_industrial_centroid
    ADD CONSTRAINT ioer_urban_share_industrial_centroid_pkey PRIMARY KEY (id);


--
-- Name: landuse_calc_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.landuse_calc
    ADD CONSTRAINT landuse_calc_pkey PRIMARY KEY (id);


--
-- Name: line_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_line
    ADD CONSTRAINT line_data_pkey PRIMARY KEY (line_id, scn_name);


--
-- Name: line_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_line
    ADD CONSTRAINT line_data_result_pkey PRIMARY KEY (result_id, line_id);


--
-- Name: line_t_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_line_t
    ADD CONSTRAINT line_t_data_result_pkey PRIMARY KEY (result_id, line_id);


--
-- Name: link_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_nep2035_link
    ADD CONSTRAINT link_data_pkey PRIMARY KEY (link_id, scn_name);


--
-- Name: load_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_load
    ADD CONSTRAINT load_data_pkey PRIMARY KEY (load_id, scn_name);


--
-- Name: load_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_load
    ADD CONSTRAINT load_data_result_pkey PRIMARY KEY (load_id, result_id);


--
-- Name: load_pq_set_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_load_pq_set
    ADD CONSTRAINT load_pq_set_pkey PRIMARY KEY (load_id, temp_id, scn_name);


--
-- Name: load_single_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_pf_load_single
    ADD CONSTRAINT load_single_pkey PRIMARY KEY (load_id);


--
-- Name: load_t_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_load_t
    ADD CONSTRAINT load_t_data_result_pkey PRIMARY KEY (load_id, result_id);


--
-- Name: loads_total_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_loads
    ADD CONSTRAINT loads_total_pkey PRIMARY KEY (un_id);


--
-- Name: neighbour_bus_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hv_electrical_neighbours_bus
    ADD CONSTRAINT neighbour_bus_pkey PRIMARY KEY (bus_id, scn_name);


--
-- Name: neighbour_line_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hv_electrical_neighbours_line
    ADD CONSTRAINT neighbour_line_pkey PRIMARY KEY (line_id, scn_name);


--
-- Name: neighbour_transformer_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_hv_electrical_neighbours_transformer
    ADD CONSTRAINT neighbour_transformer_pkey PRIMARY KEY (trafo_id, scn_name);


--
-- Name: nep_link_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_extension_link
    ADD CONSTRAINT nep_link_data_pkey PRIMARY KEY (link_id, scn_name);


--
-- Name: nep_transformer_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_extension_transformer
    ADD CONSTRAINT nep_transformer_pkey PRIMARY KEY (trafo_id, scn_name);


--
-- Name: renpassgis_economic_weatherpoint_voronoi_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.renpassgis_economic_weatherpoint_voronoi
    ADD CONSTRAINT renpassgis_economic_weatherpoint_voronoi_pkey PRIMARY KEY (id);


--
-- Name: result_meta_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_meta
    ADD CONSTRAINT result_meta_pkey PRIMARY KEY (result_id);


--
-- Name: scenario_settings_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_scenario_settings
    ADD CONSTRAINT scenario_settings_pkey PRIMARY KEY (scn_name);


--
-- Name: source_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_source
    ADD CONSTRAINT source_data_pkey PRIMARY KEY (source_id);


--
-- Name: storage_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_storage
    ADD CONSTRAINT storage_data_pkey PRIMARY KEY (storage_id, scn_name);


--
-- Name: storage_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_storage
    ADD CONSTRAINT storage_data_result_pkey PRIMARY KEY (result_id, storage_id);


--
-- Name: storage_data_t_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_storage_t
    ADD CONSTRAINT storage_data_t_result_pkey PRIMARY KEY (result_id, storage_id);


--
-- Name: storage_pq_set_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_storage_pq_set
    ADD CONSTRAINT storage_pq_set_pkey PRIMARY KEY (storage_id, temp_id, scn_name);


--
-- Name: temp_resolution_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_temp_resolution
    ADD CONSTRAINT temp_resolution_pkey PRIMARY KEY (temp_id);


--
-- Name: template_table_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.template_table
    ADD CONSTRAINT template_table_pkey PRIMARY KEY (id);


--
-- Name: transformer_data_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_transformer
    ADD CONSTRAINT transformer_data_pkey PRIMARY KEY (trafo_id, scn_name);


--
-- Name: transformer_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_transformer
    ADD CONSTRAINT transformer_data_result_pkey PRIMARY KEY (result_id, trafo_id);


--
-- Name: transformer_t_data_result_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_result_transformer_t
    ADD CONSTRAINT transformer_t_data_result_pkey PRIMARY KEY (result_id, trafo_id);


--
-- Name: unique_substation; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_ehv_substation
    ADD CONSTRAINT unique_substation UNIQUE (subst_id);


--
-- Name: urban_sector_per_grid_district_1_residential_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_griddistrict_1_residential
    ADD CONSTRAINT urban_sector_per_grid_district_1_residential_pkey PRIMARY KEY (id);


--
-- Name: urban_sector_per_grid_district_2_retail_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_griddistrict_2_retail
    ADD CONSTRAINT urban_sector_per_grid_district_2_retail_pkey PRIMARY KEY (id);


--
-- Name: urban_sector_per_grid_district_3_industrial_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_griddistrict_3_industrial
    ADD CONSTRAINT urban_sector_per_grid_district_3_industrial_pkey PRIMARY KEY (id);


--
-- Name: urban_sector_per_grid_district_4_agricultural_pkey; Type: CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_osm_sector_per_griddistrict_4_agricultural
    ADD CONSTRAINT urban_sector_per_grid_district_4_agricultural_pkey PRIMARY KEY (id);


--
-- Name: _edit_base_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public._edit_base
    ADD CONSTRAINT _edit_base_pkey PRIMARY KEY (_id);


--
-- Name: _edit_new_base_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public._edit_new_base
    ADD CONSTRAINT _edit_new_base_pkey PRIMARY KEY (_id);


--
-- Name: alembic_version_pkc; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.alembic_version
    ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


--
-- Name: ckan_datastore_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ckan_datastore
    ADD CONSTRAINT ckan_datastore_pkey PRIMARY KEY (id);


--
-- Name: model_tags_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.model_tags
    ADD CONSTRAINT model_tags_pkey PRIMARY KEY (tag, model);


--
-- Name: pkey_api_columns; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.api_columns
    ADD CONSTRAINT pkey_api_columns PRIMARY KEY (id);


--
-- Name: pkey_api_constraints; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.api_constraints
    ADD CONSTRAINT pkey_api_constraints PRIMARY KEY (id);


--
-- Name: reference_to_entries_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.reference_to_entries
    ADD CONSTRAINT reference_to_entries_pkey PRIMARY KEY (ref_id);


--
-- Name: search_query_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.search_query
    ADD CONSTRAINT search_query_pkey PRIMARY KEY (id);


--
-- Name: tag_query_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tag_query
    ADD CONSTRAINT tag_query_pkey PRIMARY KEY (id);


--
-- Name: tags_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);


--
-- Name: entries_pkey; Type: CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entries
    ADD CONSTRAINT entries_pkey PRIMARY KEY (entries_id);


--
-- Name: entry_group_pkey; Type: CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entry_group
    ADD CONSTRAINT entry_group_pkey PRIMARY KEY (groups_id, entries_id);


--
-- Name: entry_types_pkey; Type: CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entry_types
    ADD CONSTRAINT entry_types_pkey PRIMARY KEY (entry_types_id);


--
-- Name: group_types_pkey; Type: CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.group_types
    ADD CONSTRAINT group_types_pkey PRIMARY KEY (group_types_id);


--
-- Name: groups_pkey; Type: CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.groups
    ADD CONSTRAINT groups_pkey PRIMARY KEY (groups_id);


--
-- Name: jabref_database_pkey; Type: CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.jabref_database
    ADD CONSTRAINT jabref_database_pkey PRIMARY KEY (database_id);


--
-- Name: reference_to_entries_pkey; Type: CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.reference_to_entries
    ADD CONSTRAINT reference_to_entries_pkey PRIMARY KEY (ref_id);


--
-- Name: strings_pkey; Type: CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.strings
    ADD CONSTRAINT strings_pkey PRIMARY KEY (strings_id);


--
-- Name: autoinc_pk_pkey; Type: CONSTRAINT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.autoinc_pk
    ADD CONSTRAINT autoinc_pk_pkey PRIMARY KEY (id);


--
-- Name: comment_test_pkey; Type: CONSTRAINT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.comment_test
    ADD CONSTRAINT comment_test_pkey PRIMARY KEY (id);


--
-- Name: includes_defaults_pkey; Type: CONSTRAINT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.includes_defaults
    ADD CONSTRAINT includes_defaults_pkey PRIMARY KEY (id);


--
-- Name: manual_pk_pkey; Type: CONSTRAINT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.manual_pk
    ADD CONSTRAINT manual_pk_pkey PRIMARY KEY (id);


--
-- Name: unicode_table_pkey; Type: CONSTRAINT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.unicode_table
    ADD CONSTRAINT unicode_table_pkey PRIMARY KEY (id);


--
-- Name: user_tmp_pkey; Type: CONSTRAINT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.user_tmp
    ADD CONSTRAINT user_tmp_pkey PRIMARY KEY (id);


--
-- Name: user_tmp_uq; Type: CONSTRAINT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.user_tmp
    ADD CONSTRAINT user_tmp_uq UNIQUE (name);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (user_id);


--
-- Name: table_all_columns_pkey; Type: CONSTRAINT; Schema: schema1; Owner: -
--

ALTER TABLE ONLY schema1.table_all_columns
    ADD CONSTRAINT table_all_columns_pkey PRIMARY KEY (id);


--
-- Name: table_defaults_pkey; Type: CONSTRAINT; Schema: schema1; Owner: -
--

ALTER TABLE ONLY schema1.table_defaults
    ADD CONSTRAINT table_defaults_pkey PRIMARY KEY (id);


--
-- Name: test_enviroment_population2_id_pkey; Type: CONSTRAINT; Schema: schema1; Owner: -
--

ALTER TABLE ONLY schema1.population2
    ADD CONSTRAINT test_enviroment_population2_id_pkey PRIMARY KEY (id);


--
-- Name: ego_dp_conv_powerplant_pkey; Type: CONSTRAINT; Schema: supply; Owner: -
--

ALTER TABLE ONLY supply.ego_dp_conv_powerplant
    ADD CONSTRAINT ego_dp_conv_powerplant_pkey PRIMARY KEY (version, gid);


--
-- Name: ego_dp_res_powerplant_pkey; Type: CONSTRAINT; Schema: supply; Owner: -
--

ALTER TABLE ONLY supply.ego_dp_res_powerplant
    ADD CONSTRAINT ego_dp_res_powerplant_pkey PRIMARY KEY (version, id);


--
-- Name: forwind_oeko_renewable_capacity_per_federalstate_pkey; Type: CONSTRAINT; Schema: supply; Owner: -
--

ALTER TABLE ONLY supply.forwind_oeko_renewable_capacity_per_federalstate
    ADD CONSTRAINT forwind_oeko_renewable_capacity_per_federalstate_pkey PRIMARY KEY (id);


--
-- Name: opsd_power_plants_germany_pkey; Type: CONSTRAINT; Schema: supply; Owner: -
--

ALTER TABLE ONLY supply.ego_conventional_powerplant
    ADD CONSTRAINT opsd_power_plants_germany_pkey PRIMARY KEY (gid);


--
-- Name: table_all_columns_pkey; Type: CONSTRAINT; Schema: test; Owner: -
--

ALTER TABLE ONLY test.table_all_columns
    ADD CONSTRAINT table_all_columns_pkey PRIMARY KEY (id);


--
-- Name: table_defaults_pkey; Type: CONSTRAINT; Schema: test; Owner: -
--

ALTER TABLE ONLY test.table_defaults
    ADD CONSTRAINT table_defaults_pkey PRIMARY KEY (id);


--
-- Name: ego_dp_loadarea_geom_idx; Type: INDEX; Schema: demand; Owner: -
--

CREATE INDEX ego_dp_loadarea_geom_idx ON demand.ego_dp_loadarea USING gist (geom);


--
-- Name: ego_dp_ehv_griddistrict_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX ego_dp_ehv_griddistrict_geom_idx ON grid.ego_dp_ehv_griddistrict USING gist (geom);


--
-- Name: ego_dp_hvmv_substation_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX ego_dp_hvmv_substation_geom_idx ON grid.ego_dp_hvmv_substation USING gist (geom);


--
-- Name: ego_dp_lv_griddistrict_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX ego_dp_lv_griddistrict_geom_idx ON grid.ego_dp_lv_griddistrict USING gist (geom);


--
-- Name: ego_dp_mv_griddistrict_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX ego_dp_mv_griddistrict_geom_idx ON grid.ego_dp_mv_griddistrict USING gist (geom);


--
-- Name: ego_dp_mvlv_substation_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX ego_dp_mvlv_substation_geom_idx ON grid.ego_dp_mvlv_substation USING gist (geom);


--
-- Name: ego_pf_hv_bus_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX ego_pf_hv_bus_geom_idx ON grid.ego_pf_hv_bus USING gist (geom);


--
-- Name: ego_pf_hv_result_bus_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX ego_pf_hv_result_bus_geom_idx ON grid.ego_pf_hv_result_bus USING gist (geom);


--
-- Name: voronoi_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX voronoi_geom_idx ON grid.voronoi USING gist (geom);


--
-- Name: voronoi_germany_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX voronoi_germany_geom_idx ON grid.deu_voronoi USING gist (geom);


--
-- Name: znes_deu_gridcells_qgis_geom_idx; Type: INDEX; Schema: grid; Owner: -
--

CREATE INDEX znes_deu_gridcells_qgis_geom_idx ON grid.znes_deu_gridcells_qgis USING gist (geom);


--
-- Name: ego_data_processing_results_mvgd_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_data_processing_results_mvgd_geom_idx ON model_draft.ego_data_processing_results_mvgd USING gist (geom);


--
-- Name: ego_dea_agricultural_sector_per_grid_district_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_dea_agricultural_sector_per_grid_district_geom_idx ON model_draft.ego_dea_agricultural_sector_per_grid_district USING gist (geom);


--
-- Name: ego_dea_allocation_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_dea_allocation_geom_idx ON model_draft.ego_dea_allocation USING gist (geom);


--
-- Name: ego_dea_allocation_geom_line_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_dea_allocation_geom_line_idx ON model_draft.ego_dea_allocation USING gist (geom_line);


--
-- Name: ego_dea_allocation_geom_new_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_dea_allocation_geom_new_idx ON model_draft.ego_dea_allocation USING gist (geom_new);


--
-- Name: ego_demand_la_osm_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_la_osm_geom_idx ON model_draft.ego_demand_la_osm USING gist (geom);


--
-- Name: ego_demand_la_zensus_cluster_geom_centroid_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_la_zensus_cluster_geom_centroid_idx ON model_draft.ego_demand_la_zensus_cluster USING gist (geom_centroid);


--
-- Name: ego_demand_la_zensus_cluster_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_la_zensus_cluster_geom_idx ON model_draft.ego_demand_la_zensus_cluster USING gist (geom);


--
-- Name: ego_demand_la_zensus_cluster_geom_surfacepoint_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_la_zensus_cluster_geom_surfacepoint_idx ON model_draft.ego_demand_la_zensus_cluster USING gist (geom_surfacepoint);


--
-- Name: ego_demand_la_zensus_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_la_zensus_geom_idx ON model_draft.ego_demand_la_zensus USING gist (geom);


--
-- Name: ego_demand_la_zensus_geom_point_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_la_zensus_geom_point_idx ON model_draft.ego_demand_la_zensus USING gist (geom_point);


--
-- Name: ego_demand_load_collect_buffer100_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_load_collect_buffer100_geom_idx ON model_draft.ego_demand_load_collect_buffer100 USING gist (geom);


--
-- Name: ego_demand_load_collect_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_load_collect_geom_idx ON model_draft.ego_demand_load_collect USING gist (geom);


--
-- Name: ego_demand_load_melt_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_load_melt_geom_idx ON model_draft.ego_demand_load_melt USING gist (geom);


--
-- Name: ego_demand_loadarea_geom_centre_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_loadarea_geom_centre_idx ON model_draft.ego_demand_loadarea USING gist (geom_centre);


--
-- Name: ego_demand_loadarea_geom_centroid_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_loadarea_geom_centroid_idx ON model_draft.ego_demand_loadarea USING gist (geom_centroid);


--
-- Name: ego_demand_loadarea_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_loadarea_geom_idx ON model_draft.ego_demand_loadarea USING gist (geom);


--
-- Name: ego_demand_loadarea_geom_surfacepoint_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_loadarea_geom_surfacepoint_idx ON model_draft.ego_demand_loadarea USING gist (geom_surfacepoint);


--
-- Name: ego_demand_loadarea_voi_geom_centre_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_loadarea_voi_geom_centre_idx ON model_draft.ego_demand_loadarea_voi USING gist (geom_centre);


--
-- Name: ego_demand_loadarea_voi_geom_centroid_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_loadarea_voi_geom_centroid_idx ON model_draft.ego_demand_loadarea_voi USING gist (geom_centroid);


--
-- Name: ego_demand_loadarea_voi_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_loadarea_voi_geom_idx ON model_draft.ego_demand_loadarea_voi USING gist (geom);


--
-- Name: ego_demand_loadarea_voi_geom_surfacepoint_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_demand_loadarea_voi_geom_surfacepoint_idx ON model_draft.ego_demand_loadarea_voi USING gist (geom_surfacepoint);


--
-- Name: ego_deu_loads_osm_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_deu_loads_osm_geom_idx ON model_draft.ego_deu_loads_osm USING gist (geom);


--
-- Name: ego_grid_hvmv_substation_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_hvmv_substation_geom_idx ON model_draft.ego_grid_hvmv_substation USING gist (geom);


--
-- Name: ego_grid_hvmv_substation_voronoi_cut_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_hvmv_substation_voronoi_cut_geom_idx ON model_draft.ego_grid_hvmv_substation_voronoi_cut USING gist (geom);


--
-- Name: ego_grid_hvmv_substation_voronoi_cut_geom_sub_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_hvmv_substation_voronoi_cut_geom_sub_idx ON model_draft.ego_grid_hvmv_substation_voronoi_cut USING gist (geom_sub);


--
-- Name: ego_grid_hvmv_substation_voronoi_cut_nn_collect_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_hvmv_substation_voronoi_cut_nn_collect_geom_idx ON model_draft.ego_grid_hvmv_substation_voronoi_cut_nn_collect USING gist (geom);


--
-- Name: ego_grid_hvmv_substation_voronoi_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_hvmv_substation_voronoi_geom_idx ON model_draft.ego_grid_hvmv_substation_voronoi USING gist (geom);


--
-- Name: ego_grid_lv_griddistrict_cut_0subst_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_griddistrict_cut_0subst_geom_idx ON model_draft.ego_grid_lv_griddistrict_cut_0subst USING gist (geom);


--
-- Name: ego_grid_lv_griddistrict_cut_1subst_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_griddistrict_cut_1subst_geom_idx ON model_draft.ego_grid_lv_griddistrict_cut_1subst USING gist (geom);


--
-- Name: ego_grid_lv_griddistrict_cut_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_griddistrict_cut_geom_idx ON model_draft.ego_grid_lv_griddistrict_cut USING gist (geom);


--
-- Name: ego_grid_lv_griddistrict_cut_nn_ageom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_griddistrict_cut_nn_ageom_idx ON model_draft.ego_grid_lv_griddistrict_cut_nn USING gist (geom);


--
-- Name: ego_grid_lv_griddistrict_cut_nn_collect_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_griddistrict_cut_nn_collect_geom_idx ON model_draft.ego_grid_lv_griddistrict_cut_nn_collect USING gist (geom);


--
-- Name: ego_grid_lv_griddistrict_cut_nn_geom_line_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_griddistrict_cut_nn_geom_line_idx ON model_draft.ego_grid_lv_griddistrict_cut_nn USING gist (geom_line);


--
-- Name: ego_grid_lv_griddistrict_cut_xsubst_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_griddistrict_cut_xsubst_geom_idx ON model_draft.ego_grid_lv_griddistrict_cut_xsubst USING gist (geom);


--
-- Name: ego_grid_lv_griddistrict_gidx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_griddistrict_gidx ON model_draft.ego_grid_lv_griddistrict USING gist (geom);


--
-- Name: ego_grid_lv_griddistrict_paper_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_griddistrict_paper_geom_idx ON model_draft.ego_grid_lv_griddistrict_paper USING gist (geom);


--
-- Name: ego_grid_lv_loadarea_rest_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_loadarea_rest_geom_idx ON model_draft.ego_grid_lv_loadarea_rest USING gist (geom);


--
-- Name: ego_grid_lv_loadarea_rest_geom_point_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_lv_loadarea_rest_geom_point_idx ON model_draft.ego_grid_lv_loadarea_rest USING gist (geom_point);


--
-- Name: ego_grid_mv_griddistrict_collect_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_collect_geom_idx ON model_draft.ego_grid_mv_griddistrict_collect USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_collect_geom_sub_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_collect_geom_sub_idx ON model_draft.ego_grid_mv_griddistrict_collect USING gist (geom_sub);


--
-- Name: ego_grid_mv_griddistrict_dump_0sub_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_dump_0sub_geom_idx ON model_draft.ego_grid_mv_griddistrict_dump_0sub USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_dump_1sub_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_dump_1sub_geom_idx ON model_draft.ego_grid_mv_griddistrict_dump_1sub USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_dump_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_dump_geom_idx ON model_draft.ego_grid_mv_griddistrict_dump USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_dump_geom_point_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_dump_geom_point_idx ON model_draft.ego_grid_mv_griddistrict_dump USING gist (geom_point);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_collect_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_dump_nn_collect_geom_idx ON model_draft.ego_grid_mv_griddistrict_dump_nn_collect USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_collect_union_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_dump_nn_collect_union_geom_idx ON model_draft.ego_grid_mv_griddistrict_dump_nn_collect_union USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_line_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_dump_nn_line_geom_idx ON model_draft.ego_grid_mv_griddistrict_dump_nn_line USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_dump_nn_union_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_dump_nn_union_geom_idx ON model_draft.ego_grid_mv_griddistrict_dump_nn_union USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_geom_idx ON model_draft.ego_grid_mv_griddistrict USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_new_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_new_geom_idx ON model_draft.ego_grid_mv_griddistrict_new USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_type1_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_type1_geom_idx ON model_draft.ego_grid_mv_griddistrict_type1 USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_type1_geom_subst_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_type1_geom_subst_idx ON model_draft.ego_grid_mv_griddistrict_type1 USING gist (geom_sub);


--
-- Name: ego_grid_mv_griddistrict_type2_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_type2_geom_idx ON model_draft.ego_grid_mv_griddistrict_type2 USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_type2_geom_sub_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_type2_geom_sub_idx ON model_draft.ego_grid_mv_griddistrict_type2 USING gist (geom_sub);


--
-- Name: ego_grid_mv_griddistrict_type3_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_type3_geom_idx ON model_draft.ego_grid_mv_griddistrict_type3 USING gist (geom);


--
-- Name: ego_grid_mv_griddistrict_type3_geom_sub_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_type3_geom_sub_idx ON model_draft.ego_grid_mv_griddistrict_type3 USING gist (geom_sub);


--
-- Name: ego_grid_mv_griddistrict_union_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mv_griddistrict_union_geom_idx ON model_draft.ego_grid_mv_griddistrict_union USING gist (geom);


--
-- Name: ego_grid_mvlv_substation_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mvlv_substation_geom_idx ON model_draft.ego_grid_mvlv_substation USING gist (geom);


--
-- Name: ego_grid_mvlv_substation_paper_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mvlv_substation_paper_geom_idx ON model_draft.ego_grid_mvlv_substation_paper USING gist (geom);


--
-- Name: ego_grid_mvlv_substation_voronoi_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_grid_mvlv_substation_voronoi_geom_idx ON model_draft.ego_grid_mvlv_substation_voronoi USING gist (geom);


--
-- Name: ego_lattice_360m_lv_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_lattice_360m_lv_geom_idx ON model_draft.ego_lattice_360m_lv USING gist (geom);


--
-- Name: ego_lattice_500m_geom_box_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_lattice_500m_geom_box_idx ON model_draft.ego_lattice_500m USING gist (geom_box);


--
-- Name: ego_lattice_500m_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_lattice_500m_geom_idx ON model_draft.ego_lattice_500m USING gist (geom);


--
-- Name: ego_lattice_50m_geom_box_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_lattice_50m_geom_box_idx ON model_draft.ego_lattice_50m USING gist (geom_box);


--
-- Name: ego_lattice_50m_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_lattice_50m_geom_idx ON model_draft.ego_lattice_50m USING gist (geom);


--
-- Name: ego_osm_agriculture_per_mvgd_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_osm_agriculture_per_mvgd_geom_idx ON model_draft.ego_osm_agriculture_per_mvgd USING gist (geom);


--
-- Name: ego_osm_deu_street_streetcrossing_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_osm_deu_street_streetcrossing_geom_idx ON model_draft.ego_osm_deu_street_streetcrossing USING gist (geom);


--
-- Name: ego_osm_sector_per_lvgd_1_residential_gidx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_osm_sector_per_lvgd_1_residential_gidx ON model_draft.ego_osm_sector_per_lvgd_1_residential USING gist (geom);


--
-- Name: ego_osm_sector_per_lvgd_2_retail_gidx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_osm_sector_per_lvgd_2_retail_gidx ON model_draft.ego_osm_sector_per_lvgd_2_retail USING gist (geom);


--
-- Name: ego_osm_sector_per_lvgd_3_industrial_gidx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_osm_sector_per_lvgd_3_industrial_gidx ON model_draft.ego_osm_sector_per_lvgd_3_industrial USING gist (geom);


--
-- Name: ego_osm_sector_per_lvgd_4_agricultural_gidx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_osm_sector_per_lvgd_4_agricultural_gidx ON model_draft.ego_osm_sector_per_lvgd_4_agricultural USING gist (geom);


--
-- Name: ego_political_boundary_bkg_vg250_6_gem_clean_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_political_boundary_bkg_vg250_6_gem_clean_geom_idx ON model_draft.ego_political_boundary_bkg_vg250_6_gem_clean USING gist (geom);


--
-- Name: ego_political_boundary_hvmv_subst_per_gem_3_nn_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_political_boundary_hvmv_subst_per_gem_3_nn_geom_idx ON model_draft.ego_political_boundary_hvmv_subst_per_gem_3_nn USING gist (geom);


--
-- Name: ego_political_boundary_hvmv_subst_per_gem_3_nn_geom_subst_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_political_boundary_hvmv_subst_per_gem_3_nn_geom_subst_idx ON model_draft.ego_political_boundary_hvmv_subst_per_gem_3_nn USING gist (geom_sub);


--
-- Name: ego_political_boundary_hvmv_subst_per_gem_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_political_boundary_hvmv_subst_per_gem_geom_idx ON model_draft.ego_political_boundary_hvmv_subst_per_gem USING gist (geom);


--
-- Name: ego_social_zensus_load_cluster_geom_centroid_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_social_zensus_load_cluster_geom_centroid_idx ON model_draft.ego_social_zensus_load_cluster USING gist (geom_centroid);


--
-- Name: ego_social_zensus_load_cluster_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_social_zensus_load_cluster_geom_idx ON model_draft.ego_social_zensus_load_cluster USING gist (geom);


--
-- Name: ego_social_zensus_load_cluster_geom_surfacepoint_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_social_zensus_load_cluster_geom_surfacepoint_idx ON model_draft.ego_social_zensus_load_cluster USING gist (geom_surfacepoint);


--
-- Name: ego_social_zensus_load_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_social_zensus_load_geom_idx ON model_draft.ego_social_zensus_load USING gist (geom);


--
-- Name: ego_social_zensus_load_geom_point_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_social_zensus_load_geom_point_idx ON model_draft.ego_social_zensus_load USING gist (geom_point);


--
-- Name: ego_supply_conv_powerplant_2035_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_conv_powerplant_2035_idx ON model_draft.ego_supply_conv_powerplant_2035 USING gist (geom);


--
-- Name: ego_supply_conv_powerplant_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_conv_powerplant_idx ON model_draft.ego_supply_conv_powerplant USING gist (geom);


--
-- Name: ego_supply_generator_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_generator_idx ON model_draft.ego_supply_generator USING gist (geom);


--
-- Name: ego_supply_generator_test_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_generator_test_idx ON model_draft.ego_supply_generator_test USING gist (geom);


--
-- Name: ego_supply_rea_2050_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_rea_2050_geom_idx ON model_draft.ego_supply_rea_2050 USING gist (geom);


--
-- Name: ego_supply_rea_2050_geom_line_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_rea_2050_geom_line_idx ON model_draft.ego_supply_rea_2050 USING gist (geom_line);


--
-- Name: ego_supply_rea_2050_geom_new_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_rea_2050_geom_new_idx ON model_draft.ego_supply_rea_2050 USING gist (geom_new);


--
-- Name: ego_supply_rea_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_rea_geom_idx ON model_draft.ego_supply_rea USING gist (geom);


--
-- Name: ego_supply_rea_geom_line_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_rea_geom_line_idx ON model_draft.ego_supply_rea USING gist (geom_line);


--
-- Name: ego_supply_rea_geom_new_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_rea_geom_new_idx ON model_draft.ego_supply_rea USING gist (geom_new);


--
-- Name: ego_supply_rea_m2_windfarm_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_rea_m2_windfarm_geom_idx ON model_draft.ego_supply_rea_m2_windfarm USING gist (geom);


--
-- Name: ego_supply_rea_per_mvgd_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_rea_per_mvgd_geom_idx ON model_draft.ego_supply_rea_per_mvgd USING gist (geom);


--
-- Name: ego_supply_res_powerplant_2035_gt_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_res_powerplant_2035_gt_idx ON model_draft.ego_supply_res_powerplant_2035 USING btree (generation_type);


--
-- Name: ego_supply_res_powerplant_2035_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_res_powerplant_2035_idx ON model_draft.ego_supply_res_powerplant_2035 USING gist (geom);


--
-- Name: ego_supply_res_powerplant_2050_gt_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_res_powerplant_2050_gt_idx ON model_draft.ego_supply_res_powerplant_2050 USING btree (generation_type);


--
-- Name: ego_supply_res_powerplant_2050_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_res_powerplant_2050_idx ON model_draft.ego_supply_res_powerplant_2050 USING gist (geom);


--
-- Name: ego_supply_res_powerplant_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_res_powerplant_idx ON model_draft.ego_supply_res_powerplant USING gist (geom);


--
-- Name: ego_supply_wpa_per_mvgd_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ego_supply_wpa_per_mvgd_geom_idx ON model_draft.ego_supply_wpa_per_mvgd USING gist (geom);


--
-- Name: fki_generator_data_source_fk; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX fki_generator_data_source_fk ON model_draft.ego_grid_pf_hv_generator USING btree (source);


--
-- Name: fki_storage_data_source_fk; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX fki_storage_data_source_fk ON model_draft.ego_grid_pf_hv_storage USING btree (source);


--
-- Name: fki_trafo_data_bus0_fk; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX fki_trafo_data_bus0_fk ON model_draft.ego_grid_pf_hv_transformer USING btree (bus0);


--
-- Name: fki_trafo_data_bus1_fk; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX fki_trafo_data_bus1_fk ON model_draft.ego_grid_pf_hv_transformer USING btree (bus1);


--
-- Name: generators_nep2035_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX generators_nep2035_idx ON model_draft.ego_supply_generator_nep2035 USING gist (geom);


--
-- Name: idx_ego_grid_mv_visualization_branches_geom; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_branches_geom ON model_draft.ego_grid_mv_visualization_branches USING gist (geom);


--
-- Name: idx_ego_grid_mv_visualization_bunch_geom_lv_load_area_centres; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_geom_lv_load_area_centres ON model_draft.ego_grid_mv_visualization_bunch USING gist (geom_lv_load_area_centres);


--
-- Name: idx_ego_grid_mv_visualization_bunch_geom_lv_stations; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_geom_lv_stations ON model_draft.ego_grid_mv_visualization_bunch USING gist (geom_lv_stations);


--
-- Name: idx_ego_grid_mv_visualization_bunch_geom_mv_cable_dists; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_geom_mv_cable_dists ON model_draft.ego_grid_mv_visualization_bunch USING gist (geom_mv_cable_dists);


--
-- Name: idx_ego_grid_mv_visualization_bunch_geom_mv_circuit_breakers; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_geom_mv_circuit_breakers ON model_draft.ego_grid_mv_visualization_bunch USING gist (geom_mv_circuit_breakers);


--
-- Name: idx_ego_grid_mv_visualization_bunch_geom_mv_generators; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_geom_mv_generators ON model_draft.ego_grid_mv_visualization_bunch USING gist (geom_mv_generators);


--
-- Name: idx_ego_grid_mv_visualization_bunch_geom_mv_lines; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_geom_mv_lines ON model_draft.ego_grid_mv_visualization_bunch USING gist (geom_mv_lines);


--
-- Name: idx_ego_grid_mv_visualization_bunch_geom_mv_station; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_geom_mv_station ON model_draft.ego_grid_mv_visualization_bunch USING gist (geom_mv_station);


--
-- Name: idx_ego_grid_mv_visualization_bunch_paper1_geom_lv_load_area_ce; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_paper1_geom_lv_load_area_ce ON model_draft.ego_grid_mv_visualization_bunch_paper1 USING gist (geom_lv_load_area_centres);


--
-- Name: idx_ego_grid_mv_visualization_bunch_paper1_geom_lv_stations; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_paper1_geom_lv_stations ON model_draft.ego_grid_mv_visualization_bunch_paper1 USING gist (geom_lv_stations);


--
-- Name: idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_cable_dists; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_cable_dists ON model_draft.ego_grid_mv_visualization_bunch_paper1 USING gist (geom_mv_cable_dists);


--
-- Name: idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_circuit_brea; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_circuit_brea ON model_draft.ego_grid_mv_visualization_bunch_paper1 USING gist (geom_mv_circuit_breakers);


--
-- Name: idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_generators; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_generators ON model_draft.ego_grid_mv_visualization_bunch_paper1 USING gist (geom_mv_generators);


--
-- Name: idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_lines; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_lines ON model_draft.ego_grid_mv_visualization_bunch_paper1 USING gist (geom_mv_lines);


--
-- Name: idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_station; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_bunch_paper1_geom_mv_station ON model_draft.ego_grid_mv_visualization_bunch_paper1 USING gist (geom_mv_station);


--
-- Name: idx_ego_grid_mv_visualization_nodes_geom; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX idx_ego_grid_mv_visualization_nodes_geom ON model_draft.ego_grid_mv_visualization_nodes USING gist (geom);


--
-- Name: ioer_urban_share_industrial_centroid_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ioer_urban_share_industrial_centroid_geom_idx ON model_draft.ioer_urban_share_industrial_centroid USING gist (geom);


--
-- Name: ix_model_draft_ego_demand_loadarea_peak_load_id; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX ix_model_draft_ego_demand_loadarea_peak_load_id ON model_draft.ego_demand_loadarea_peak_load USING btree (id);


--
-- Name: landuse_industry_geom_centre_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX landuse_industry_geom_centre_idx ON model_draft.ego_landuse_industry USING gist (geom_centre);


--
-- Name: landuse_industry_geom_centroid_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX landuse_industry_geom_centroid_idx ON model_draft.ego_landuse_industry USING gist (geom_centroid);


--
-- Name: landuse_industry_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX landuse_industry_geom_idx ON model_draft.ego_landuse_industry USING gist (geom);


--
-- Name: landuse_industry_geom_surfacepoint_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX landuse_industry_geom_surfacepoint_idx ON model_draft.ego_landuse_industry USING gist (geom_surfacepoint);


--
-- Name: large_scale_consumer_geom_centre_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX large_scale_consumer_geom_centre_idx ON model_draft.ego_demand_hv_largescaleconsumer USING gist (geom_centre);


--
-- Name: large_scale_consumer_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX large_scale_consumer_geom_idx ON model_draft.ego_demand_hv_largescaleconsumer USING gist (geom);


--
-- Name: loads_total_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX loads_total_idx ON model_draft.ego_demand_loads USING gist (geom);


--
-- Name: substations_dummy_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX substations_dummy_geom_idx ON model_draft.ego_grid_hvmv_substation_dummy USING gist (geom);


--
-- Name: template_table_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX template_table_geom_idx ON model_draft.template_table USING gist (geom);


--
-- Name: template_table_geom_poly_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX template_table_geom_poly_idx ON model_draft.template_table USING gist (geom_poly);


--
-- Name: urban_sector_per_grid_district_1_residential_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX urban_sector_per_grid_district_1_residential_geom_idx ON model_draft.ego_osm_sector_per_griddistrict_1_residential USING gist (geom);


--
-- Name: urban_sector_per_grid_district_2_retail_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX urban_sector_per_grid_district_2_retail_geom_idx ON model_draft.ego_osm_sector_per_griddistrict_2_retail USING gist (geom);


--
-- Name: urban_sector_per_grid_district_3_industrial_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX urban_sector_per_grid_district_3_industrial_geom_idx ON model_draft.ego_osm_sector_per_griddistrict_3_industrial USING gist (geom);


--
-- Name: urban_sector_per_grid_district_4_agricultural_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX urban_sector_per_grid_district_4_agricultural_geom_idx ON model_draft.ego_osm_sector_per_griddistrict_4_agricultural USING gist (geom);


--
-- Name: voronoi_ehv_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX voronoi_ehv_geom_idx ON model_draft.ego_grid_ehv_substation_voronoi USING gist (geom);


--
-- Name: voronoi_weatherpoint_geom_idx; Type: INDEX; Schema: model_draft; Owner: -
--

CREATE INDEX voronoi_weatherpoint_geom_idx ON model_draft.renpassgis_economic_weatherpoint_voronoi USING gist (geom);


--
-- Name: ego_dp_conv_powerplant_geom_idx; Type: INDEX; Schema: supply; Owner: -
--

CREATE INDEX ego_dp_conv_powerplant_geom_idx ON supply.ego_dp_conv_powerplant USING gist (geom);


--
-- Name: ego_dp_res_powerplant_geom_idx; Type: INDEX; Schema: supply; Owner: -
--

CREATE INDEX ego_dp_res_powerplant_geom_idx ON supply.ego_dp_res_powerplant USING gist (geom);


--
-- Name: ego_dp_res_powerplant_rea_geom_new_idx; Type: INDEX; Schema: supply; Owner: -
--

CREATE INDEX ego_dp_res_powerplant_rea_geom_new_idx ON supply.ego_dp_res_powerplant USING gist (rea_geom_new);


--
-- Name: results_scenario_fkey; Type: FK CONSTRAINT; Schema: calc_renpass_gis; Owner: -
--

ALTER TABLE ONLY calc_renpass_gis.renpass_gis_results
    ADD CONSTRAINT results_scenario_fkey FOREIGN KEY (scenario_id) REFERENCES calc_renpass_gis.renpass_gis_scenario(id);


--
-- Name: ego_pf_hv_result_bus_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_bus
    ADD CONSTRAINT ego_pf_hv_result_bus_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_bus_t_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_bus_t
    ADD CONSTRAINT ego_pf_hv_result_bus_t_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_generator_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_generator
    ADD CONSTRAINT ego_pf_hv_result_generator_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_generator_t_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_generator_t
    ADD CONSTRAINT ego_pf_hv_result_generator_t_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_line_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_line
    ADD CONSTRAINT ego_pf_hv_result_line_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_line_t_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_line_t
    ADD CONSTRAINT ego_pf_hv_result_line_t_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_load_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_load
    ADD CONSTRAINT ego_pf_hv_result_load_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_load_t_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_load_t
    ADD CONSTRAINT ego_pf_hv_result_load_t_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_storage_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_storage
    ADD CONSTRAINT ego_pf_hv_result_storage_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_storage_t_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_storage_t
    ADD CONSTRAINT ego_pf_hv_result_storage_t_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_transformer_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_transformer
    ADD CONSTRAINT ego_pf_hv_result_transformer_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: ego_pf_hv_result_transformer_t_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.ego_pf_hv_result_transformer_t
    ADD CONSTRAINT ego_pf_hv_result_transformer_t_fkey FOREIGN KEY (result_id) REFERENCES grid.ego_pf_hv_result_meta(result_id);


--
-- Name: subst_id_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: -
--

ALTER TABLE ONLY grid.znes_deu_gridcells_qgis
    ADD CONSTRAINT subst_id_fkey FOREIGN KEY (subst_id) REFERENCES grid.znes_deu_substations_filtered(subst_id);


--
-- Name: bus_v_mag_set_temp_fkey; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_bus_v_mag_set
    ADD CONSTRAINT bus_v_mag_set_temp_fkey FOREIGN KEY (temp_id) REFERENCES model_draft.ego_grid_pf_hv_temp_resolution(temp_id);


--
-- Name: extension_load_pq_set_temp_fkey; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_extension_load_pq_set
    ADD CONSTRAINT extension_load_pq_set_temp_fkey FOREIGN KEY (temp_id) REFERENCES model_draft.ego_grid_pf_hv_temp_resolution(temp_id);


--
-- Name: generator_data_source_fk; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_supply_pf_generator_single
    ADD CONSTRAINT generator_data_source_fk FOREIGN KEY (source) REFERENCES model_draft.ego_grid_pf_hv_source(source_id);


--
-- Name: generator_data_source_fkey; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_generator
    ADD CONSTRAINT generator_data_source_fkey FOREIGN KEY (source) REFERENCES model_draft.ego_grid_pf_hv_source(source_id);


--
-- Name: generator_data_source_fkey; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_extension_generator
    ADD CONSTRAINT generator_data_source_fkey FOREIGN KEY (source) REFERENCES model_draft.ego_grid_pf_hv_source(source_id);


--
-- Name: generator_pq_set_temp_fkey; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_generator_pq_set
    ADD CONSTRAINT generator_pq_set_temp_fkey FOREIGN KEY (temp_id) REFERENCES model_draft.ego_grid_pf_hv_temp_resolution(temp_id);


--
-- Name: generator_pq_set_temp_fkey; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_extension_generator_pq_set
    ADD CONSTRAINT generator_pq_set_temp_fkey FOREIGN KEY (temp_id) REFERENCES model_draft.ego_grid_pf_hv_temp_resolution(temp_id);


--
-- Name: load_data_bus_fk; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_demand_pf_load_single
    ADD CONSTRAINT load_data_bus_fk FOREIGN KEY (bus, scn_name) REFERENCES model_draft.ego_grid_pf_hv_bus(bus_id, scn_name);


--
-- Name: load_pq_set_temp_fkey; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_load_pq_set
    ADD CONSTRAINT load_pq_set_temp_fkey FOREIGN KEY (temp_id) REFERENCES model_draft.ego_grid_pf_hv_temp_resolution(temp_id);


--
-- Name: storage_data_source_fkey; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_storage
    ADD CONSTRAINT storage_data_source_fkey FOREIGN KEY (source) REFERENCES model_draft.ego_grid_pf_hv_source(source_id);


--
-- Name: storage_pq_set_temp_fkey; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_pf_hv_storage_pq_set
    ADD CONSTRAINT storage_pq_set_temp_fkey FOREIGN KEY (temp_id) REFERENCES model_draft.ego_grid_pf_hv_temp_resolution(temp_id);


--
-- Name: subst_fk; Type: FK CONSTRAINT; Schema: model_draft; Owner: -
--

ALTER TABLE ONLY model_draft.ego_grid_ehv_substation_voronoi
    ADD CONSTRAINT subst_fk FOREIGN KEY (subst_id) REFERENCES model_draft.ego_grid_ehv_substation(subst_id);


--
-- Name: model_tags_tag_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.model_tags
    ADD CONSTRAINT model_tags_tag_fkey FOREIGN KEY (tag) REFERENCES public.tags(id);


--
-- Name: table_tags_tag_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.table_tags
    ADD CONSTRAINT table_tags_tag_fkey FOREIGN KEY (tag) REFERENCES public.tags(id);


--
-- Name: tag_query_query_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tag_query
    ADD CONSTRAINT tag_query_query_id_fkey FOREIGN KEY (query_id) REFERENCES public.search_query(id);


--
-- Name: tag_query_tag_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.tag_query
    ADD CONSTRAINT tag_query_tag_fkey FOREIGN KEY (tag) REFERENCES public.tags(id);


--
-- Name: entries_database_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entries
    ADD CONSTRAINT entries_database_id_fkey FOREIGN KEY (database_id) REFERENCES reference.jabref_database(database_id);


--
-- Name: entries_entry_types_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entries
    ADD CONSTRAINT entries_entry_types_id_fkey FOREIGN KEY (entry_types_id) REFERENCES reference.entry_types(entry_types_id);


--
-- Name: entry_group_entries_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entry_group
    ADD CONSTRAINT entry_group_entries_id_fkey FOREIGN KEY (entries_id) REFERENCES reference.entries(entries_id) ON DELETE CASCADE;


--
-- Name: entry_group_groups_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.entry_group
    ADD CONSTRAINT entry_group_groups_id_fkey FOREIGN KEY (groups_id) REFERENCES reference.groups(groups_id);


--
-- Name: groups_database_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.groups
    ADD CONSTRAINT groups_database_id_fkey FOREIGN KEY (database_id) REFERENCES reference.jabref_database(database_id);


--
-- Name: strings_database_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: -
--

ALTER TABLE ONLY reference.strings
    ADD CONSTRAINT strings_database_id_fkey FOREIGN KEY (database_id) REFERENCES reference.jabref_database(database_id);


--
-- Name: users_parent_user_id_fkey; Type: FK CONSTRAINT; Schema: sandbox; Owner: -
--

ALTER TABLE ONLY sandbox.users
    ADD CONSTRAINT users_parent_user_id_fkey FOREIGN KEY (parent_user_id) REFERENCES sandbox.users(user_id);


--
-- PostgreSQL database dump complete
--

